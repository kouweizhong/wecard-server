// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Communication.proto

package com.ninelook.wecard.protocol;

public final class Communication {
  private Communication() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface HeshReqMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:HeshReqMessage)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int32 mid = 1;</code>
     *
     * <pre>
     *SYSTEM-MESSAGE ID
     * </pre>
     */
    boolean hasMid();
    /**
     * <code>required int32 mid = 1;</code>
     *
     * <pre>
     *SYSTEM-MESSAGE ID
     * </pre>
     */
    int getMid();

    /**
     * <code>required int64 uid = 2;</code>
     *
     * <pre>
     *SYSTEM-USER ID
     * </pre>
     */
    boolean hasUid();
    /**
     * <code>required int64 uid = 2;</code>
     *
     * <pre>
     *SYSTEM-USER ID
     * </pre>
     */
    long getUid();

    /**
     * <code>optional .SceneReqMessage sceneReqMessage = 10;</code>
     *
     * <pre>
     *&#47;///////////////////////
     * //////////API///////////
     * ////////////////////////
     *API - 场景层
     * </pre>
     */
    boolean hasSceneReqMessage();
    /**
     * <code>optional .SceneReqMessage sceneReqMessage = 10;</code>
     *
     * <pre>
     *&#47;///////////////////////
     * //////////API///////////
     * ////////////////////////
     *API - 场景层
     * </pre>
     */
    com.ninelook.wecard.protocol.Request.SceneReqMessage getSceneReqMessage();
    /**
     * <code>optional .SceneReqMessage sceneReqMessage = 10;</code>
     *
     * <pre>
     *&#47;///////////////////////
     * //////////API///////////
     * ////////////////////////
     *API - 场景层
     * </pre>
     */
    com.ninelook.wecard.protocol.Request.SceneReqMessageOrBuilder getSceneReqMessageOrBuilder();

    /**
     * <code>optional .ServiceReqMessage serviceReqMessage = 11;</code>
     *
     * <pre>
     *API - 服务层
     * </pre>
     */
    boolean hasServiceReqMessage();
    /**
     * <code>optional .ServiceReqMessage serviceReqMessage = 11;</code>
     *
     * <pre>
     *API - 服务层
     * </pre>
     */
    com.ninelook.wecard.protocol.Request.ServiceReqMessage getServiceReqMessage();
    /**
     * <code>optional .ServiceReqMessage serviceReqMessage = 11;</code>
     *
     * <pre>
     *API - 服务层
     * </pre>
     */
    com.ninelook.wecard.protocol.Request.ServiceReqMessageOrBuilder getServiceReqMessageOrBuilder();
  }
  /**
   * Protobuf type {@code HeshReqMessage}
   *
   * <pre>
   *Hesh Req Message
   * </pre>
   */
  public static final class HeshReqMessage extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:HeshReqMessage)
      HeshReqMessageOrBuilder {
    // Use HeshReqMessage.newBuilder() to construct.
    private HeshReqMessage(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private HeshReqMessage(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final HeshReqMessage defaultInstance;
    public static HeshReqMessage getDefaultInstance() {
      return defaultInstance;
    }

    public HeshReqMessage getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private HeshReqMessage(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              mid_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              uid_ = input.readInt64();
              break;
            }
            case 82: {
              com.ninelook.wecard.protocol.Request.SceneReqMessage.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = sceneReqMessage_.toBuilder();
              }
              sceneReqMessage_ = input.readMessage(com.ninelook.wecard.protocol.Request.SceneReqMessage.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(sceneReqMessage_);
                sceneReqMessage_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 90: {
              com.ninelook.wecard.protocol.Request.ServiceReqMessage.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = serviceReqMessage_.toBuilder();
              }
              serviceReqMessage_ = input.readMessage(com.ninelook.wecard.protocol.Request.ServiceReqMessage.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serviceReqMessage_);
                serviceReqMessage_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.ninelook.wecard.protocol.Communication.internal_static_HeshReqMessage_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.ninelook.wecard.protocol.Communication.internal_static_HeshReqMessage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.ninelook.wecard.protocol.Communication.HeshReqMessage.class, com.ninelook.wecard.protocol.Communication.HeshReqMessage.Builder.class);
    }

    public static com.google.protobuf.Parser<HeshReqMessage> PARSER =
        new com.google.protobuf.AbstractParser<HeshReqMessage>() {
      public HeshReqMessage parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new HeshReqMessage(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<HeshReqMessage> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int MID_FIELD_NUMBER = 1;
    private int mid_;
    /**
     * <code>required int32 mid = 1;</code>
     *
     * <pre>
     *SYSTEM-MESSAGE ID
     * </pre>
     */
    public boolean hasMid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 mid = 1;</code>
     *
     * <pre>
     *SYSTEM-MESSAGE ID
     * </pre>
     */
    public int getMid() {
      return mid_;
    }

    public static final int UID_FIELD_NUMBER = 2;
    private long uid_;
    /**
     * <code>required int64 uid = 2;</code>
     *
     * <pre>
     *SYSTEM-USER ID
     * </pre>
     */
    public boolean hasUid() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int64 uid = 2;</code>
     *
     * <pre>
     *SYSTEM-USER ID
     * </pre>
     */
    public long getUid() {
      return uid_;
    }

    public static final int SCENEREQMESSAGE_FIELD_NUMBER = 10;
    private com.ninelook.wecard.protocol.Request.SceneReqMessage sceneReqMessage_;
    /**
     * <code>optional .SceneReqMessage sceneReqMessage = 10;</code>
     *
     * <pre>
     *&#47;///////////////////////
     * //////////API///////////
     * ////////////////////////
     *API - 场景层
     * </pre>
     */
    public boolean hasSceneReqMessage() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .SceneReqMessage sceneReqMessage = 10;</code>
     *
     * <pre>
     *&#47;///////////////////////
     * //////////API///////////
     * ////////////////////////
     *API - 场景层
     * </pre>
     */
    public com.ninelook.wecard.protocol.Request.SceneReqMessage getSceneReqMessage() {
      return sceneReqMessage_;
    }
    /**
     * <code>optional .SceneReqMessage sceneReqMessage = 10;</code>
     *
     * <pre>
     *&#47;///////////////////////
     * //////////API///////////
     * ////////////////////////
     *API - 场景层
     * </pre>
     */
    public com.ninelook.wecard.protocol.Request.SceneReqMessageOrBuilder getSceneReqMessageOrBuilder() {
      return sceneReqMessage_;
    }

    public static final int SERVICEREQMESSAGE_FIELD_NUMBER = 11;
    private com.ninelook.wecard.protocol.Request.ServiceReqMessage serviceReqMessage_;
    /**
     * <code>optional .ServiceReqMessage serviceReqMessage = 11;</code>
     *
     * <pre>
     *API - 服务层
     * </pre>
     */
    public boolean hasServiceReqMessage() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .ServiceReqMessage serviceReqMessage = 11;</code>
     *
     * <pre>
     *API - 服务层
     * </pre>
     */
    public com.ninelook.wecard.protocol.Request.ServiceReqMessage getServiceReqMessage() {
      return serviceReqMessage_;
    }
    /**
     * <code>optional .ServiceReqMessage serviceReqMessage = 11;</code>
     *
     * <pre>
     *API - 服务层
     * </pre>
     */
    public com.ninelook.wecard.protocol.Request.ServiceReqMessageOrBuilder getServiceReqMessageOrBuilder() {
      return serviceReqMessage_;
    }

    private void initFields() {
      mid_ = 0;
      uid_ = 0L;
      sceneReqMessage_ = com.ninelook.wecard.protocol.Request.SceneReqMessage.getDefaultInstance();
      serviceReqMessage_ = com.ninelook.wecard.protocol.Request.ServiceReqMessage.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasMid()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasUid()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasSceneReqMessage()) {
        if (!getSceneReqMessage().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasServiceReqMessage()) {
        if (!getServiceReqMessage().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, mid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, uid_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(10, sceneReqMessage_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(11, serviceReqMessage_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, mid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, uid_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, sceneReqMessage_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, serviceReqMessage_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ninelook.wecard.protocol.Communication.HeshReqMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ninelook.wecard.protocol.Communication.HeshReqMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ninelook.wecard.protocol.Communication.HeshReqMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ninelook.wecard.protocol.Communication.HeshReqMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ninelook.wecard.protocol.Communication.HeshReqMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ninelook.wecard.protocol.Communication.HeshReqMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ninelook.wecard.protocol.Communication.HeshReqMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ninelook.wecard.protocol.Communication.HeshReqMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ninelook.wecard.protocol.Communication.HeshReqMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ninelook.wecard.protocol.Communication.HeshReqMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ninelook.wecard.protocol.Communication.HeshReqMessage prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code HeshReqMessage}
     *
     * <pre>
     *Hesh Req Message
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:HeshReqMessage)
        com.ninelook.wecard.protocol.Communication.HeshReqMessageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.ninelook.wecard.protocol.Communication.internal_static_HeshReqMessage_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.ninelook.wecard.protocol.Communication.internal_static_HeshReqMessage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.ninelook.wecard.protocol.Communication.HeshReqMessage.class, com.ninelook.wecard.protocol.Communication.HeshReqMessage.Builder.class);
      }

      // Construct using com.ninelook.wecard.protocol.Communication.HeshReqMessage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getSceneReqMessageFieldBuilder();
          getServiceReqMessageFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        mid_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        uid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (sceneReqMessageBuilder_ == null) {
          sceneReqMessage_ = com.ninelook.wecard.protocol.Request.SceneReqMessage.getDefaultInstance();
        } else {
          sceneReqMessageBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        if (serviceReqMessageBuilder_ == null) {
          serviceReqMessage_ = com.ninelook.wecard.protocol.Request.ServiceReqMessage.getDefaultInstance();
        } else {
          serviceReqMessageBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.ninelook.wecard.protocol.Communication.internal_static_HeshReqMessage_descriptor;
      }

      public com.ninelook.wecard.protocol.Communication.HeshReqMessage getDefaultInstanceForType() {
        return com.ninelook.wecard.protocol.Communication.HeshReqMessage.getDefaultInstance();
      }

      public com.ninelook.wecard.protocol.Communication.HeshReqMessage build() {
        com.ninelook.wecard.protocol.Communication.HeshReqMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ninelook.wecard.protocol.Communication.HeshReqMessage buildPartial() {
        com.ninelook.wecard.protocol.Communication.HeshReqMessage result = new com.ninelook.wecard.protocol.Communication.HeshReqMessage(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.mid_ = mid_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.uid_ = uid_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (sceneReqMessageBuilder_ == null) {
          result.sceneReqMessage_ = sceneReqMessage_;
        } else {
          result.sceneReqMessage_ = sceneReqMessageBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (serviceReqMessageBuilder_ == null) {
          result.serviceReqMessage_ = serviceReqMessage_;
        } else {
          result.serviceReqMessage_ = serviceReqMessageBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.ninelook.wecard.protocol.Communication.HeshReqMessage) {
          return mergeFrom((com.ninelook.wecard.protocol.Communication.HeshReqMessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.ninelook.wecard.protocol.Communication.HeshReqMessage other) {
        if (other == com.ninelook.wecard.protocol.Communication.HeshReqMessage.getDefaultInstance()) return this;
        if (other.hasMid()) {
          setMid(other.getMid());
        }
        if (other.hasUid()) {
          setUid(other.getUid());
        }
        if (other.hasSceneReqMessage()) {
          mergeSceneReqMessage(other.getSceneReqMessage());
        }
        if (other.hasServiceReqMessage()) {
          mergeServiceReqMessage(other.getServiceReqMessage());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasMid()) {
          
          return false;
        }
        if (!hasUid()) {
          
          return false;
        }
        if (hasSceneReqMessage()) {
          if (!getSceneReqMessage().isInitialized()) {
            
            return false;
          }
        }
        if (hasServiceReqMessage()) {
          if (!getServiceReqMessage().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ninelook.wecard.protocol.Communication.HeshReqMessage parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ninelook.wecard.protocol.Communication.HeshReqMessage) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int mid_ ;
      /**
       * <code>required int32 mid = 1;</code>
       *
       * <pre>
       *SYSTEM-MESSAGE ID
       * </pre>
       */
      public boolean hasMid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 mid = 1;</code>
       *
       * <pre>
       *SYSTEM-MESSAGE ID
       * </pre>
       */
      public int getMid() {
        return mid_;
      }
      /**
       * <code>required int32 mid = 1;</code>
       *
       * <pre>
       *SYSTEM-MESSAGE ID
       * </pre>
       */
      public Builder setMid(int value) {
        bitField0_ |= 0x00000001;
        mid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 mid = 1;</code>
       *
       * <pre>
       *SYSTEM-MESSAGE ID
       * </pre>
       */
      public Builder clearMid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        mid_ = 0;
        onChanged();
        return this;
      }

      private long uid_ ;
      /**
       * <code>required int64 uid = 2;</code>
       *
       * <pre>
       *SYSTEM-USER ID
       * </pre>
       */
      public boolean hasUid() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int64 uid = 2;</code>
       *
       * <pre>
       *SYSTEM-USER ID
       * </pre>
       */
      public long getUid() {
        return uid_;
      }
      /**
       * <code>required int64 uid = 2;</code>
       *
       * <pre>
       *SYSTEM-USER ID
       * </pre>
       */
      public Builder setUid(long value) {
        bitField0_ |= 0x00000002;
        uid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 uid = 2;</code>
       *
       * <pre>
       *SYSTEM-USER ID
       * </pre>
       */
      public Builder clearUid() {
        bitField0_ = (bitField0_ & ~0x00000002);
        uid_ = 0L;
        onChanged();
        return this;
      }

      private com.ninelook.wecard.protocol.Request.SceneReqMessage sceneReqMessage_ = com.ninelook.wecard.protocol.Request.SceneReqMessage.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.ninelook.wecard.protocol.Request.SceneReqMessage, com.ninelook.wecard.protocol.Request.SceneReqMessage.Builder, com.ninelook.wecard.protocol.Request.SceneReqMessageOrBuilder> sceneReqMessageBuilder_;
      /**
       * <code>optional .SceneReqMessage sceneReqMessage = 10;</code>
       *
       * <pre>
       *&#47;///////////////////////
       * //////////API///////////
       * ////////////////////////
       *API - 场景层
       * </pre>
       */
      public boolean hasSceneReqMessage() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .SceneReqMessage sceneReqMessage = 10;</code>
       *
       * <pre>
       *&#47;///////////////////////
       * //////////API///////////
       * ////////////////////////
       *API - 场景层
       * </pre>
       */
      public com.ninelook.wecard.protocol.Request.SceneReqMessage getSceneReqMessage() {
        if (sceneReqMessageBuilder_ == null) {
          return sceneReqMessage_;
        } else {
          return sceneReqMessageBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .SceneReqMessage sceneReqMessage = 10;</code>
       *
       * <pre>
       *&#47;///////////////////////
       * //////////API///////////
       * ////////////////////////
       *API - 场景层
       * </pre>
       */
      public Builder setSceneReqMessage(com.ninelook.wecard.protocol.Request.SceneReqMessage value) {
        if (sceneReqMessageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          sceneReqMessage_ = value;
          onChanged();
        } else {
          sceneReqMessageBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .SceneReqMessage sceneReqMessage = 10;</code>
       *
       * <pre>
       *&#47;///////////////////////
       * //////////API///////////
       * ////////////////////////
       *API - 场景层
       * </pre>
       */
      public Builder setSceneReqMessage(
          com.ninelook.wecard.protocol.Request.SceneReqMessage.Builder builderForValue) {
        if (sceneReqMessageBuilder_ == null) {
          sceneReqMessage_ = builderForValue.build();
          onChanged();
        } else {
          sceneReqMessageBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .SceneReqMessage sceneReqMessage = 10;</code>
       *
       * <pre>
       *&#47;///////////////////////
       * //////////API///////////
       * ////////////////////////
       *API - 场景层
       * </pre>
       */
      public Builder mergeSceneReqMessage(com.ninelook.wecard.protocol.Request.SceneReqMessage value) {
        if (sceneReqMessageBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              sceneReqMessage_ != com.ninelook.wecard.protocol.Request.SceneReqMessage.getDefaultInstance()) {
            sceneReqMessage_ =
              com.ninelook.wecard.protocol.Request.SceneReqMessage.newBuilder(sceneReqMessage_).mergeFrom(value).buildPartial();
          } else {
            sceneReqMessage_ = value;
          }
          onChanged();
        } else {
          sceneReqMessageBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .SceneReqMessage sceneReqMessage = 10;</code>
       *
       * <pre>
       *&#47;///////////////////////
       * //////////API///////////
       * ////////////////////////
       *API - 场景层
       * </pre>
       */
      public Builder clearSceneReqMessage() {
        if (sceneReqMessageBuilder_ == null) {
          sceneReqMessage_ = com.ninelook.wecard.protocol.Request.SceneReqMessage.getDefaultInstance();
          onChanged();
        } else {
          sceneReqMessageBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .SceneReqMessage sceneReqMessage = 10;</code>
       *
       * <pre>
       *&#47;///////////////////////
       * //////////API///////////
       * ////////////////////////
       *API - 场景层
       * </pre>
       */
      public com.ninelook.wecard.protocol.Request.SceneReqMessage.Builder getSceneReqMessageBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getSceneReqMessageFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .SceneReqMessage sceneReqMessage = 10;</code>
       *
       * <pre>
       *&#47;///////////////////////
       * //////////API///////////
       * ////////////////////////
       *API - 场景层
       * </pre>
       */
      public com.ninelook.wecard.protocol.Request.SceneReqMessageOrBuilder getSceneReqMessageOrBuilder() {
        if (sceneReqMessageBuilder_ != null) {
          return sceneReqMessageBuilder_.getMessageOrBuilder();
        } else {
          return sceneReqMessage_;
        }
      }
      /**
       * <code>optional .SceneReqMessage sceneReqMessage = 10;</code>
       *
       * <pre>
       *&#47;///////////////////////
       * //////////API///////////
       * ////////////////////////
       *API - 场景层
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.ninelook.wecard.protocol.Request.SceneReqMessage, com.ninelook.wecard.protocol.Request.SceneReqMessage.Builder, com.ninelook.wecard.protocol.Request.SceneReqMessageOrBuilder> 
          getSceneReqMessageFieldBuilder() {
        if (sceneReqMessageBuilder_ == null) {
          sceneReqMessageBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.ninelook.wecard.protocol.Request.SceneReqMessage, com.ninelook.wecard.protocol.Request.SceneReqMessage.Builder, com.ninelook.wecard.protocol.Request.SceneReqMessageOrBuilder>(
                  getSceneReqMessage(),
                  getParentForChildren(),
                  isClean());
          sceneReqMessage_ = null;
        }
        return sceneReqMessageBuilder_;
      }

      private com.ninelook.wecard.protocol.Request.ServiceReqMessage serviceReqMessage_ = com.ninelook.wecard.protocol.Request.ServiceReqMessage.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.ninelook.wecard.protocol.Request.ServiceReqMessage, com.ninelook.wecard.protocol.Request.ServiceReqMessage.Builder, com.ninelook.wecard.protocol.Request.ServiceReqMessageOrBuilder> serviceReqMessageBuilder_;
      /**
       * <code>optional .ServiceReqMessage serviceReqMessage = 11;</code>
       *
       * <pre>
       *API - 服务层
       * </pre>
       */
      public boolean hasServiceReqMessage() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .ServiceReqMessage serviceReqMessage = 11;</code>
       *
       * <pre>
       *API - 服务层
       * </pre>
       */
      public com.ninelook.wecard.protocol.Request.ServiceReqMessage getServiceReqMessage() {
        if (serviceReqMessageBuilder_ == null) {
          return serviceReqMessage_;
        } else {
          return serviceReqMessageBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .ServiceReqMessage serviceReqMessage = 11;</code>
       *
       * <pre>
       *API - 服务层
       * </pre>
       */
      public Builder setServiceReqMessage(com.ninelook.wecard.protocol.Request.ServiceReqMessage value) {
        if (serviceReqMessageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serviceReqMessage_ = value;
          onChanged();
        } else {
          serviceReqMessageBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .ServiceReqMessage serviceReqMessage = 11;</code>
       *
       * <pre>
       *API - 服务层
       * </pre>
       */
      public Builder setServiceReqMessage(
          com.ninelook.wecard.protocol.Request.ServiceReqMessage.Builder builderForValue) {
        if (serviceReqMessageBuilder_ == null) {
          serviceReqMessage_ = builderForValue.build();
          onChanged();
        } else {
          serviceReqMessageBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .ServiceReqMessage serviceReqMessage = 11;</code>
       *
       * <pre>
       *API - 服务层
       * </pre>
       */
      public Builder mergeServiceReqMessage(com.ninelook.wecard.protocol.Request.ServiceReqMessage value) {
        if (serviceReqMessageBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              serviceReqMessage_ != com.ninelook.wecard.protocol.Request.ServiceReqMessage.getDefaultInstance()) {
            serviceReqMessage_ =
              com.ninelook.wecard.protocol.Request.ServiceReqMessage.newBuilder(serviceReqMessage_).mergeFrom(value).buildPartial();
          } else {
            serviceReqMessage_ = value;
          }
          onChanged();
        } else {
          serviceReqMessageBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .ServiceReqMessage serviceReqMessage = 11;</code>
       *
       * <pre>
       *API - 服务层
       * </pre>
       */
      public Builder clearServiceReqMessage() {
        if (serviceReqMessageBuilder_ == null) {
          serviceReqMessage_ = com.ninelook.wecard.protocol.Request.ServiceReqMessage.getDefaultInstance();
          onChanged();
        } else {
          serviceReqMessageBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <code>optional .ServiceReqMessage serviceReqMessage = 11;</code>
       *
       * <pre>
       *API - 服务层
       * </pre>
       */
      public com.ninelook.wecard.protocol.Request.ServiceReqMessage.Builder getServiceReqMessageBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getServiceReqMessageFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .ServiceReqMessage serviceReqMessage = 11;</code>
       *
       * <pre>
       *API - 服务层
       * </pre>
       */
      public com.ninelook.wecard.protocol.Request.ServiceReqMessageOrBuilder getServiceReqMessageOrBuilder() {
        if (serviceReqMessageBuilder_ != null) {
          return serviceReqMessageBuilder_.getMessageOrBuilder();
        } else {
          return serviceReqMessage_;
        }
      }
      /**
       * <code>optional .ServiceReqMessage serviceReqMessage = 11;</code>
       *
       * <pre>
       *API - 服务层
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.ninelook.wecard.protocol.Request.ServiceReqMessage, com.ninelook.wecard.protocol.Request.ServiceReqMessage.Builder, com.ninelook.wecard.protocol.Request.ServiceReqMessageOrBuilder> 
          getServiceReqMessageFieldBuilder() {
        if (serviceReqMessageBuilder_ == null) {
          serviceReqMessageBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.ninelook.wecard.protocol.Request.ServiceReqMessage, com.ninelook.wecard.protocol.Request.ServiceReqMessage.Builder, com.ninelook.wecard.protocol.Request.ServiceReqMessageOrBuilder>(
                  getServiceReqMessage(),
                  getParentForChildren(),
                  isClean());
          serviceReqMessage_ = null;
        }
        return serviceReqMessageBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:HeshReqMessage)
    }

    static {
      defaultInstance = new HeshReqMessage(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:HeshReqMessage)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_HeshReqMessage_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_HeshReqMessage_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\023Communication.proto\032\rRequest.proto\032\016Re" +
      "sponse.proto\"\204\001\n\016HeshReqMessage\022\013\n\003mid\030\001" +
      " \002(\005\022\013\n\003uid\030\002 \002(\003\022)\n\017sceneReqMessage\030\n \001" +
      "(\0132\020.SceneReqMessage\022-\n\021serviceReqMessag" +
      "e\030\013 \001(\0132\022.ServiceReqMessageB\036\n\034com.ninel" +
      "ook.wecard.protocol"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.ninelook.wecard.protocol.Request.getDescriptor(),
          com.ninelook.wecard.protocol.Response.getDescriptor(),
        }, assigner);
    internal_static_HeshReqMessage_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_HeshReqMessage_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_HeshReqMessage_descriptor,
        new java.lang.String[] { "Mid", "Uid", "SceneReqMessage", "ServiceReqMessage", });
    com.ninelook.wecard.protocol.Request.getDescriptor();
    com.ninelook.wecard.protocol.Response.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}

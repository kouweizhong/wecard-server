// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Response.proto

package com.ninelook.wecard.protocol;

public final class Response {
  private Response() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface HeshResMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:HeshResMessage)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int32 mid = 1;</code>
     *
     * <pre>
     *SYSTEM-MESSAGE ID
     * </pre>
     */
    boolean hasMid();
    /**
     * <code>required int32 mid = 1;</code>
     *
     * <pre>
     *SYSTEM-MESSAGE ID
     * </pre>
     */
    int getMid();

    /**
     * <code>required int32 code = 2 [default = 0];</code>
     *
     * <pre>
     *SYSTEM-CODE(0为成功, 其它均为错误码)
     * </pre>
     */
    boolean hasCode();
    /**
     * <code>required int32 code = 2 [default = 0];</code>
     *
     * <pre>
     *SYSTEM-CODE(0为成功, 其它均为错误码)
     * </pre>
     */
    int getCode();

    /**
     * <code>optional bool push = 3 [default = false];</code>
     *
     * <pre>
     *SYSTEM-PUSH(是否为推送消息)
     * </pre>
     */
    boolean hasPush();
    /**
     * <code>optional bool push = 3 [default = false];</code>
     *
     * <pre>
     *SYSTEM-PUSH(是否为推送消息)
     * </pre>
     */
    boolean getPush();

    /**
     * <code>optional .ServerInfo serverInfo = 10;</code>
     *
     * <pre>
     *服务器信息
     * </pre>
     */
    boolean hasServerInfo();
    /**
     * <code>optional .ServerInfo serverInfo = 10;</code>
     *
     * <pre>
     *服务器信息
     * </pre>
     */
    com.ninelook.wecard.protocol.beans.BeanSceneMessage.ServerInfo getServerInfo();
    /**
     * <code>optional .ServerInfo serverInfo = 10;</code>
     *
     * <pre>
     *服务器信息
     * </pre>
     */
    com.ninelook.wecard.protocol.beans.BeanSceneMessage.ServerInfoOrBuilder getServerInfoOrBuilder();

    /**
     * <code>optional .HomeInfo homeInfo = 11;</code>
     *
     * <pre>
     *房间信息
     * </pre>
     */
    boolean hasHomeInfo();
    /**
     * <code>optional .HomeInfo homeInfo = 11;</code>
     *
     * <pre>
     *房间信息
     * </pre>
     */
    com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeInfo getHomeInfo();
    /**
     * <code>optional .HomeInfo homeInfo = 11;</code>
     *
     * <pre>
     *房间信息
     * </pre>
     */
    com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeInfoOrBuilder getHomeInfoOrBuilder();

    /**
     * <code>optional .PlayerInfo playerInfo = 12;</code>
     *
     * <pre>
     *玩家信息
     * </pre>
     */
    boolean hasPlayerInfo();
    /**
     * <code>optional .PlayerInfo playerInfo = 12;</code>
     *
     * <pre>
     *玩家信息
     * </pre>
     */
    com.ninelook.wecard.protocol.beans.BeanSceneMessage.PlayerInfo getPlayerInfo();
    /**
     * <code>optional .PlayerInfo playerInfo = 12;</code>
     *
     * <pre>
     *玩家信息
     * </pre>
     */
    com.ninelook.wecard.protocol.beans.BeanSceneMessage.PlayerInfoOrBuilder getPlayerInfoOrBuilder();

    /**
     * <code>optional .HeroInfo heroInfo = 13;</code>
     *
     * <pre>
     *英雄信息
     * </pre>
     */
    boolean hasHeroInfo();
    /**
     * <code>optional .HeroInfo heroInfo = 13;</code>
     *
     * <pre>
     *英雄信息
     * </pre>
     */
    com.ninelook.wecard.protocol.beans.BeanHeroMessage.HeroInfo getHeroInfo();
    /**
     * <code>optional .HeroInfo heroInfo = 13;</code>
     *
     * <pre>
     *英雄信息
     * </pre>
     */
    com.ninelook.wecard.protocol.beans.BeanHeroMessage.HeroInfoOrBuilder getHeroInfoOrBuilder();

    /**
     * <code>optional .WarInfo warInfo = 14;</code>
     *
     * <pre>
     *战场信息
     * </pre>
     */
    boolean hasWarInfo();
    /**
     * <code>optional .WarInfo warInfo = 14;</code>
     *
     * <pre>
     *战场信息
     * </pre>
     */
    com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarInfo getWarInfo();
    /**
     * <code>optional .WarInfo warInfo = 14;</code>
     *
     * <pre>
     *战场信息
     * </pre>
     */
    com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarInfoOrBuilder getWarInfoOrBuilder();

    /**
     * <code>optional .PosInfo heroPosInfo = 15;</code>
     *
     * <pre>
     *英雄位置信息
     * </pre>
     */
    boolean hasHeroPosInfo();
    /**
     * <code>optional .PosInfo heroPosInfo = 15;</code>
     *
     * <pre>
     *英雄位置信息
     * </pre>
     */
    com.ninelook.wecard.protocol.beans.BeanEntityMessage.PosInfo getHeroPosInfo();
    /**
     * <code>optional .PosInfo heroPosInfo = 15;</code>
     *
     * <pre>
     *英雄位置信息
     * </pre>
     */
    com.ninelook.wecard.protocol.beans.BeanEntityMessage.PosInfoOrBuilder getHeroPosInfoOrBuilder();

    /**
     * <code>optional .FightAttackResultInfo fightAttackResultInfo = 16;</code>
     *
     * <pre>
     *攻击返回信息
     * </pre>
     */
    boolean hasFightAttackResultInfo();
    /**
     * <code>optional .FightAttackResultInfo fightAttackResultInfo = 16;</code>
     *
     * <pre>
     *攻击返回信息
     * </pre>
     */
    com.ninelook.wecard.protocol.beans.BeanFightMessage.FightAttackResultInfo getFightAttackResultInfo();
    /**
     * <code>optional .FightAttackResultInfo fightAttackResultInfo = 16;</code>
     *
     * <pre>
     *攻击返回信息
     * </pre>
     */
    com.ninelook.wecard.protocol.beans.BeanFightMessage.FightAttackResultInfoOrBuilder getFightAttackResultInfoOrBuilder();

    /**
     * <code>repeated .UserInfo lUserInfo = 17;</code>
     *
     * <pre>
     *列表-用户基本信息
     * </pre>
     */
    java.util.List<com.ninelook.wecard.protocol.beans.BeanSceneMessage.UserInfo> 
        getLUserInfoList();
    /**
     * <code>repeated .UserInfo lUserInfo = 17;</code>
     *
     * <pre>
     *列表-用户基本信息
     * </pre>
     */
    com.ninelook.wecard.protocol.beans.BeanSceneMessage.UserInfo getLUserInfo(int index);
    /**
     * <code>repeated .UserInfo lUserInfo = 17;</code>
     *
     * <pre>
     *列表-用户基本信息
     * </pre>
     */
    int getLUserInfoCount();
    /**
     * <code>repeated .UserInfo lUserInfo = 17;</code>
     *
     * <pre>
     *列表-用户基本信息
     * </pre>
     */
    java.util.List<? extends com.ninelook.wecard.protocol.beans.BeanSceneMessage.UserInfoOrBuilder> 
        getLUserInfoOrBuilderList();
    /**
     * <code>repeated .UserInfo lUserInfo = 17;</code>
     *
     * <pre>
     *列表-用户基本信息
     * </pre>
     */
    com.ninelook.wecard.protocol.beans.BeanSceneMessage.UserInfoOrBuilder getLUserInfoOrBuilder(
        int index);

    /**
     * <code>optional .LoadedInfo loadedInfo = 18;</code>
     *
     * <pre>
     *资源加载完成通知信息
     * </pre>
     */
    boolean hasLoadedInfo();
    /**
     * <code>optional .LoadedInfo loadedInfo = 18;</code>
     *
     * <pre>
     *资源加载完成通知信息
     * </pre>
     */
    com.ninelook.wecard.protocol.beans.BeanHomeMessage.LoadedInfo getLoadedInfo();
    /**
     * <code>optional .LoadedInfo loadedInfo = 18;</code>
     *
     * <pre>
     *资源加载完成通知信息
     * </pre>
     */
    com.ninelook.wecard.protocol.beans.BeanHomeMessage.LoadedInfoOrBuilder getLoadedInfoOrBuilder();

    /**
     * <code>optional .HomeGoInfo homeGoInfo = 19;</code>
     *
     * <pre>
     *房间开始信息
     * </pre>
     */
    boolean hasHomeGoInfo();
    /**
     * <code>optional .HomeGoInfo homeGoInfo = 19;</code>
     *
     * <pre>
     *房间开始信息
     * </pre>
     */
    com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeGoInfo getHomeGoInfo();
    /**
     * <code>optional .HomeGoInfo homeGoInfo = 19;</code>
     *
     * <pre>
     *房间开始信息
     * </pre>
     */
    com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeGoInfoOrBuilder getHomeGoInfoOrBuilder();

    /**
     * <code>optional .HomeExitInfo homeExitInfo = 20;</code>
     *
     * <pre>
     *退出房间信息
     * </pre>
     */
    boolean hasHomeExitInfo();
    /**
     * <code>optional .HomeExitInfo homeExitInfo = 20;</code>
     *
     * <pre>
     *退出房间信息
     * </pre>
     */
    com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeExitInfo getHomeExitInfo();
    /**
     * <code>optional .HomeExitInfo homeExitInfo = 20;</code>
     *
     * <pre>
     *退出房间信息
     * </pre>
     */
    com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeExitInfoOrBuilder getHomeExitInfoOrBuilder();

    /**
     * <code>optional .SkillResultInfo skillResultInfo = 21;</code>
     *
     * <pre>
     *房间开始信息
     * </pre>
     */
    boolean hasSkillResultInfo();
    /**
     * <code>optional .SkillResultInfo skillResultInfo = 21;</code>
     *
     * <pre>
     *房间开始信息
     * </pre>
     */
    com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultInfo getSkillResultInfo();
    /**
     * <code>optional .SkillResultInfo skillResultInfo = 21;</code>
     *
     * <pre>
     *房间开始信息
     * </pre>
     */
    com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultInfoOrBuilder getSkillResultInfoOrBuilder();

    /**
     * <code>optional .WarFinishInfo warFinishInfo = 22;</code>
     *
     * <pre>
     *战斗结束信息
     * </pre>
     */
    boolean hasWarFinishInfo();
    /**
     * <code>optional .WarFinishInfo warFinishInfo = 22;</code>
     *
     * <pre>
     *战斗结束信息
     * </pre>
     */
    com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarFinishInfo getWarFinishInfo();
    /**
     * <code>optional .WarFinishInfo warFinishInfo = 22;</code>
     *
     * <pre>
     *战斗结束信息
     * </pre>
     */
    com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarFinishInfoOrBuilder getWarFinishInfoOrBuilder();

    /**
     * <code>optional .MapHomeListInfo mapHomeListInfo = 23;</code>
     *
     * <pre>
     *地图下的房间列表信息
     * </pre>
     */
    boolean hasMapHomeListInfo();
    /**
     * <code>optional .MapHomeListInfo mapHomeListInfo = 23;</code>
     *
     * <pre>
     *地图下的房间列表信息
     * </pre>
     */
    com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapHomeListInfo getMapHomeListInfo();
    /**
     * <code>optional .MapHomeListInfo mapHomeListInfo = 23;</code>
     *
     * <pre>
     *地图下的房间列表信息
     * </pre>
     */
    com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapHomeListInfoOrBuilder getMapHomeListInfoOrBuilder();

    /**
     * <code>optional .DeadInfo deadInfo = 101;</code>
     *
     * <pre>
     *推送 - 死亡返回信息
     * </pre>
     */
    boolean hasDeadInfo();
    /**
     * <code>optional .DeadInfo deadInfo = 101;</code>
     *
     * <pre>
     *推送 - 死亡返回信息
     * </pre>
     */
    com.ninelook.wecard.protocol.beans.BeanEntityMessage.DeadInfo getDeadInfo();
    /**
     * <code>optional .DeadInfo deadInfo = 101;</code>
     *
     * <pre>
     *推送 - 死亡返回信息
     * </pre>
     */
    com.ninelook.wecard.protocol.beans.BeanEntityMessage.DeadInfoOrBuilder getDeadInfoOrBuilder();

    /**
     * <code>repeated .CreatureInfo creatureRefreshInfo = 102;</code>
     *
     * <pre>
     *推送 - 野怪刷新返回信息
     * </pre>
     */
    java.util.List<com.ninelook.wecard.protocol.beans.BeanCreatureMessage.CreatureInfo> 
        getCreatureRefreshInfoList();
    /**
     * <code>repeated .CreatureInfo creatureRefreshInfo = 102;</code>
     *
     * <pre>
     *推送 - 野怪刷新返回信息
     * </pre>
     */
    com.ninelook.wecard.protocol.beans.BeanCreatureMessage.CreatureInfo getCreatureRefreshInfo(int index);
    /**
     * <code>repeated .CreatureInfo creatureRefreshInfo = 102;</code>
     *
     * <pre>
     *推送 - 野怪刷新返回信息
     * </pre>
     */
    int getCreatureRefreshInfoCount();
    /**
     * <code>repeated .CreatureInfo creatureRefreshInfo = 102;</code>
     *
     * <pre>
     *推送 - 野怪刷新返回信息
     * </pre>
     */
    java.util.List<? extends com.ninelook.wecard.protocol.beans.BeanCreatureMessage.CreatureInfoOrBuilder> 
        getCreatureRefreshInfoOrBuilderList();
    /**
     * <code>repeated .CreatureInfo creatureRefreshInfo = 102;</code>
     *
     * <pre>
     *推送 - 野怪刷新返回信息
     * </pre>
     */
    com.ninelook.wecard.protocol.beans.BeanCreatureMessage.CreatureInfoOrBuilder getCreatureRefreshInfoOrBuilder(
        int index);

    /**
     * <code>optional .BuffEntityInfo buffEntityInfo = 103;</code>
     *
     * <pre>
     *推送 - buff信息推送
     * </pre>
     */
    boolean hasBuffEntityInfo();
    /**
     * <code>optional .BuffEntityInfo buffEntityInfo = 103;</code>
     *
     * <pre>
     *推送 - buff信息推送
     * </pre>
     */
    com.ninelook.wecard.protocol.beans.BeanFightMessage.BuffEntityInfo getBuffEntityInfo();
    /**
     * <code>optional .BuffEntityInfo buffEntityInfo = 103;</code>
     *
     * <pre>
     *推送 - buff信息推送
     * </pre>
     */
    com.ninelook.wecard.protocol.beans.BeanFightMessage.BuffEntityInfoOrBuilder getBuffEntityInfoOrBuilder();

    /**
     * <code>repeated .EntityInfo entityRefreshInfo = 104;</code>
     *
     * <pre>
     *推送 - 实体刷新返回信息
     * </pre>
     */
    java.util.List<com.ninelook.wecard.protocol.beans.BeanEntityMessage.EntityInfo> 
        getEntityRefreshInfoList();
    /**
     * <code>repeated .EntityInfo entityRefreshInfo = 104;</code>
     *
     * <pre>
     *推送 - 实体刷新返回信息
     * </pre>
     */
    com.ninelook.wecard.protocol.beans.BeanEntityMessage.EntityInfo getEntityRefreshInfo(int index);
    /**
     * <code>repeated .EntityInfo entityRefreshInfo = 104;</code>
     *
     * <pre>
     *推送 - 实体刷新返回信息
     * </pre>
     */
    int getEntityRefreshInfoCount();
    /**
     * <code>repeated .EntityInfo entityRefreshInfo = 104;</code>
     *
     * <pre>
     *推送 - 实体刷新返回信息
     * </pre>
     */
    java.util.List<? extends com.ninelook.wecard.protocol.beans.BeanEntityMessage.EntityInfoOrBuilder> 
        getEntityRefreshInfoOrBuilderList();
    /**
     * <code>repeated .EntityInfo entityRefreshInfo = 104;</code>
     *
     * <pre>
     *推送 - 实体刷新返回信息
     * </pre>
     */
    com.ninelook.wecard.protocol.beans.BeanEntityMessage.EntityInfoOrBuilder getEntityRefreshInfoOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code HeshResMessage}
   *
   * <pre>
   *Hesh Res Message
   * </pre>
   */
  public static final class HeshResMessage extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:HeshResMessage)
      HeshResMessageOrBuilder {
    // Use HeshResMessage.newBuilder() to construct.
    private HeshResMessage(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private HeshResMessage(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final HeshResMessage defaultInstance;
    public static HeshResMessage getDefaultInstance() {
      return defaultInstance;
    }

    public HeshResMessage getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private HeshResMessage(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              mid_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              code_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              push_ = input.readBool();
              break;
            }
            case 82: {
              com.ninelook.wecard.protocol.beans.BeanSceneMessage.ServerInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = serverInfo_.toBuilder();
              }
              serverInfo_ = input.readMessage(com.ninelook.wecard.protocol.beans.BeanSceneMessage.ServerInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverInfo_);
                serverInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
            case 90: {
              com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000010) == 0x00000010)) {
                subBuilder = homeInfo_.toBuilder();
              }
              homeInfo_ = input.readMessage(com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(homeInfo_);
                homeInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000010;
              break;
            }
            case 98: {
              com.ninelook.wecard.protocol.beans.BeanSceneMessage.PlayerInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000020) == 0x00000020)) {
                subBuilder = playerInfo_.toBuilder();
              }
              playerInfo_ = input.readMessage(com.ninelook.wecard.protocol.beans.BeanSceneMessage.PlayerInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(playerInfo_);
                playerInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000020;
              break;
            }
            case 106: {
              com.ninelook.wecard.protocol.beans.BeanHeroMessage.HeroInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000040) == 0x00000040)) {
                subBuilder = heroInfo_.toBuilder();
              }
              heroInfo_ = input.readMessage(com.ninelook.wecard.protocol.beans.BeanHeroMessage.HeroInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(heroInfo_);
                heroInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000040;
              break;
            }
            case 114: {
              com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000080) == 0x00000080)) {
                subBuilder = warInfo_.toBuilder();
              }
              warInfo_ = input.readMessage(com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(warInfo_);
                warInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000080;
              break;
            }
            case 122: {
              com.ninelook.wecard.protocol.beans.BeanEntityMessage.PosInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000100) == 0x00000100)) {
                subBuilder = heroPosInfo_.toBuilder();
              }
              heroPosInfo_ = input.readMessage(com.ninelook.wecard.protocol.beans.BeanEntityMessage.PosInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(heroPosInfo_);
                heroPosInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000100;
              break;
            }
            case 130: {
              com.ninelook.wecard.protocol.beans.BeanFightMessage.FightAttackResultInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000200) == 0x00000200)) {
                subBuilder = fightAttackResultInfo_.toBuilder();
              }
              fightAttackResultInfo_ = input.readMessage(com.ninelook.wecard.protocol.beans.BeanFightMessage.FightAttackResultInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(fightAttackResultInfo_);
                fightAttackResultInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000200;
              break;
            }
            case 138: {
              if (!((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
                lUserInfo_ = new java.util.ArrayList<com.ninelook.wecard.protocol.beans.BeanSceneMessage.UserInfo>();
                mutable_bitField0_ |= 0x00000400;
              }
              lUserInfo_.add(input.readMessage(com.ninelook.wecard.protocol.beans.BeanSceneMessage.UserInfo.PARSER, extensionRegistry));
              break;
            }
            case 146: {
              com.ninelook.wecard.protocol.beans.BeanHomeMessage.LoadedInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000400) == 0x00000400)) {
                subBuilder = loadedInfo_.toBuilder();
              }
              loadedInfo_ = input.readMessage(com.ninelook.wecard.protocol.beans.BeanHomeMessage.LoadedInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(loadedInfo_);
                loadedInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000400;
              break;
            }
            case 154: {
              com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeGoInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000800) == 0x00000800)) {
                subBuilder = homeGoInfo_.toBuilder();
              }
              homeGoInfo_ = input.readMessage(com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeGoInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(homeGoInfo_);
                homeGoInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000800;
              break;
            }
            case 162: {
              com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeExitInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00001000) == 0x00001000)) {
                subBuilder = homeExitInfo_.toBuilder();
              }
              homeExitInfo_ = input.readMessage(com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeExitInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(homeExitInfo_);
                homeExitInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00001000;
              break;
            }
            case 170: {
              com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00002000) == 0x00002000)) {
                subBuilder = skillResultInfo_.toBuilder();
              }
              skillResultInfo_ = input.readMessage(com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(skillResultInfo_);
                skillResultInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00002000;
              break;
            }
            case 178: {
              com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarFinishInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00004000) == 0x00004000)) {
                subBuilder = warFinishInfo_.toBuilder();
              }
              warFinishInfo_ = input.readMessage(com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarFinishInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(warFinishInfo_);
                warFinishInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00004000;
              break;
            }
            case 186: {
              com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapHomeListInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00008000) == 0x00008000)) {
                subBuilder = mapHomeListInfo_.toBuilder();
              }
              mapHomeListInfo_ = input.readMessage(com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapHomeListInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(mapHomeListInfo_);
                mapHomeListInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00008000;
              break;
            }
            case 810: {
              com.ninelook.wecard.protocol.beans.BeanEntityMessage.DeadInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00010000) == 0x00010000)) {
                subBuilder = deadInfo_.toBuilder();
              }
              deadInfo_ = input.readMessage(com.ninelook.wecard.protocol.beans.BeanEntityMessage.DeadInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(deadInfo_);
                deadInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00010000;
              break;
            }
            case 818: {
              if (!((mutable_bitField0_ & 0x00040000) == 0x00040000)) {
                creatureRefreshInfo_ = new java.util.ArrayList<com.ninelook.wecard.protocol.beans.BeanCreatureMessage.CreatureInfo>();
                mutable_bitField0_ |= 0x00040000;
              }
              creatureRefreshInfo_.add(input.readMessage(com.ninelook.wecard.protocol.beans.BeanCreatureMessage.CreatureInfo.PARSER, extensionRegistry));
              break;
            }
            case 826: {
              com.ninelook.wecard.protocol.beans.BeanFightMessage.BuffEntityInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00020000) == 0x00020000)) {
                subBuilder = buffEntityInfo_.toBuilder();
              }
              buffEntityInfo_ = input.readMessage(com.ninelook.wecard.protocol.beans.BeanFightMessage.BuffEntityInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(buffEntityInfo_);
                buffEntityInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00020000;
              break;
            }
            case 834: {
              if (!((mutable_bitField0_ & 0x00100000) == 0x00100000)) {
                entityRefreshInfo_ = new java.util.ArrayList<com.ninelook.wecard.protocol.beans.BeanEntityMessage.EntityInfo>();
                mutable_bitField0_ |= 0x00100000;
              }
              entityRefreshInfo_.add(input.readMessage(com.ninelook.wecard.protocol.beans.BeanEntityMessage.EntityInfo.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
          lUserInfo_ = java.util.Collections.unmodifiableList(lUserInfo_);
        }
        if (((mutable_bitField0_ & 0x00040000) == 0x00040000)) {
          creatureRefreshInfo_ = java.util.Collections.unmodifiableList(creatureRefreshInfo_);
        }
        if (((mutable_bitField0_ & 0x00100000) == 0x00100000)) {
          entityRefreshInfo_ = java.util.Collections.unmodifiableList(entityRefreshInfo_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.ninelook.wecard.protocol.Response.internal_static_HeshResMessage_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.ninelook.wecard.protocol.Response.internal_static_HeshResMessage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.ninelook.wecard.protocol.Response.HeshResMessage.class, com.ninelook.wecard.protocol.Response.HeshResMessage.Builder.class);
    }

    public static com.google.protobuf.Parser<HeshResMessage> PARSER =
        new com.google.protobuf.AbstractParser<HeshResMessage>() {
      public HeshResMessage parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new HeshResMessage(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<HeshResMessage> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int MID_FIELD_NUMBER = 1;
    private int mid_;
    /**
     * <code>required int32 mid = 1;</code>
     *
     * <pre>
     *SYSTEM-MESSAGE ID
     * </pre>
     */
    public boolean hasMid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 mid = 1;</code>
     *
     * <pre>
     *SYSTEM-MESSAGE ID
     * </pre>
     */
    public int getMid() {
      return mid_;
    }

    public static final int CODE_FIELD_NUMBER = 2;
    private int code_;
    /**
     * <code>required int32 code = 2 [default = 0];</code>
     *
     * <pre>
     *SYSTEM-CODE(0为成功, 其它均为错误码)
     * </pre>
     */
    public boolean hasCode() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 code = 2 [default = 0];</code>
     *
     * <pre>
     *SYSTEM-CODE(0为成功, 其它均为错误码)
     * </pre>
     */
    public int getCode() {
      return code_;
    }

    public static final int PUSH_FIELD_NUMBER = 3;
    private boolean push_;
    /**
     * <code>optional bool push = 3 [default = false];</code>
     *
     * <pre>
     *SYSTEM-PUSH(是否为推送消息)
     * </pre>
     */
    public boolean hasPush() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional bool push = 3 [default = false];</code>
     *
     * <pre>
     *SYSTEM-PUSH(是否为推送消息)
     * </pre>
     */
    public boolean getPush() {
      return push_;
    }

    public static final int SERVERINFO_FIELD_NUMBER = 10;
    private com.ninelook.wecard.protocol.beans.BeanSceneMessage.ServerInfo serverInfo_;
    /**
     * <code>optional .ServerInfo serverInfo = 10;</code>
     *
     * <pre>
     *服务器信息
     * </pre>
     */
    public boolean hasServerInfo() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .ServerInfo serverInfo = 10;</code>
     *
     * <pre>
     *服务器信息
     * </pre>
     */
    public com.ninelook.wecard.protocol.beans.BeanSceneMessage.ServerInfo getServerInfo() {
      return serverInfo_;
    }
    /**
     * <code>optional .ServerInfo serverInfo = 10;</code>
     *
     * <pre>
     *服务器信息
     * </pre>
     */
    public com.ninelook.wecard.protocol.beans.BeanSceneMessage.ServerInfoOrBuilder getServerInfoOrBuilder() {
      return serverInfo_;
    }

    public static final int HOMEINFO_FIELD_NUMBER = 11;
    private com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeInfo homeInfo_;
    /**
     * <code>optional .HomeInfo homeInfo = 11;</code>
     *
     * <pre>
     *房间信息
     * </pre>
     */
    public boolean hasHomeInfo() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .HomeInfo homeInfo = 11;</code>
     *
     * <pre>
     *房间信息
     * </pre>
     */
    public com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeInfo getHomeInfo() {
      return homeInfo_;
    }
    /**
     * <code>optional .HomeInfo homeInfo = 11;</code>
     *
     * <pre>
     *房间信息
     * </pre>
     */
    public com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeInfoOrBuilder getHomeInfoOrBuilder() {
      return homeInfo_;
    }

    public static final int PLAYERINFO_FIELD_NUMBER = 12;
    private com.ninelook.wecard.protocol.beans.BeanSceneMessage.PlayerInfo playerInfo_;
    /**
     * <code>optional .PlayerInfo playerInfo = 12;</code>
     *
     * <pre>
     *玩家信息
     * </pre>
     */
    public boolean hasPlayerInfo() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional .PlayerInfo playerInfo = 12;</code>
     *
     * <pre>
     *玩家信息
     * </pre>
     */
    public com.ninelook.wecard.protocol.beans.BeanSceneMessage.PlayerInfo getPlayerInfo() {
      return playerInfo_;
    }
    /**
     * <code>optional .PlayerInfo playerInfo = 12;</code>
     *
     * <pre>
     *玩家信息
     * </pre>
     */
    public com.ninelook.wecard.protocol.beans.BeanSceneMessage.PlayerInfoOrBuilder getPlayerInfoOrBuilder() {
      return playerInfo_;
    }

    public static final int HEROINFO_FIELD_NUMBER = 13;
    private com.ninelook.wecard.protocol.beans.BeanHeroMessage.HeroInfo heroInfo_;
    /**
     * <code>optional .HeroInfo heroInfo = 13;</code>
     *
     * <pre>
     *英雄信息
     * </pre>
     */
    public boolean hasHeroInfo() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional .HeroInfo heroInfo = 13;</code>
     *
     * <pre>
     *英雄信息
     * </pre>
     */
    public com.ninelook.wecard.protocol.beans.BeanHeroMessage.HeroInfo getHeroInfo() {
      return heroInfo_;
    }
    /**
     * <code>optional .HeroInfo heroInfo = 13;</code>
     *
     * <pre>
     *英雄信息
     * </pre>
     */
    public com.ninelook.wecard.protocol.beans.BeanHeroMessage.HeroInfoOrBuilder getHeroInfoOrBuilder() {
      return heroInfo_;
    }

    public static final int WARINFO_FIELD_NUMBER = 14;
    private com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarInfo warInfo_;
    /**
     * <code>optional .WarInfo warInfo = 14;</code>
     *
     * <pre>
     *战场信息
     * </pre>
     */
    public boolean hasWarInfo() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional .WarInfo warInfo = 14;</code>
     *
     * <pre>
     *战场信息
     * </pre>
     */
    public com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarInfo getWarInfo() {
      return warInfo_;
    }
    /**
     * <code>optional .WarInfo warInfo = 14;</code>
     *
     * <pre>
     *战场信息
     * </pre>
     */
    public com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarInfoOrBuilder getWarInfoOrBuilder() {
      return warInfo_;
    }

    public static final int HEROPOSINFO_FIELD_NUMBER = 15;
    private com.ninelook.wecard.protocol.beans.BeanEntityMessage.PosInfo heroPosInfo_;
    /**
     * <code>optional .PosInfo heroPosInfo = 15;</code>
     *
     * <pre>
     *英雄位置信息
     * </pre>
     */
    public boolean hasHeroPosInfo() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional .PosInfo heroPosInfo = 15;</code>
     *
     * <pre>
     *英雄位置信息
     * </pre>
     */
    public com.ninelook.wecard.protocol.beans.BeanEntityMessage.PosInfo getHeroPosInfo() {
      return heroPosInfo_;
    }
    /**
     * <code>optional .PosInfo heroPosInfo = 15;</code>
     *
     * <pre>
     *英雄位置信息
     * </pre>
     */
    public com.ninelook.wecard.protocol.beans.BeanEntityMessage.PosInfoOrBuilder getHeroPosInfoOrBuilder() {
      return heroPosInfo_;
    }

    public static final int FIGHTATTACKRESULTINFO_FIELD_NUMBER = 16;
    private com.ninelook.wecard.protocol.beans.BeanFightMessage.FightAttackResultInfo fightAttackResultInfo_;
    /**
     * <code>optional .FightAttackResultInfo fightAttackResultInfo = 16;</code>
     *
     * <pre>
     *攻击返回信息
     * </pre>
     */
    public boolean hasFightAttackResultInfo() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional .FightAttackResultInfo fightAttackResultInfo = 16;</code>
     *
     * <pre>
     *攻击返回信息
     * </pre>
     */
    public com.ninelook.wecard.protocol.beans.BeanFightMessage.FightAttackResultInfo getFightAttackResultInfo() {
      return fightAttackResultInfo_;
    }
    /**
     * <code>optional .FightAttackResultInfo fightAttackResultInfo = 16;</code>
     *
     * <pre>
     *攻击返回信息
     * </pre>
     */
    public com.ninelook.wecard.protocol.beans.BeanFightMessage.FightAttackResultInfoOrBuilder getFightAttackResultInfoOrBuilder() {
      return fightAttackResultInfo_;
    }

    public static final int LUSERINFO_FIELD_NUMBER = 17;
    private java.util.List<com.ninelook.wecard.protocol.beans.BeanSceneMessage.UserInfo> lUserInfo_;
    /**
     * <code>repeated .UserInfo lUserInfo = 17;</code>
     *
     * <pre>
     *列表-用户基本信息
     * </pre>
     */
    public java.util.List<com.ninelook.wecard.protocol.beans.BeanSceneMessage.UserInfo> getLUserInfoList() {
      return lUserInfo_;
    }
    /**
     * <code>repeated .UserInfo lUserInfo = 17;</code>
     *
     * <pre>
     *列表-用户基本信息
     * </pre>
     */
    public java.util.List<? extends com.ninelook.wecard.protocol.beans.BeanSceneMessage.UserInfoOrBuilder> 
        getLUserInfoOrBuilderList() {
      return lUserInfo_;
    }
    /**
     * <code>repeated .UserInfo lUserInfo = 17;</code>
     *
     * <pre>
     *列表-用户基本信息
     * </pre>
     */
    public int getLUserInfoCount() {
      return lUserInfo_.size();
    }
    /**
     * <code>repeated .UserInfo lUserInfo = 17;</code>
     *
     * <pre>
     *列表-用户基本信息
     * </pre>
     */
    public com.ninelook.wecard.protocol.beans.BeanSceneMessage.UserInfo getLUserInfo(int index) {
      return lUserInfo_.get(index);
    }
    /**
     * <code>repeated .UserInfo lUserInfo = 17;</code>
     *
     * <pre>
     *列表-用户基本信息
     * </pre>
     */
    public com.ninelook.wecard.protocol.beans.BeanSceneMessage.UserInfoOrBuilder getLUserInfoOrBuilder(
        int index) {
      return lUserInfo_.get(index);
    }

    public static final int LOADEDINFO_FIELD_NUMBER = 18;
    private com.ninelook.wecard.protocol.beans.BeanHomeMessage.LoadedInfo loadedInfo_;
    /**
     * <code>optional .LoadedInfo loadedInfo = 18;</code>
     *
     * <pre>
     *资源加载完成通知信息
     * </pre>
     */
    public boolean hasLoadedInfo() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional .LoadedInfo loadedInfo = 18;</code>
     *
     * <pre>
     *资源加载完成通知信息
     * </pre>
     */
    public com.ninelook.wecard.protocol.beans.BeanHomeMessage.LoadedInfo getLoadedInfo() {
      return loadedInfo_;
    }
    /**
     * <code>optional .LoadedInfo loadedInfo = 18;</code>
     *
     * <pre>
     *资源加载完成通知信息
     * </pre>
     */
    public com.ninelook.wecard.protocol.beans.BeanHomeMessage.LoadedInfoOrBuilder getLoadedInfoOrBuilder() {
      return loadedInfo_;
    }

    public static final int HOMEGOINFO_FIELD_NUMBER = 19;
    private com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeGoInfo homeGoInfo_;
    /**
     * <code>optional .HomeGoInfo homeGoInfo = 19;</code>
     *
     * <pre>
     *房间开始信息
     * </pre>
     */
    public boolean hasHomeGoInfo() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional .HomeGoInfo homeGoInfo = 19;</code>
     *
     * <pre>
     *房间开始信息
     * </pre>
     */
    public com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeGoInfo getHomeGoInfo() {
      return homeGoInfo_;
    }
    /**
     * <code>optional .HomeGoInfo homeGoInfo = 19;</code>
     *
     * <pre>
     *房间开始信息
     * </pre>
     */
    public com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeGoInfoOrBuilder getHomeGoInfoOrBuilder() {
      return homeGoInfo_;
    }

    public static final int HOMEEXITINFO_FIELD_NUMBER = 20;
    private com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeExitInfo homeExitInfo_;
    /**
     * <code>optional .HomeExitInfo homeExitInfo = 20;</code>
     *
     * <pre>
     *退出房间信息
     * </pre>
     */
    public boolean hasHomeExitInfo() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional .HomeExitInfo homeExitInfo = 20;</code>
     *
     * <pre>
     *退出房间信息
     * </pre>
     */
    public com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeExitInfo getHomeExitInfo() {
      return homeExitInfo_;
    }
    /**
     * <code>optional .HomeExitInfo homeExitInfo = 20;</code>
     *
     * <pre>
     *退出房间信息
     * </pre>
     */
    public com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeExitInfoOrBuilder getHomeExitInfoOrBuilder() {
      return homeExitInfo_;
    }

    public static final int SKILLRESULTINFO_FIELD_NUMBER = 21;
    private com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultInfo skillResultInfo_;
    /**
     * <code>optional .SkillResultInfo skillResultInfo = 21;</code>
     *
     * <pre>
     *房间开始信息
     * </pre>
     */
    public boolean hasSkillResultInfo() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional .SkillResultInfo skillResultInfo = 21;</code>
     *
     * <pre>
     *房间开始信息
     * </pre>
     */
    public com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultInfo getSkillResultInfo() {
      return skillResultInfo_;
    }
    /**
     * <code>optional .SkillResultInfo skillResultInfo = 21;</code>
     *
     * <pre>
     *房间开始信息
     * </pre>
     */
    public com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultInfoOrBuilder getSkillResultInfoOrBuilder() {
      return skillResultInfo_;
    }

    public static final int WARFINISHINFO_FIELD_NUMBER = 22;
    private com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarFinishInfo warFinishInfo_;
    /**
     * <code>optional .WarFinishInfo warFinishInfo = 22;</code>
     *
     * <pre>
     *战斗结束信息
     * </pre>
     */
    public boolean hasWarFinishInfo() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional .WarFinishInfo warFinishInfo = 22;</code>
     *
     * <pre>
     *战斗结束信息
     * </pre>
     */
    public com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarFinishInfo getWarFinishInfo() {
      return warFinishInfo_;
    }
    /**
     * <code>optional .WarFinishInfo warFinishInfo = 22;</code>
     *
     * <pre>
     *战斗结束信息
     * </pre>
     */
    public com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarFinishInfoOrBuilder getWarFinishInfoOrBuilder() {
      return warFinishInfo_;
    }

    public static final int MAPHOMELISTINFO_FIELD_NUMBER = 23;
    private com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapHomeListInfo mapHomeListInfo_;
    /**
     * <code>optional .MapHomeListInfo mapHomeListInfo = 23;</code>
     *
     * <pre>
     *地图下的房间列表信息
     * </pre>
     */
    public boolean hasMapHomeListInfo() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional .MapHomeListInfo mapHomeListInfo = 23;</code>
     *
     * <pre>
     *地图下的房间列表信息
     * </pre>
     */
    public com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapHomeListInfo getMapHomeListInfo() {
      return mapHomeListInfo_;
    }
    /**
     * <code>optional .MapHomeListInfo mapHomeListInfo = 23;</code>
     *
     * <pre>
     *地图下的房间列表信息
     * </pre>
     */
    public com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapHomeListInfoOrBuilder getMapHomeListInfoOrBuilder() {
      return mapHomeListInfo_;
    }

    public static final int DEADINFO_FIELD_NUMBER = 101;
    private com.ninelook.wecard.protocol.beans.BeanEntityMessage.DeadInfo deadInfo_;
    /**
     * <code>optional .DeadInfo deadInfo = 101;</code>
     *
     * <pre>
     *推送 - 死亡返回信息
     * </pre>
     */
    public boolean hasDeadInfo() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional .DeadInfo deadInfo = 101;</code>
     *
     * <pre>
     *推送 - 死亡返回信息
     * </pre>
     */
    public com.ninelook.wecard.protocol.beans.BeanEntityMessage.DeadInfo getDeadInfo() {
      return deadInfo_;
    }
    /**
     * <code>optional .DeadInfo deadInfo = 101;</code>
     *
     * <pre>
     *推送 - 死亡返回信息
     * </pre>
     */
    public com.ninelook.wecard.protocol.beans.BeanEntityMessage.DeadInfoOrBuilder getDeadInfoOrBuilder() {
      return deadInfo_;
    }

    public static final int CREATUREREFRESHINFO_FIELD_NUMBER = 102;
    private java.util.List<com.ninelook.wecard.protocol.beans.BeanCreatureMessage.CreatureInfo> creatureRefreshInfo_;
    /**
     * <code>repeated .CreatureInfo creatureRefreshInfo = 102;</code>
     *
     * <pre>
     *推送 - 野怪刷新返回信息
     * </pre>
     */
    public java.util.List<com.ninelook.wecard.protocol.beans.BeanCreatureMessage.CreatureInfo> getCreatureRefreshInfoList() {
      return creatureRefreshInfo_;
    }
    /**
     * <code>repeated .CreatureInfo creatureRefreshInfo = 102;</code>
     *
     * <pre>
     *推送 - 野怪刷新返回信息
     * </pre>
     */
    public java.util.List<? extends com.ninelook.wecard.protocol.beans.BeanCreatureMessage.CreatureInfoOrBuilder> 
        getCreatureRefreshInfoOrBuilderList() {
      return creatureRefreshInfo_;
    }
    /**
     * <code>repeated .CreatureInfo creatureRefreshInfo = 102;</code>
     *
     * <pre>
     *推送 - 野怪刷新返回信息
     * </pre>
     */
    public int getCreatureRefreshInfoCount() {
      return creatureRefreshInfo_.size();
    }
    /**
     * <code>repeated .CreatureInfo creatureRefreshInfo = 102;</code>
     *
     * <pre>
     *推送 - 野怪刷新返回信息
     * </pre>
     */
    public com.ninelook.wecard.protocol.beans.BeanCreatureMessage.CreatureInfo getCreatureRefreshInfo(int index) {
      return creatureRefreshInfo_.get(index);
    }
    /**
     * <code>repeated .CreatureInfo creatureRefreshInfo = 102;</code>
     *
     * <pre>
     *推送 - 野怪刷新返回信息
     * </pre>
     */
    public com.ninelook.wecard.protocol.beans.BeanCreatureMessage.CreatureInfoOrBuilder getCreatureRefreshInfoOrBuilder(
        int index) {
      return creatureRefreshInfo_.get(index);
    }

    public static final int BUFFENTITYINFO_FIELD_NUMBER = 103;
    private com.ninelook.wecard.protocol.beans.BeanFightMessage.BuffEntityInfo buffEntityInfo_;
    /**
     * <code>optional .BuffEntityInfo buffEntityInfo = 103;</code>
     *
     * <pre>
     *推送 - buff信息推送
     * </pre>
     */
    public boolean hasBuffEntityInfo() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>optional .BuffEntityInfo buffEntityInfo = 103;</code>
     *
     * <pre>
     *推送 - buff信息推送
     * </pre>
     */
    public com.ninelook.wecard.protocol.beans.BeanFightMessage.BuffEntityInfo getBuffEntityInfo() {
      return buffEntityInfo_;
    }
    /**
     * <code>optional .BuffEntityInfo buffEntityInfo = 103;</code>
     *
     * <pre>
     *推送 - buff信息推送
     * </pre>
     */
    public com.ninelook.wecard.protocol.beans.BeanFightMessage.BuffEntityInfoOrBuilder getBuffEntityInfoOrBuilder() {
      return buffEntityInfo_;
    }

    public static final int ENTITYREFRESHINFO_FIELD_NUMBER = 104;
    private java.util.List<com.ninelook.wecard.protocol.beans.BeanEntityMessage.EntityInfo> entityRefreshInfo_;
    /**
     * <code>repeated .EntityInfo entityRefreshInfo = 104;</code>
     *
     * <pre>
     *推送 - 实体刷新返回信息
     * </pre>
     */
    public java.util.List<com.ninelook.wecard.protocol.beans.BeanEntityMessage.EntityInfo> getEntityRefreshInfoList() {
      return entityRefreshInfo_;
    }
    /**
     * <code>repeated .EntityInfo entityRefreshInfo = 104;</code>
     *
     * <pre>
     *推送 - 实体刷新返回信息
     * </pre>
     */
    public java.util.List<? extends com.ninelook.wecard.protocol.beans.BeanEntityMessage.EntityInfoOrBuilder> 
        getEntityRefreshInfoOrBuilderList() {
      return entityRefreshInfo_;
    }
    /**
     * <code>repeated .EntityInfo entityRefreshInfo = 104;</code>
     *
     * <pre>
     *推送 - 实体刷新返回信息
     * </pre>
     */
    public int getEntityRefreshInfoCount() {
      return entityRefreshInfo_.size();
    }
    /**
     * <code>repeated .EntityInfo entityRefreshInfo = 104;</code>
     *
     * <pre>
     *推送 - 实体刷新返回信息
     * </pre>
     */
    public com.ninelook.wecard.protocol.beans.BeanEntityMessage.EntityInfo getEntityRefreshInfo(int index) {
      return entityRefreshInfo_.get(index);
    }
    /**
     * <code>repeated .EntityInfo entityRefreshInfo = 104;</code>
     *
     * <pre>
     *推送 - 实体刷新返回信息
     * </pre>
     */
    public com.ninelook.wecard.protocol.beans.BeanEntityMessage.EntityInfoOrBuilder getEntityRefreshInfoOrBuilder(
        int index) {
      return entityRefreshInfo_.get(index);
    }

    private void initFields() {
      mid_ = 0;
      code_ = 0;
      push_ = false;
      serverInfo_ = com.ninelook.wecard.protocol.beans.BeanSceneMessage.ServerInfo.getDefaultInstance();
      homeInfo_ = com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeInfo.getDefaultInstance();
      playerInfo_ = com.ninelook.wecard.protocol.beans.BeanSceneMessage.PlayerInfo.getDefaultInstance();
      heroInfo_ = com.ninelook.wecard.protocol.beans.BeanHeroMessage.HeroInfo.getDefaultInstance();
      warInfo_ = com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarInfo.getDefaultInstance();
      heroPosInfo_ = com.ninelook.wecard.protocol.beans.BeanEntityMessage.PosInfo.getDefaultInstance();
      fightAttackResultInfo_ = com.ninelook.wecard.protocol.beans.BeanFightMessage.FightAttackResultInfo.getDefaultInstance();
      lUserInfo_ = java.util.Collections.emptyList();
      loadedInfo_ = com.ninelook.wecard.protocol.beans.BeanHomeMessage.LoadedInfo.getDefaultInstance();
      homeGoInfo_ = com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeGoInfo.getDefaultInstance();
      homeExitInfo_ = com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeExitInfo.getDefaultInstance();
      skillResultInfo_ = com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultInfo.getDefaultInstance();
      warFinishInfo_ = com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarFinishInfo.getDefaultInstance();
      mapHomeListInfo_ = com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapHomeListInfo.getDefaultInstance();
      deadInfo_ = com.ninelook.wecard.protocol.beans.BeanEntityMessage.DeadInfo.getDefaultInstance();
      creatureRefreshInfo_ = java.util.Collections.emptyList();
      buffEntityInfo_ = com.ninelook.wecard.protocol.beans.BeanFightMessage.BuffEntityInfo.getDefaultInstance();
      entityRefreshInfo_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasMid()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCode()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasServerInfo()) {
        if (!getServerInfo().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasHomeInfo()) {
        if (!getHomeInfo().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasPlayerInfo()) {
        if (!getPlayerInfo().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasHeroInfo()) {
        if (!getHeroInfo().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasWarInfo()) {
        if (!getWarInfo().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasHeroPosInfo()) {
        if (!getHeroPosInfo().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasFightAttackResultInfo()) {
        if (!getFightAttackResultInfo().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getLUserInfoCount(); i++) {
        if (!getLUserInfo(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasLoadedInfo()) {
        if (!getLoadedInfo().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasHomeGoInfo()) {
        if (!getHomeGoInfo().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasHomeExitInfo()) {
        if (!getHomeExitInfo().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasSkillResultInfo()) {
        if (!getSkillResultInfo().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasWarFinishInfo()) {
        if (!getWarFinishInfo().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasMapHomeListInfo()) {
        if (!getMapHomeListInfo().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasDeadInfo()) {
        if (!getDeadInfo().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getCreatureRefreshInfoCount(); i++) {
        if (!getCreatureRefreshInfo(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasBuffEntityInfo()) {
        if (!getBuffEntityInfo().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getEntityRefreshInfoCount(); i++) {
        if (!getEntityRefreshInfo(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, mid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, code_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBool(3, push_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(10, serverInfo_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(11, homeInfo_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeMessage(12, playerInfo_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeMessage(13, heroInfo_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeMessage(14, warInfo_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeMessage(15, heroPosInfo_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeMessage(16, fightAttackResultInfo_);
      }
      for (int i = 0; i < lUserInfo_.size(); i++) {
        output.writeMessage(17, lUserInfo_.get(i));
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeMessage(18, loadedInfo_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeMessage(19, homeGoInfo_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeMessage(20, homeExitInfo_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeMessage(21, skillResultInfo_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeMessage(22, warFinishInfo_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeMessage(23, mapHomeListInfo_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeMessage(101, deadInfo_);
      }
      for (int i = 0; i < creatureRefreshInfo_.size(); i++) {
        output.writeMessage(102, creatureRefreshInfo_.get(i));
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeMessage(103, buffEntityInfo_);
      }
      for (int i = 0; i < entityRefreshInfo_.size(); i++) {
        output.writeMessage(104, entityRefreshInfo_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, mid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, code_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, push_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, serverInfo_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, homeInfo_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, playerInfo_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(13, heroInfo_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(14, warInfo_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(15, heroPosInfo_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(16, fightAttackResultInfo_);
      }
      for (int i = 0; i < lUserInfo_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(17, lUserInfo_.get(i));
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(18, loadedInfo_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(19, homeGoInfo_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(20, homeExitInfo_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(21, skillResultInfo_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(22, warFinishInfo_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(23, mapHomeListInfo_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(101, deadInfo_);
      }
      for (int i = 0; i < creatureRefreshInfo_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(102, creatureRefreshInfo_.get(i));
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(103, buffEntityInfo_);
      }
      for (int i = 0; i < entityRefreshInfo_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(104, entityRefreshInfo_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ninelook.wecard.protocol.Response.HeshResMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ninelook.wecard.protocol.Response.HeshResMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ninelook.wecard.protocol.Response.HeshResMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ninelook.wecard.protocol.Response.HeshResMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ninelook.wecard.protocol.Response.HeshResMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ninelook.wecard.protocol.Response.HeshResMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ninelook.wecard.protocol.Response.HeshResMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ninelook.wecard.protocol.Response.HeshResMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ninelook.wecard.protocol.Response.HeshResMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ninelook.wecard.protocol.Response.HeshResMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ninelook.wecard.protocol.Response.HeshResMessage prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code HeshResMessage}
     *
     * <pre>
     *Hesh Res Message
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:HeshResMessage)
        com.ninelook.wecard.protocol.Response.HeshResMessageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.ninelook.wecard.protocol.Response.internal_static_HeshResMessage_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.ninelook.wecard.protocol.Response.internal_static_HeshResMessage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.ninelook.wecard.protocol.Response.HeshResMessage.class, com.ninelook.wecard.protocol.Response.HeshResMessage.Builder.class);
      }

      // Construct using com.ninelook.wecard.protocol.Response.HeshResMessage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getServerInfoFieldBuilder();
          getHomeInfoFieldBuilder();
          getPlayerInfoFieldBuilder();
          getHeroInfoFieldBuilder();
          getWarInfoFieldBuilder();
          getHeroPosInfoFieldBuilder();
          getFightAttackResultInfoFieldBuilder();
          getLUserInfoFieldBuilder();
          getLoadedInfoFieldBuilder();
          getHomeGoInfoFieldBuilder();
          getHomeExitInfoFieldBuilder();
          getSkillResultInfoFieldBuilder();
          getWarFinishInfoFieldBuilder();
          getMapHomeListInfoFieldBuilder();
          getDeadInfoFieldBuilder();
          getCreatureRefreshInfoFieldBuilder();
          getBuffEntityInfoFieldBuilder();
          getEntityRefreshInfoFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        mid_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        code_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        push_ = false;
        bitField0_ = (bitField0_ & ~0x00000004);
        if (serverInfoBuilder_ == null) {
          serverInfo_ = com.ninelook.wecard.protocol.beans.BeanSceneMessage.ServerInfo.getDefaultInstance();
        } else {
          serverInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        if (homeInfoBuilder_ == null) {
          homeInfo_ = com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeInfo.getDefaultInstance();
        } else {
          homeInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        if (playerInfoBuilder_ == null) {
          playerInfo_ = com.ninelook.wecard.protocol.beans.BeanSceneMessage.PlayerInfo.getDefaultInstance();
        } else {
          playerInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        if (heroInfoBuilder_ == null) {
          heroInfo_ = com.ninelook.wecard.protocol.beans.BeanHeroMessage.HeroInfo.getDefaultInstance();
        } else {
          heroInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        if (warInfoBuilder_ == null) {
          warInfo_ = com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarInfo.getDefaultInstance();
        } else {
          warInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000080);
        if (heroPosInfoBuilder_ == null) {
          heroPosInfo_ = com.ninelook.wecard.protocol.beans.BeanEntityMessage.PosInfo.getDefaultInstance();
        } else {
          heroPosInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000100);
        if (fightAttackResultInfoBuilder_ == null) {
          fightAttackResultInfo_ = com.ninelook.wecard.protocol.beans.BeanFightMessage.FightAttackResultInfo.getDefaultInstance();
        } else {
          fightAttackResultInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000200);
        if (lUserInfoBuilder_ == null) {
          lUserInfo_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000400);
        } else {
          lUserInfoBuilder_.clear();
        }
        if (loadedInfoBuilder_ == null) {
          loadedInfo_ = com.ninelook.wecard.protocol.beans.BeanHomeMessage.LoadedInfo.getDefaultInstance();
        } else {
          loadedInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000800);
        if (homeGoInfoBuilder_ == null) {
          homeGoInfo_ = com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeGoInfo.getDefaultInstance();
        } else {
          homeGoInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00001000);
        if (homeExitInfoBuilder_ == null) {
          homeExitInfo_ = com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeExitInfo.getDefaultInstance();
        } else {
          homeExitInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00002000);
        if (skillResultInfoBuilder_ == null) {
          skillResultInfo_ = com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultInfo.getDefaultInstance();
        } else {
          skillResultInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00004000);
        if (warFinishInfoBuilder_ == null) {
          warFinishInfo_ = com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarFinishInfo.getDefaultInstance();
        } else {
          warFinishInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00008000);
        if (mapHomeListInfoBuilder_ == null) {
          mapHomeListInfo_ = com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapHomeListInfo.getDefaultInstance();
        } else {
          mapHomeListInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00010000);
        if (deadInfoBuilder_ == null) {
          deadInfo_ = com.ninelook.wecard.protocol.beans.BeanEntityMessage.DeadInfo.getDefaultInstance();
        } else {
          deadInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00020000);
        if (creatureRefreshInfoBuilder_ == null) {
          creatureRefreshInfo_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00040000);
        } else {
          creatureRefreshInfoBuilder_.clear();
        }
        if (buffEntityInfoBuilder_ == null) {
          buffEntityInfo_ = com.ninelook.wecard.protocol.beans.BeanFightMessage.BuffEntityInfo.getDefaultInstance();
        } else {
          buffEntityInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00080000);
        if (entityRefreshInfoBuilder_ == null) {
          entityRefreshInfo_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00100000);
        } else {
          entityRefreshInfoBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.ninelook.wecard.protocol.Response.internal_static_HeshResMessage_descriptor;
      }

      public com.ninelook.wecard.protocol.Response.HeshResMessage getDefaultInstanceForType() {
        return com.ninelook.wecard.protocol.Response.HeshResMessage.getDefaultInstance();
      }

      public com.ninelook.wecard.protocol.Response.HeshResMessage build() {
        com.ninelook.wecard.protocol.Response.HeshResMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ninelook.wecard.protocol.Response.HeshResMessage buildPartial() {
        com.ninelook.wecard.protocol.Response.HeshResMessage result = new com.ninelook.wecard.protocol.Response.HeshResMessage(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.mid_ = mid_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.code_ = code_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.push_ = push_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (serverInfoBuilder_ == null) {
          result.serverInfo_ = serverInfo_;
        } else {
          result.serverInfo_ = serverInfoBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        if (homeInfoBuilder_ == null) {
          result.homeInfo_ = homeInfo_;
        } else {
          result.homeInfo_ = homeInfoBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        if (playerInfoBuilder_ == null) {
          result.playerInfo_ = playerInfo_;
        } else {
          result.playerInfo_ = playerInfoBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        if (heroInfoBuilder_ == null) {
          result.heroInfo_ = heroInfo_;
        } else {
          result.heroInfo_ = heroInfoBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        if (warInfoBuilder_ == null) {
          result.warInfo_ = warInfo_;
        } else {
          result.warInfo_ = warInfoBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        if (heroPosInfoBuilder_ == null) {
          result.heroPosInfo_ = heroPosInfo_;
        } else {
          result.heroPosInfo_ = heroPosInfoBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        if (fightAttackResultInfoBuilder_ == null) {
          result.fightAttackResultInfo_ = fightAttackResultInfo_;
        } else {
          result.fightAttackResultInfo_ = fightAttackResultInfoBuilder_.build();
        }
        if (lUserInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000400) == 0x00000400)) {
            lUserInfo_ = java.util.Collections.unmodifiableList(lUserInfo_);
            bitField0_ = (bitField0_ & ~0x00000400);
          }
          result.lUserInfo_ = lUserInfo_;
        } else {
          result.lUserInfo_ = lUserInfoBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000400;
        }
        if (loadedInfoBuilder_ == null) {
          result.loadedInfo_ = loadedInfo_;
        } else {
          result.loadedInfo_ = loadedInfoBuilder_.build();
        }
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00000800;
        }
        if (homeGoInfoBuilder_ == null) {
          result.homeGoInfo_ = homeGoInfo_;
        } else {
          result.homeGoInfo_ = homeGoInfoBuilder_.build();
        }
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00001000;
        }
        if (homeExitInfoBuilder_ == null) {
          result.homeExitInfo_ = homeExitInfo_;
        } else {
          result.homeExitInfo_ = homeExitInfoBuilder_.build();
        }
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00002000;
        }
        if (skillResultInfoBuilder_ == null) {
          result.skillResultInfo_ = skillResultInfo_;
        } else {
          result.skillResultInfo_ = skillResultInfoBuilder_.build();
        }
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00004000;
        }
        if (warFinishInfoBuilder_ == null) {
          result.warFinishInfo_ = warFinishInfo_;
        } else {
          result.warFinishInfo_ = warFinishInfoBuilder_.build();
        }
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00008000;
        }
        if (mapHomeListInfoBuilder_ == null) {
          result.mapHomeListInfo_ = mapHomeListInfo_;
        } else {
          result.mapHomeListInfo_ = mapHomeListInfoBuilder_.build();
        }
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00010000;
        }
        if (deadInfoBuilder_ == null) {
          result.deadInfo_ = deadInfo_;
        } else {
          result.deadInfo_ = deadInfoBuilder_.build();
        }
        if (creatureRefreshInfoBuilder_ == null) {
          if (((bitField0_ & 0x00040000) == 0x00040000)) {
            creatureRefreshInfo_ = java.util.Collections.unmodifiableList(creatureRefreshInfo_);
            bitField0_ = (bitField0_ & ~0x00040000);
          }
          result.creatureRefreshInfo_ = creatureRefreshInfo_;
        } else {
          result.creatureRefreshInfo_ = creatureRefreshInfoBuilder_.build();
        }
        if (((from_bitField0_ & 0x00080000) == 0x00080000)) {
          to_bitField0_ |= 0x00020000;
        }
        if (buffEntityInfoBuilder_ == null) {
          result.buffEntityInfo_ = buffEntityInfo_;
        } else {
          result.buffEntityInfo_ = buffEntityInfoBuilder_.build();
        }
        if (entityRefreshInfoBuilder_ == null) {
          if (((bitField0_ & 0x00100000) == 0x00100000)) {
            entityRefreshInfo_ = java.util.Collections.unmodifiableList(entityRefreshInfo_);
            bitField0_ = (bitField0_ & ~0x00100000);
          }
          result.entityRefreshInfo_ = entityRefreshInfo_;
        } else {
          result.entityRefreshInfo_ = entityRefreshInfoBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.ninelook.wecard.protocol.Response.HeshResMessage) {
          return mergeFrom((com.ninelook.wecard.protocol.Response.HeshResMessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.ninelook.wecard.protocol.Response.HeshResMessage other) {
        if (other == com.ninelook.wecard.protocol.Response.HeshResMessage.getDefaultInstance()) return this;
        if (other.hasMid()) {
          setMid(other.getMid());
        }
        if (other.hasCode()) {
          setCode(other.getCode());
        }
        if (other.hasPush()) {
          setPush(other.getPush());
        }
        if (other.hasServerInfo()) {
          mergeServerInfo(other.getServerInfo());
        }
        if (other.hasHomeInfo()) {
          mergeHomeInfo(other.getHomeInfo());
        }
        if (other.hasPlayerInfo()) {
          mergePlayerInfo(other.getPlayerInfo());
        }
        if (other.hasHeroInfo()) {
          mergeHeroInfo(other.getHeroInfo());
        }
        if (other.hasWarInfo()) {
          mergeWarInfo(other.getWarInfo());
        }
        if (other.hasHeroPosInfo()) {
          mergeHeroPosInfo(other.getHeroPosInfo());
        }
        if (other.hasFightAttackResultInfo()) {
          mergeFightAttackResultInfo(other.getFightAttackResultInfo());
        }
        if (lUserInfoBuilder_ == null) {
          if (!other.lUserInfo_.isEmpty()) {
            if (lUserInfo_.isEmpty()) {
              lUserInfo_ = other.lUserInfo_;
              bitField0_ = (bitField0_ & ~0x00000400);
            } else {
              ensureLUserInfoIsMutable();
              lUserInfo_.addAll(other.lUserInfo_);
            }
            onChanged();
          }
        } else {
          if (!other.lUserInfo_.isEmpty()) {
            if (lUserInfoBuilder_.isEmpty()) {
              lUserInfoBuilder_.dispose();
              lUserInfoBuilder_ = null;
              lUserInfo_ = other.lUserInfo_;
              bitField0_ = (bitField0_ & ~0x00000400);
              lUserInfoBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getLUserInfoFieldBuilder() : null;
            } else {
              lUserInfoBuilder_.addAllMessages(other.lUserInfo_);
            }
          }
        }
        if (other.hasLoadedInfo()) {
          mergeLoadedInfo(other.getLoadedInfo());
        }
        if (other.hasHomeGoInfo()) {
          mergeHomeGoInfo(other.getHomeGoInfo());
        }
        if (other.hasHomeExitInfo()) {
          mergeHomeExitInfo(other.getHomeExitInfo());
        }
        if (other.hasSkillResultInfo()) {
          mergeSkillResultInfo(other.getSkillResultInfo());
        }
        if (other.hasWarFinishInfo()) {
          mergeWarFinishInfo(other.getWarFinishInfo());
        }
        if (other.hasMapHomeListInfo()) {
          mergeMapHomeListInfo(other.getMapHomeListInfo());
        }
        if (other.hasDeadInfo()) {
          mergeDeadInfo(other.getDeadInfo());
        }
        if (creatureRefreshInfoBuilder_ == null) {
          if (!other.creatureRefreshInfo_.isEmpty()) {
            if (creatureRefreshInfo_.isEmpty()) {
              creatureRefreshInfo_ = other.creatureRefreshInfo_;
              bitField0_ = (bitField0_ & ~0x00040000);
            } else {
              ensureCreatureRefreshInfoIsMutable();
              creatureRefreshInfo_.addAll(other.creatureRefreshInfo_);
            }
            onChanged();
          }
        } else {
          if (!other.creatureRefreshInfo_.isEmpty()) {
            if (creatureRefreshInfoBuilder_.isEmpty()) {
              creatureRefreshInfoBuilder_.dispose();
              creatureRefreshInfoBuilder_ = null;
              creatureRefreshInfo_ = other.creatureRefreshInfo_;
              bitField0_ = (bitField0_ & ~0x00040000);
              creatureRefreshInfoBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getCreatureRefreshInfoFieldBuilder() : null;
            } else {
              creatureRefreshInfoBuilder_.addAllMessages(other.creatureRefreshInfo_);
            }
          }
        }
        if (other.hasBuffEntityInfo()) {
          mergeBuffEntityInfo(other.getBuffEntityInfo());
        }
        if (entityRefreshInfoBuilder_ == null) {
          if (!other.entityRefreshInfo_.isEmpty()) {
            if (entityRefreshInfo_.isEmpty()) {
              entityRefreshInfo_ = other.entityRefreshInfo_;
              bitField0_ = (bitField0_ & ~0x00100000);
            } else {
              ensureEntityRefreshInfoIsMutable();
              entityRefreshInfo_.addAll(other.entityRefreshInfo_);
            }
            onChanged();
          }
        } else {
          if (!other.entityRefreshInfo_.isEmpty()) {
            if (entityRefreshInfoBuilder_.isEmpty()) {
              entityRefreshInfoBuilder_.dispose();
              entityRefreshInfoBuilder_ = null;
              entityRefreshInfo_ = other.entityRefreshInfo_;
              bitField0_ = (bitField0_ & ~0x00100000);
              entityRefreshInfoBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getEntityRefreshInfoFieldBuilder() : null;
            } else {
              entityRefreshInfoBuilder_.addAllMessages(other.entityRefreshInfo_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasMid()) {
          
          return false;
        }
        if (!hasCode()) {
          
          return false;
        }
        if (hasServerInfo()) {
          if (!getServerInfo().isInitialized()) {
            
            return false;
          }
        }
        if (hasHomeInfo()) {
          if (!getHomeInfo().isInitialized()) {
            
            return false;
          }
        }
        if (hasPlayerInfo()) {
          if (!getPlayerInfo().isInitialized()) {
            
            return false;
          }
        }
        if (hasHeroInfo()) {
          if (!getHeroInfo().isInitialized()) {
            
            return false;
          }
        }
        if (hasWarInfo()) {
          if (!getWarInfo().isInitialized()) {
            
            return false;
          }
        }
        if (hasHeroPosInfo()) {
          if (!getHeroPosInfo().isInitialized()) {
            
            return false;
          }
        }
        if (hasFightAttackResultInfo()) {
          if (!getFightAttackResultInfo().isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getLUserInfoCount(); i++) {
          if (!getLUserInfo(i).isInitialized()) {
            
            return false;
          }
        }
        if (hasLoadedInfo()) {
          if (!getLoadedInfo().isInitialized()) {
            
            return false;
          }
        }
        if (hasHomeGoInfo()) {
          if (!getHomeGoInfo().isInitialized()) {
            
            return false;
          }
        }
        if (hasHomeExitInfo()) {
          if (!getHomeExitInfo().isInitialized()) {
            
            return false;
          }
        }
        if (hasSkillResultInfo()) {
          if (!getSkillResultInfo().isInitialized()) {
            
            return false;
          }
        }
        if (hasWarFinishInfo()) {
          if (!getWarFinishInfo().isInitialized()) {
            
            return false;
          }
        }
        if (hasMapHomeListInfo()) {
          if (!getMapHomeListInfo().isInitialized()) {
            
            return false;
          }
        }
        if (hasDeadInfo()) {
          if (!getDeadInfo().isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getCreatureRefreshInfoCount(); i++) {
          if (!getCreatureRefreshInfo(i).isInitialized()) {
            
            return false;
          }
        }
        if (hasBuffEntityInfo()) {
          if (!getBuffEntityInfo().isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getEntityRefreshInfoCount(); i++) {
          if (!getEntityRefreshInfo(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ninelook.wecard.protocol.Response.HeshResMessage parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ninelook.wecard.protocol.Response.HeshResMessage) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int mid_ ;
      /**
       * <code>required int32 mid = 1;</code>
       *
       * <pre>
       *SYSTEM-MESSAGE ID
       * </pre>
       */
      public boolean hasMid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 mid = 1;</code>
       *
       * <pre>
       *SYSTEM-MESSAGE ID
       * </pre>
       */
      public int getMid() {
        return mid_;
      }
      /**
       * <code>required int32 mid = 1;</code>
       *
       * <pre>
       *SYSTEM-MESSAGE ID
       * </pre>
       */
      public Builder setMid(int value) {
        bitField0_ |= 0x00000001;
        mid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 mid = 1;</code>
       *
       * <pre>
       *SYSTEM-MESSAGE ID
       * </pre>
       */
      public Builder clearMid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        mid_ = 0;
        onChanged();
        return this;
      }

      private int code_ ;
      /**
       * <code>required int32 code = 2 [default = 0];</code>
       *
       * <pre>
       *SYSTEM-CODE(0为成功, 其它均为错误码)
       * </pre>
       */
      public boolean hasCode() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 code = 2 [default = 0];</code>
       *
       * <pre>
       *SYSTEM-CODE(0为成功, 其它均为错误码)
       * </pre>
       */
      public int getCode() {
        return code_;
      }
      /**
       * <code>required int32 code = 2 [default = 0];</code>
       *
       * <pre>
       *SYSTEM-CODE(0为成功, 其它均为错误码)
       * </pre>
       */
      public Builder setCode(int value) {
        bitField0_ |= 0x00000002;
        code_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 code = 2 [default = 0];</code>
       *
       * <pre>
       *SYSTEM-CODE(0为成功, 其它均为错误码)
       * </pre>
       */
      public Builder clearCode() {
        bitField0_ = (bitField0_ & ~0x00000002);
        code_ = 0;
        onChanged();
        return this;
      }

      private boolean push_ ;
      /**
       * <code>optional bool push = 3 [default = false];</code>
       *
       * <pre>
       *SYSTEM-PUSH(是否为推送消息)
       * </pre>
       */
      public boolean hasPush() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional bool push = 3 [default = false];</code>
       *
       * <pre>
       *SYSTEM-PUSH(是否为推送消息)
       * </pre>
       */
      public boolean getPush() {
        return push_;
      }
      /**
       * <code>optional bool push = 3 [default = false];</code>
       *
       * <pre>
       *SYSTEM-PUSH(是否为推送消息)
       * </pre>
       */
      public Builder setPush(boolean value) {
        bitField0_ |= 0x00000004;
        push_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool push = 3 [default = false];</code>
       *
       * <pre>
       *SYSTEM-PUSH(是否为推送消息)
       * </pre>
       */
      public Builder clearPush() {
        bitField0_ = (bitField0_ & ~0x00000004);
        push_ = false;
        onChanged();
        return this;
      }

      private com.ninelook.wecard.protocol.beans.BeanSceneMessage.ServerInfo serverInfo_ = com.ninelook.wecard.protocol.beans.BeanSceneMessage.ServerInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.ninelook.wecard.protocol.beans.BeanSceneMessage.ServerInfo, com.ninelook.wecard.protocol.beans.BeanSceneMessage.ServerInfo.Builder, com.ninelook.wecard.protocol.beans.BeanSceneMessage.ServerInfoOrBuilder> serverInfoBuilder_;
      /**
       * <code>optional .ServerInfo serverInfo = 10;</code>
       *
       * <pre>
       *服务器信息
       * </pre>
       */
      public boolean hasServerInfo() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .ServerInfo serverInfo = 10;</code>
       *
       * <pre>
       *服务器信息
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanSceneMessage.ServerInfo getServerInfo() {
        if (serverInfoBuilder_ == null) {
          return serverInfo_;
        } else {
          return serverInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .ServerInfo serverInfo = 10;</code>
       *
       * <pre>
       *服务器信息
       * </pre>
       */
      public Builder setServerInfo(com.ninelook.wecard.protocol.beans.BeanSceneMessage.ServerInfo value) {
        if (serverInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverInfo_ = value;
          onChanged();
        } else {
          serverInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .ServerInfo serverInfo = 10;</code>
       *
       * <pre>
       *服务器信息
       * </pre>
       */
      public Builder setServerInfo(
          com.ninelook.wecard.protocol.beans.BeanSceneMessage.ServerInfo.Builder builderForValue) {
        if (serverInfoBuilder_ == null) {
          serverInfo_ = builderForValue.build();
          onChanged();
        } else {
          serverInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .ServerInfo serverInfo = 10;</code>
       *
       * <pre>
       *服务器信息
       * </pre>
       */
      public Builder mergeServerInfo(com.ninelook.wecard.protocol.beans.BeanSceneMessage.ServerInfo value) {
        if (serverInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              serverInfo_ != com.ninelook.wecard.protocol.beans.BeanSceneMessage.ServerInfo.getDefaultInstance()) {
            serverInfo_ =
              com.ninelook.wecard.protocol.beans.BeanSceneMessage.ServerInfo.newBuilder(serverInfo_).mergeFrom(value).buildPartial();
          } else {
            serverInfo_ = value;
          }
          onChanged();
        } else {
          serverInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .ServerInfo serverInfo = 10;</code>
       *
       * <pre>
       *服务器信息
       * </pre>
       */
      public Builder clearServerInfo() {
        if (serverInfoBuilder_ == null) {
          serverInfo_ = com.ninelook.wecard.protocol.beans.BeanSceneMessage.ServerInfo.getDefaultInstance();
          onChanged();
        } else {
          serverInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <code>optional .ServerInfo serverInfo = 10;</code>
       *
       * <pre>
       *服务器信息
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanSceneMessage.ServerInfo.Builder getServerInfoBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getServerInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .ServerInfo serverInfo = 10;</code>
       *
       * <pre>
       *服务器信息
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanSceneMessage.ServerInfoOrBuilder getServerInfoOrBuilder() {
        if (serverInfoBuilder_ != null) {
          return serverInfoBuilder_.getMessageOrBuilder();
        } else {
          return serverInfo_;
        }
      }
      /**
       * <code>optional .ServerInfo serverInfo = 10;</code>
       *
       * <pre>
       *服务器信息
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.ninelook.wecard.protocol.beans.BeanSceneMessage.ServerInfo, com.ninelook.wecard.protocol.beans.BeanSceneMessage.ServerInfo.Builder, com.ninelook.wecard.protocol.beans.BeanSceneMessage.ServerInfoOrBuilder> 
          getServerInfoFieldBuilder() {
        if (serverInfoBuilder_ == null) {
          serverInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.ninelook.wecard.protocol.beans.BeanSceneMessage.ServerInfo, com.ninelook.wecard.protocol.beans.BeanSceneMessage.ServerInfo.Builder, com.ninelook.wecard.protocol.beans.BeanSceneMessage.ServerInfoOrBuilder>(
                  getServerInfo(),
                  getParentForChildren(),
                  isClean());
          serverInfo_ = null;
        }
        return serverInfoBuilder_;
      }

      private com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeInfo homeInfo_ = com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeInfo, com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeInfo.Builder, com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeInfoOrBuilder> homeInfoBuilder_;
      /**
       * <code>optional .HomeInfo homeInfo = 11;</code>
       *
       * <pre>
       *房间信息
       * </pre>
       */
      public boolean hasHomeInfo() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .HomeInfo homeInfo = 11;</code>
       *
       * <pre>
       *房间信息
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeInfo getHomeInfo() {
        if (homeInfoBuilder_ == null) {
          return homeInfo_;
        } else {
          return homeInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .HomeInfo homeInfo = 11;</code>
       *
       * <pre>
       *房间信息
       * </pre>
       */
      public Builder setHomeInfo(com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeInfo value) {
        if (homeInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          homeInfo_ = value;
          onChanged();
        } else {
          homeInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .HomeInfo homeInfo = 11;</code>
       *
       * <pre>
       *房间信息
       * </pre>
       */
      public Builder setHomeInfo(
          com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeInfo.Builder builderForValue) {
        if (homeInfoBuilder_ == null) {
          homeInfo_ = builderForValue.build();
          onChanged();
        } else {
          homeInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .HomeInfo homeInfo = 11;</code>
       *
       * <pre>
       *房间信息
       * </pre>
       */
      public Builder mergeHomeInfo(com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeInfo value) {
        if (homeInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010) &&
              homeInfo_ != com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeInfo.getDefaultInstance()) {
            homeInfo_ =
              com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeInfo.newBuilder(homeInfo_).mergeFrom(value).buildPartial();
          } else {
            homeInfo_ = value;
          }
          onChanged();
        } else {
          homeInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .HomeInfo homeInfo = 11;</code>
       *
       * <pre>
       *房间信息
       * </pre>
       */
      public Builder clearHomeInfo() {
        if (homeInfoBuilder_ == null) {
          homeInfo_ = com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeInfo.getDefaultInstance();
          onChanged();
        } else {
          homeInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      /**
       * <code>optional .HomeInfo homeInfo = 11;</code>
       *
       * <pre>
       *房间信息
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeInfo.Builder getHomeInfoBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getHomeInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .HomeInfo homeInfo = 11;</code>
       *
       * <pre>
       *房间信息
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeInfoOrBuilder getHomeInfoOrBuilder() {
        if (homeInfoBuilder_ != null) {
          return homeInfoBuilder_.getMessageOrBuilder();
        } else {
          return homeInfo_;
        }
      }
      /**
       * <code>optional .HomeInfo homeInfo = 11;</code>
       *
       * <pre>
       *房间信息
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeInfo, com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeInfo.Builder, com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeInfoOrBuilder> 
          getHomeInfoFieldBuilder() {
        if (homeInfoBuilder_ == null) {
          homeInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeInfo, com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeInfo.Builder, com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeInfoOrBuilder>(
                  getHomeInfo(),
                  getParentForChildren(),
                  isClean());
          homeInfo_ = null;
        }
        return homeInfoBuilder_;
      }

      private com.ninelook.wecard.protocol.beans.BeanSceneMessage.PlayerInfo playerInfo_ = com.ninelook.wecard.protocol.beans.BeanSceneMessage.PlayerInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.ninelook.wecard.protocol.beans.BeanSceneMessage.PlayerInfo, com.ninelook.wecard.protocol.beans.BeanSceneMessage.PlayerInfo.Builder, com.ninelook.wecard.protocol.beans.BeanSceneMessage.PlayerInfoOrBuilder> playerInfoBuilder_;
      /**
       * <code>optional .PlayerInfo playerInfo = 12;</code>
       *
       * <pre>
       *玩家信息
       * </pre>
       */
      public boolean hasPlayerInfo() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional .PlayerInfo playerInfo = 12;</code>
       *
       * <pre>
       *玩家信息
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanSceneMessage.PlayerInfo getPlayerInfo() {
        if (playerInfoBuilder_ == null) {
          return playerInfo_;
        } else {
          return playerInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .PlayerInfo playerInfo = 12;</code>
       *
       * <pre>
       *玩家信息
       * </pre>
       */
      public Builder setPlayerInfo(com.ninelook.wecard.protocol.beans.BeanSceneMessage.PlayerInfo value) {
        if (playerInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          playerInfo_ = value;
          onChanged();
        } else {
          playerInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .PlayerInfo playerInfo = 12;</code>
       *
       * <pre>
       *玩家信息
       * </pre>
       */
      public Builder setPlayerInfo(
          com.ninelook.wecard.protocol.beans.BeanSceneMessage.PlayerInfo.Builder builderForValue) {
        if (playerInfoBuilder_ == null) {
          playerInfo_ = builderForValue.build();
          onChanged();
        } else {
          playerInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .PlayerInfo playerInfo = 12;</code>
       *
       * <pre>
       *玩家信息
       * </pre>
       */
      public Builder mergePlayerInfo(com.ninelook.wecard.protocol.beans.BeanSceneMessage.PlayerInfo value) {
        if (playerInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020) &&
              playerInfo_ != com.ninelook.wecard.protocol.beans.BeanSceneMessage.PlayerInfo.getDefaultInstance()) {
            playerInfo_ =
              com.ninelook.wecard.protocol.beans.BeanSceneMessage.PlayerInfo.newBuilder(playerInfo_).mergeFrom(value).buildPartial();
          } else {
            playerInfo_ = value;
          }
          onChanged();
        } else {
          playerInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .PlayerInfo playerInfo = 12;</code>
       *
       * <pre>
       *玩家信息
       * </pre>
       */
      public Builder clearPlayerInfo() {
        if (playerInfoBuilder_ == null) {
          playerInfo_ = com.ninelook.wecard.protocol.beans.BeanSceneMessage.PlayerInfo.getDefaultInstance();
          onChanged();
        } else {
          playerInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }
      /**
       * <code>optional .PlayerInfo playerInfo = 12;</code>
       *
       * <pre>
       *玩家信息
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanSceneMessage.PlayerInfo.Builder getPlayerInfoBuilder() {
        bitField0_ |= 0x00000020;
        onChanged();
        return getPlayerInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .PlayerInfo playerInfo = 12;</code>
       *
       * <pre>
       *玩家信息
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanSceneMessage.PlayerInfoOrBuilder getPlayerInfoOrBuilder() {
        if (playerInfoBuilder_ != null) {
          return playerInfoBuilder_.getMessageOrBuilder();
        } else {
          return playerInfo_;
        }
      }
      /**
       * <code>optional .PlayerInfo playerInfo = 12;</code>
       *
       * <pre>
       *玩家信息
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.ninelook.wecard.protocol.beans.BeanSceneMessage.PlayerInfo, com.ninelook.wecard.protocol.beans.BeanSceneMessage.PlayerInfo.Builder, com.ninelook.wecard.protocol.beans.BeanSceneMessage.PlayerInfoOrBuilder> 
          getPlayerInfoFieldBuilder() {
        if (playerInfoBuilder_ == null) {
          playerInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.ninelook.wecard.protocol.beans.BeanSceneMessage.PlayerInfo, com.ninelook.wecard.protocol.beans.BeanSceneMessage.PlayerInfo.Builder, com.ninelook.wecard.protocol.beans.BeanSceneMessage.PlayerInfoOrBuilder>(
                  getPlayerInfo(),
                  getParentForChildren(),
                  isClean());
          playerInfo_ = null;
        }
        return playerInfoBuilder_;
      }

      private com.ninelook.wecard.protocol.beans.BeanHeroMessage.HeroInfo heroInfo_ = com.ninelook.wecard.protocol.beans.BeanHeroMessage.HeroInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.ninelook.wecard.protocol.beans.BeanHeroMessage.HeroInfo, com.ninelook.wecard.protocol.beans.BeanHeroMessage.HeroInfo.Builder, com.ninelook.wecard.protocol.beans.BeanHeroMessage.HeroInfoOrBuilder> heroInfoBuilder_;
      /**
       * <code>optional .HeroInfo heroInfo = 13;</code>
       *
       * <pre>
       *英雄信息
       * </pre>
       */
      public boolean hasHeroInfo() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional .HeroInfo heroInfo = 13;</code>
       *
       * <pre>
       *英雄信息
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanHeroMessage.HeroInfo getHeroInfo() {
        if (heroInfoBuilder_ == null) {
          return heroInfo_;
        } else {
          return heroInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .HeroInfo heroInfo = 13;</code>
       *
       * <pre>
       *英雄信息
       * </pre>
       */
      public Builder setHeroInfo(com.ninelook.wecard.protocol.beans.BeanHeroMessage.HeroInfo value) {
        if (heroInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          heroInfo_ = value;
          onChanged();
        } else {
          heroInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .HeroInfo heroInfo = 13;</code>
       *
       * <pre>
       *英雄信息
       * </pre>
       */
      public Builder setHeroInfo(
          com.ninelook.wecard.protocol.beans.BeanHeroMessage.HeroInfo.Builder builderForValue) {
        if (heroInfoBuilder_ == null) {
          heroInfo_ = builderForValue.build();
          onChanged();
        } else {
          heroInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .HeroInfo heroInfo = 13;</code>
       *
       * <pre>
       *英雄信息
       * </pre>
       */
      public Builder mergeHeroInfo(com.ninelook.wecard.protocol.beans.BeanHeroMessage.HeroInfo value) {
        if (heroInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040) &&
              heroInfo_ != com.ninelook.wecard.protocol.beans.BeanHeroMessage.HeroInfo.getDefaultInstance()) {
            heroInfo_ =
              com.ninelook.wecard.protocol.beans.BeanHeroMessage.HeroInfo.newBuilder(heroInfo_).mergeFrom(value).buildPartial();
          } else {
            heroInfo_ = value;
          }
          onChanged();
        } else {
          heroInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .HeroInfo heroInfo = 13;</code>
       *
       * <pre>
       *英雄信息
       * </pre>
       */
      public Builder clearHeroInfo() {
        if (heroInfoBuilder_ == null) {
          heroInfo_ = com.ninelook.wecard.protocol.beans.BeanHeroMessage.HeroInfo.getDefaultInstance();
          onChanged();
        } else {
          heroInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }
      /**
       * <code>optional .HeroInfo heroInfo = 13;</code>
       *
       * <pre>
       *英雄信息
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanHeroMessage.HeroInfo.Builder getHeroInfoBuilder() {
        bitField0_ |= 0x00000040;
        onChanged();
        return getHeroInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .HeroInfo heroInfo = 13;</code>
       *
       * <pre>
       *英雄信息
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanHeroMessage.HeroInfoOrBuilder getHeroInfoOrBuilder() {
        if (heroInfoBuilder_ != null) {
          return heroInfoBuilder_.getMessageOrBuilder();
        } else {
          return heroInfo_;
        }
      }
      /**
       * <code>optional .HeroInfo heroInfo = 13;</code>
       *
       * <pre>
       *英雄信息
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.ninelook.wecard.protocol.beans.BeanHeroMessage.HeroInfo, com.ninelook.wecard.protocol.beans.BeanHeroMessage.HeroInfo.Builder, com.ninelook.wecard.protocol.beans.BeanHeroMessage.HeroInfoOrBuilder> 
          getHeroInfoFieldBuilder() {
        if (heroInfoBuilder_ == null) {
          heroInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.ninelook.wecard.protocol.beans.BeanHeroMessage.HeroInfo, com.ninelook.wecard.protocol.beans.BeanHeroMessage.HeroInfo.Builder, com.ninelook.wecard.protocol.beans.BeanHeroMessage.HeroInfoOrBuilder>(
                  getHeroInfo(),
                  getParentForChildren(),
                  isClean());
          heroInfo_ = null;
        }
        return heroInfoBuilder_;
      }

      private com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarInfo warInfo_ = com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarInfo, com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarInfo.Builder, com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarInfoOrBuilder> warInfoBuilder_;
      /**
       * <code>optional .WarInfo warInfo = 14;</code>
       *
       * <pre>
       *战场信息
       * </pre>
       */
      public boolean hasWarInfo() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional .WarInfo warInfo = 14;</code>
       *
       * <pre>
       *战场信息
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarInfo getWarInfo() {
        if (warInfoBuilder_ == null) {
          return warInfo_;
        } else {
          return warInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .WarInfo warInfo = 14;</code>
       *
       * <pre>
       *战场信息
       * </pre>
       */
      public Builder setWarInfo(com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarInfo value) {
        if (warInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          warInfo_ = value;
          onChanged();
        } else {
          warInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .WarInfo warInfo = 14;</code>
       *
       * <pre>
       *战场信息
       * </pre>
       */
      public Builder setWarInfo(
          com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarInfo.Builder builderForValue) {
        if (warInfoBuilder_ == null) {
          warInfo_ = builderForValue.build();
          onChanged();
        } else {
          warInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .WarInfo warInfo = 14;</code>
       *
       * <pre>
       *战场信息
       * </pre>
       */
      public Builder mergeWarInfo(com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarInfo value) {
        if (warInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000080) == 0x00000080) &&
              warInfo_ != com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarInfo.getDefaultInstance()) {
            warInfo_ =
              com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarInfo.newBuilder(warInfo_).mergeFrom(value).buildPartial();
          } else {
            warInfo_ = value;
          }
          onChanged();
        } else {
          warInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .WarInfo warInfo = 14;</code>
       *
       * <pre>
       *战场信息
       * </pre>
       */
      public Builder clearWarInfo() {
        if (warInfoBuilder_ == null) {
          warInfo_ = com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarInfo.getDefaultInstance();
          onChanged();
        } else {
          warInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }
      /**
       * <code>optional .WarInfo warInfo = 14;</code>
       *
       * <pre>
       *战场信息
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarInfo.Builder getWarInfoBuilder() {
        bitField0_ |= 0x00000080;
        onChanged();
        return getWarInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .WarInfo warInfo = 14;</code>
       *
       * <pre>
       *战场信息
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarInfoOrBuilder getWarInfoOrBuilder() {
        if (warInfoBuilder_ != null) {
          return warInfoBuilder_.getMessageOrBuilder();
        } else {
          return warInfo_;
        }
      }
      /**
       * <code>optional .WarInfo warInfo = 14;</code>
       *
       * <pre>
       *战场信息
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarInfo, com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarInfo.Builder, com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarInfoOrBuilder> 
          getWarInfoFieldBuilder() {
        if (warInfoBuilder_ == null) {
          warInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarInfo, com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarInfo.Builder, com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarInfoOrBuilder>(
                  getWarInfo(),
                  getParentForChildren(),
                  isClean());
          warInfo_ = null;
        }
        return warInfoBuilder_;
      }

      private com.ninelook.wecard.protocol.beans.BeanEntityMessage.PosInfo heroPosInfo_ = com.ninelook.wecard.protocol.beans.BeanEntityMessage.PosInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.ninelook.wecard.protocol.beans.BeanEntityMessage.PosInfo, com.ninelook.wecard.protocol.beans.BeanEntityMessage.PosInfo.Builder, com.ninelook.wecard.protocol.beans.BeanEntityMessage.PosInfoOrBuilder> heroPosInfoBuilder_;
      /**
       * <code>optional .PosInfo heroPosInfo = 15;</code>
       *
       * <pre>
       *英雄位置信息
       * </pre>
       */
      public boolean hasHeroPosInfo() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional .PosInfo heroPosInfo = 15;</code>
       *
       * <pre>
       *英雄位置信息
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanEntityMessage.PosInfo getHeroPosInfo() {
        if (heroPosInfoBuilder_ == null) {
          return heroPosInfo_;
        } else {
          return heroPosInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .PosInfo heroPosInfo = 15;</code>
       *
       * <pre>
       *英雄位置信息
       * </pre>
       */
      public Builder setHeroPosInfo(com.ninelook.wecard.protocol.beans.BeanEntityMessage.PosInfo value) {
        if (heroPosInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          heroPosInfo_ = value;
          onChanged();
        } else {
          heroPosInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <code>optional .PosInfo heroPosInfo = 15;</code>
       *
       * <pre>
       *英雄位置信息
       * </pre>
       */
      public Builder setHeroPosInfo(
          com.ninelook.wecard.protocol.beans.BeanEntityMessage.PosInfo.Builder builderForValue) {
        if (heroPosInfoBuilder_ == null) {
          heroPosInfo_ = builderForValue.build();
          onChanged();
        } else {
          heroPosInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <code>optional .PosInfo heroPosInfo = 15;</code>
       *
       * <pre>
       *英雄位置信息
       * </pre>
       */
      public Builder mergeHeroPosInfo(com.ninelook.wecard.protocol.beans.BeanEntityMessage.PosInfo value) {
        if (heroPosInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000100) == 0x00000100) &&
              heroPosInfo_ != com.ninelook.wecard.protocol.beans.BeanEntityMessage.PosInfo.getDefaultInstance()) {
            heroPosInfo_ =
              com.ninelook.wecard.protocol.beans.BeanEntityMessage.PosInfo.newBuilder(heroPosInfo_).mergeFrom(value).buildPartial();
          } else {
            heroPosInfo_ = value;
          }
          onChanged();
        } else {
          heroPosInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <code>optional .PosInfo heroPosInfo = 15;</code>
       *
       * <pre>
       *英雄位置信息
       * </pre>
       */
      public Builder clearHeroPosInfo() {
        if (heroPosInfoBuilder_ == null) {
          heroPosInfo_ = com.ninelook.wecard.protocol.beans.BeanEntityMessage.PosInfo.getDefaultInstance();
          onChanged();
        } else {
          heroPosInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }
      /**
       * <code>optional .PosInfo heroPosInfo = 15;</code>
       *
       * <pre>
       *英雄位置信息
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanEntityMessage.PosInfo.Builder getHeroPosInfoBuilder() {
        bitField0_ |= 0x00000100;
        onChanged();
        return getHeroPosInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .PosInfo heroPosInfo = 15;</code>
       *
       * <pre>
       *英雄位置信息
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanEntityMessage.PosInfoOrBuilder getHeroPosInfoOrBuilder() {
        if (heroPosInfoBuilder_ != null) {
          return heroPosInfoBuilder_.getMessageOrBuilder();
        } else {
          return heroPosInfo_;
        }
      }
      /**
       * <code>optional .PosInfo heroPosInfo = 15;</code>
       *
       * <pre>
       *英雄位置信息
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.ninelook.wecard.protocol.beans.BeanEntityMessage.PosInfo, com.ninelook.wecard.protocol.beans.BeanEntityMessage.PosInfo.Builder, com.ninelook.wecard.protocol.beans.BeanEntityMessage.PosInfoOrBuilder> 
          getHeroPosInfoFieldBuilder() {
        if (heroPosInfoBuilder_ == null) {
          heroPosInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.ninelook.wecard.protocol.beans.BeanEntityMessage.PosInfo, com.ninelook.wecard.protocol.beans.BeanEntityMessage.PosInfo.Builder, com.ninelook.wecard.protocol.beans.BeanEntityMessage.PosInfoOrBuilder>(
                  getHeroPosInfo(),
                  getParentForChildren(),
                  isClean());
          heroPosInfo_ = null;
        }
        return heroPosInfoBuilder_;
      }

      private com.ninelook.wecard.protocol.beans.BeanFightMessage.FightAttackResultInfo fightAttackResultInfo_ = com.ninelook.wecard.protocol.beans.BeanFightMessage.FightAttackResultInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.ninelook.wecard.protocol.beans.BeanFightMessage.FightAttackResultInfo, com.ninelook.wecard.protocol.beans.BeanFightMessage.FightAttackResultInfo.Builder, com.ninelook.wecard.protocol.beans.BeanFightMessage.FightAttackResultInfoOrBuilder> fightAttackResultInfoBuilder_;
      /**
       * <code>optional .FightAttackResultInfo fightAttackResultInfo = 16;</code>
       *
       * <pre>
       *攻击返回信息
       * </pre>
       */
      public boolean hasFightAttackResultInfo() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional .FightAttackResultInfo fightAttackResultInfo = 16;</code>
       *
       * <pre>
       *攻击返回信息
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanFightMessage.FightAttackResultInfo getFightAttackResultInfo() {
        if (fightAttackResultInfoBuilder_ == null) {
          return fightAttackResultInfo_;
        } else {
          return fightAttackResultInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .FightAttackResultInfo fightAttackResultInfo = 16;</code>
       *
       * <pre>
       *攻击返回信息
       * </pre>
       */
      public Builder setFightAttackResultInfo(com.ninelook.wecard.protocol.beans.BeanFightMessage.FightAttackResultInfo value) {
        if (fightAttackResultInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          fightAttackResultInfo_ = value;
          onChanged();
        } else {
          fightAttackResultInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <code>optional .FightAttackResultInfo fightAttackResultInfo = 16;</code>
       *
       * <pre>
       *攻击返回信息
       * </pre>
       */
      public Builder setFightAttackResultInfo(
          com.ninelook.wecard.protocol.beans.BeanFightMessage.FightAttackResultInfo.Builder builderForValue) {
        if (fightAttackResultInfoBuilder_ == null) {
          fightAttackResultInfo_ = builderForValue.build();
          onChanged();
        } else {
          fightAttackResultInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <code>optional .FightAttackResultInfo fightAttackResultInfo = 16;</code>
       *
       * <pre>
       *攻击返回信息
       * </pre>
       */
      public Builder mergeFightAttackResultInfo(com.ninelook.wecard.protocol.beans.BeanFightMessage.FightAttackResultInfo value) {
        if (fightAttackResultInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000200) == 0x00000200) &&
              fightAttackResultInfo_ != com.ninelook.wecard.protocol.beans.BeanFightMessage.FightAttackResultInfo.getDefaultInstance()) {
            fightAttackResultInfo_ =
              com.ninelook.wecard.protocol.beans.BeanFightMessage.FightAttackResultInfo.newBuilder(fightAttackResultInfo_).mergeFrom(value).buildPartial();
          } else {
            fightAttackResultInfo_ = value;
          }
          onChanged();
        } else {
          fightAttackResultInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <code>optional .FightAttackResultInfo fightAttackResultInfo = 16;</code>
       *
       * <pre>
       *攻击返回信息
       * </pre>
       */
      public Builder clearFightAttackResultInfo() {
        if (fightAttackResultInfoBuilder_ == null) {
          fightAttackResultInfo_ = com.ninelook.wecard.protocol.beans.BeanFightMessage.FightAttackResultInfo.getDefaultInstance();
          onChanged();
        } else {
          fightAttackResultInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000200);
        return this;
      }
      /**
       * <code>optional .FightAttackResultInfo fightAttackResultInfo = 16;</code>
       *
       * <pre>
       *攻击返回信息
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanFightMessage.FightAttackResultInfo.Builder getFightAttackResultInfoBuilder() {
        bitField0_ |= 0x00000200;
        onChanged();
        return getFightAttackResultInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .FightAttackResultInfo fightAttackResultInfo = 16;</code>
       *
       * <pre>
       *攻击返回信息
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanFightMessage.FightAttackResultInfoOrBuilder getFightAttackResultInfoOrBuilder() {
        if (fightAttackResultInfoBuilder_ != null) {
          return fightAttackResultInfoBuilder_.getMessageOrBuilder();
        } else {
          return fightAttackResultInfo_;
        }
      }
      /**
       * <code>optional .FightAttackResultInfo fightAttackResultInfo = 16;</code>
       *
       * <pre>
       *攻击返回信息
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.ninelook.wecard.protocol.beans.BeanFightMessage.FightAttackResultInfo, com.ninelook.wecard.protocol.beans.BeanFightMessage.FightAttackResultInfo.Builder, com.ninelook.wecard.protocol.beans.BeanFightMessage.FightAttackResultInfoOrBuilder> 
          getFightAttackResultInfoFieldBuilder() {
        if (fightAttackResultInfoBuilder_ == null) {
          fightAttackResultInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.ninelook.wecard.protocol.beans.BeanFightMessage.FightAttackResultInfo, com.ninelook.wecard.protocol.beans.BeanFightMessage.FightAttackResultInfo.Builder, com.ninelook.wecard.protocol.beans.BeanFightMessage.FightAttackResultInfoOrBuilder>(
                  getFightAttackResultInfo(),
                  getParentForChildren(),
                  isClean());
          fightAttackResultInfo_ = null;
        }
        return fightAttackResultInfoBuilder_;
      }

      private java.util.List<com.ninelook.wecard.protocol.beans.BeanSceneMessage.UserInfo> lUserInfo_ =
        java.util.Collections.emptyList();
      private void ensureLUserInfoIsMutable() {
        if (!((bitField0_ & 0x00000400) == 0x00000400)) {
          lUserInfo_ = new java.util.ArrayList<com.ninelook.wecard.protocol.beans.BeanSceneMessage.UserInfo>(lUserInfo_);
          bitField0_ |= 0x00000400;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.ninelook.wecard.protocol.beans.BeanSceneMessage.UserInfo, com.ninelook.wecard.protocol.beans.BeanSceneMessage.UserInfo.Builder, com.ninelook.wecard.protocol.beans.BeanSceneMessage.UserInfoOrBuilder> lUserInfoBuilder_;

      /**
       * <code>repeated .UserInfo lUserInfo = 17;</code>
       *
       * <pre>
       *列表-用户基本信息
       * </pre>
       */
      public java.util.List<com.ninelook.wecard.protocol.beans.BeanSceneMessage.UserInfo> getLUserInfoList() {
        if (lUserInfoBuilder_ == null) {
          return java.util.Collections.unmodifiableList(lUserInfo_);
        } else {
          return lUserInfoBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .UserInfo lUserInfo = 17;</code>
       *
       * <pre>
       *列表-用户基本信息
       * </pre>
       */
      public int getLUserInfoCount() {
        if (lUserInfoBuilder_ == null) {
          return lUserInfo_.size();
        } else {
          return lUserInfoBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .UserInfo lUserInfo = 17;</code>
       *
       * <pre>
       *列表-用户基本信息
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanSceneMessage.UserInfo getLUserInfo(int index) {
        if (lUserInfoBuilder_ == null) {
          return lUserInfo_.get(index);
        } else {
          return lUserInfoBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .UserInfo lUserInfo = 17;</code>
       *
       * <pre>
       *列表-用户基本信息
       * </pre>
       */
      public Builder setLUserInfo(
          int index, com.ninelook.wecard.protocol.beans.BeanSceneMessage.UserInfo value) {
        if (lUserInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLUserInfoIsMutable();
          lUserInfo_.set(index, value);
          onChanged();
        } else {
          lUserInfoBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .UserInfo lUserInfo = 17;</code>
       *
       * <pre>
       *列表-用户基本信息
       * </pre>
       */
      public Builder setLUserInfo(
          int index, com.ninelook.wecard.protocol.beans.BeanSceneMessage.UserInfo.Builder builderForValue) {
        if (lUserInfoBuilder_ == null) {
          ensureLUserInfoIsMutable();
          lUserInfo_.set(index, builderForValue.build());
          onChanged();
        } else {
          lUserInfoBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .UserInfo lUserInfo = 17;</code>
       *
       * <pre>
       *列表-用户基本信息
       * </pre>
       */
      public Builder addLUserInfo(com.ninelook.wecard.protocol.beans.BeanSceneMessage.UserInfo value) {
        if (lUserInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLUserInfoIsMutable();
          lUserInfo_.add(value);
          onChanged();
        } else {
          lUserInfoBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .UserInfo lUserInfo = 17;</code>
       *
       * <pre>
       *列表-用户基本信息
       * </pre>
       */
      public Builder addLUserInfo(
          int index, com.ninelook.wecard.protocol.beans.BeanSceneMessage.UserInfo value) {
        if (lUserInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLUserInfoIsMutable();
          lUserInfo_.add(index, value);
          onChanged();
        } else {
          lUserInfoBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .UserInfo lUserInfo = 17;</code>
       *
       * <pre>
       *列表-用户基本信息
       * </pre>
       */
      public Builder addLUserInfo(
          com.ninelook.wecard.protocol.beans.BeanSceneMessage.UserInfo.Builder builderForValue) {
        if (lUserInfoBuilder_ == null) {
          ensureLUserInfoIsMutable();
          lUserInfo_.add(builderForValue.build());
          onChanged();
        } else {
          lUserInfoBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .UserInfo lUserInfo = 17;</code>
       *
       * <pre>
       *列表-用户基本信息
       * </pre>
       */
      public Builder addLUserInfo(
          int index, com.ninelook.wecard.protocol.beans.BeanSceneMessage.UserInfo.Builder builderForValue) {
        if (lUserInfoBuilder_ == null) {
          ensureLUserInfoIsMutable();
          lUserInfo_.add(index, builderForValue.build());
          onChanged();
        } else {
          lUserInfoBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .UserInfo lUserInfo = 17;</code>
       *
       * <pre>
       *列表-用户基本信息
       * </pre>
       */
      public Builder addAllLUserInfo(
          java.lang.Iterable<? extends com.ninelook.wecard.protocol.beans.BeanSceneMessage.UserInfo> values) {
        if (lUserInfoBuilder_ == null) {
          ensureLUserInfoIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, lUserInfo_);
          onChanged();
        } else {
          lUserInfoBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .UserInfo lUserInfo = 17;</code>
       *
       * <pre>
       *列表-用户基本信息
       * </pre>
       */
      public Builder clearLUserInfo() {
        if (lUserInfoBuilder_ == null) {
          lUserInfo_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000400);
          onChanged();
        } else {
          lUserInfoBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .UserInfo lUserInfo = 17;</code>
       *
       * <pre>
       *列表-用户基本信息
       * </pre>
       */
      public Builder removeLUserInfo(int index) {
        if (lUserInfoBuilder_ == null) {
          ensureLUserInfoIsMutable();
          lUserInfo_.remove(index);
          onChanged();
        } else {
          lUserInfoBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .UserInfo lUserInfo = 17;</code>
       *
       * <pre>
       *列表-用户基本信息
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanSceneMessage.UserInfo.Builder getLUserInfoBuilder(
          int index) {
        return getLUserInfoFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .UserInfo lUserInfo = 17;</code>
       *
       * <pre>
       *列表-用户基本信息
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanSceneMessage.UserInfoOrBuilder getLUserInfoOrBuilder(
          int index) {
        if (lUserInfoBuilder_ == null) {
          return lUserInfo_.get(index);  } else {
          return lUserInfoBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .UserInfo lUserInfo = 17;</code>
       *
       * <pre>
       *列表-用户基本信息
       * </pre>
       */
      public java.util.List<? extends com.ninelook.wecard.protocol.beans.BeanSceneMessage.UserInfoOrBuilder> 
           getLUserInfoOrBuilderList() {
        if (lUserInfoBuilder_ != null) {
          return lUserInfoBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(lUserInfo_);
        }
      }
      /**
       * <code>repeated .UserInfo lUserInfo = 17;</code>
       *
       * <pre>
       *列表-用户基本信息
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanSceneMessage.UserInfo.Builder addLUserInfoBuilder() {
        return getLUserInfoFieldBuilder().addBuilder(
            com.ninelook.wecard.protocol.beans.BeanSceneMessage.UserInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .UserInfo lUserInfo = 17;</code>
       *
       * <pre>
       *列表-用户基本信息
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanSceneMessage.UserInfo.Builder addLUserInfoBuilder(
          int index) {
        return getLUserInfoFieldBuilder().addBuilder(
            index, com.ninelook.wecard.protocol.beans.BeanSceneMessage.UserInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .UserInfo lUserInfo = 17;</code>
       *
       * <pre>
       *列表-用户基本信息
       * </pre>
       */
      public java.util.List<com.ninelook.wecard.protocol.beans.BeanSceneMessage.UserInfo.Builder> 
           getLUserInfoBuilderList() {
        return getLUserInfoFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.ninelook.wecard.protocol.beans.BeanSceneMessage.UserInfo, com.ninelook.wecard.protocol.beans.BeanSceneMessage.UserInfo.Builder, com.ninelook.wecard.protocol.beans.BeanSceneMessage.UserInfoOrBuilder> 
          getLUserInfoFieldBuilder() {
        if (lUserInfoBuilder_ == null) {
          lUserInfoBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.ninelook.wecard.protocol.beans.BeanSceneMessage.UserInfo, com.ninelook.wecard.protocol.beans.BeanSceneMessage.UserInfo.Builder, com.ninelook.wecard.protocol.beans.BeanSceneMessage.UserInfoOrBuilder>(
                  lUserInfo_,
                  ((bitField0_ & 0x00000400) == 0x00000400),
                  getParentForChildren(),
                  isClean());
          lUserInfo_ = null;
        }
        return lUserInfoBuilder_;
      }

      private com.ninelook.wecard.protocol.beans.BeanHomeMessage.LoadedInfo loadedInfo_ = com.ninelook.wecard.protocol.beans.BeanHomeMessage.LoadedInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.ninelook.wecard.protocol.beans.BeanHomeMessage.LoadedInfo, com.ninelook.wecard.protocol.beans.BeanHomeMessage.LoadedInfo.Builder, com.ninelook.wecard.protocol.beans.BeanHomeMessage.LoadedInfoOrBuilder> loadedInfoBuilder_;
      /**
       * <code>optional .LoadedInfo loadedInfo = 18;</code>
       *
       * <pre>
       *资源加载完成通知信息
       * </pre>
       */
      public boolean hasLoadedInfo() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional .LoadedInfo loadedInfo = 18;</code>
       *
       * <pre>
       *资源加载完成通知信息
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanHomeMessage.LoadedInfo getLoadedInfo() {
        if (loadedInfoBuilder_ == null) {
          return loadedInfo_;
        } else {
          return loadedInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .LoadedInfo loadedInfo = 18;</code>
       *
       * <pre>
       *资源加载完成通知信息
       * </pre>
       */
      public Builder setLoadedInfo(com.ninelook.wecard.protocol.beans.BeanHomeMessage.LoadedInfo value) {
        if (loadedInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          loadedInfo_ = value;
          onChanged();
        } else {
          loadedInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000800;
        return this;
      }
      /**
       * <code>optional .LoadedInfo loadedInfo = 18;</code>
       *
       * <pre>
       *资源加载完成通知信息
       * </pre>
       */
      public Builder setLoadedInfo(
          com.ninelook.wecard.protocol.beans.BeanHomeMessage.LoadedInfo.Builder builderForValue) {
        if (loadedInfoBuilder_ == null) {
          loadedInfo_ = builderForValue.build();
          onChanged();
        } else {
          loadedInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000800;
        return this;
      }
      /**
       * <code>optional .LoadedInfo loadedInfo = 18;</code>
       *
       * <pre>
       *资源加载完成通知信息
       * </pre>
       */
      public Builder mergeLoadedInfo(com.ninelook.wecard.protocol.beans.BeanHomeMessage.LoadedInfo value) {
        if (loadedInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000800) == 0x00000800) &&
              loadedInfo_ != com.ninelook.wecard.protocol.beans.BeanHomeMessage.LoadedInfo.getDefaultInstance()) {
            loadedInfo_ =
              com.ninelook.wecard.protocol.beans.BeanHomeMessage.LoadedInfo.newBuilder(loadedInfo_).mergeFrom(value).buildPartial();
          } else {
            loadedInfo_ = value;
          }
          onChanged();
        } else {
          loadedInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000800;
        return this;
      }
      /**
       * <code>optional .LoadedInfo loadedInfo = 18;</code>
       *
       * <pre>
       *资源加载完成通知信息
       * </pre>
       */
      public Builder clearLoadedInfo() {
        if (loadedInfoBuilder_ == null) {
          loadedInfo_ = com.ninelook.wecard.protocol.beans.BeanHomeMessage.LoadedInfo.getDefaultInstance();
          onChanged();
        } else {
          loadedInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000800);
        return this;
      }
      /**
       * <code>optional .LoadedInfo loadedInfo = 18;</code>
       *
       * <pre>
       *资源加载完成通知信息
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanHomeMessage.LoadedInfo.Builder getLoadedInfoBuilder() {
        bitField0_ |= 0x00000800;
        onChanged();
        return getLoadedInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .LoadedInfo loadedInfo = 18;</code>
       *
       * <pre>
       *资源加载完成通知信息
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanHomeMessage.LoadedInfoOrBuilder getLoadedInfoOrBuilder() {
        if (loadedInfoBuilder_ != null) {
          return loadedInfoBuilder_.getMessageOrBuilder();
        } else {
          return loadedInfo_;
        }
      }
      /**
       * <code>optional .LoadedInfo loadedInfo = 18;</code>
       *
       * <pre>
       *资源加载完成通知信息
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.ninelook.wecard.protocol.beans.BeanHomeMessage.LoadedInfo, com.ninelook.wecard.protocol.beans.BeanHomeMessage.LoadedInfo.Builder, com.ninelook.wecard.protocol.beans.BeanHomeMessage.LoadedInfoOrBuilder> 
          getLoadedInfoFieldBuilder() {
        if (loadedInfoBuilder_ == null) {
          loadedInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.ninelook.wecard.protocol.beans.BeanHomeMessage.LoadedInfo, com.ninelook.wecard.protocol.beans.BeanHomeMessage.LoadedInfo.Builder, com.ninelook.wecard.protocol.beans.BeanHomeMessage.LoadedInfoOrBuilder>(
                  getLoadedInfo(),
                  getParentForChildren(),
                  isClean());
          loadedInfo_ = null;
        }
        return loadedInfoBuilder_;
      }

      private com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeGoInfo homeGoInfo_ = com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeGoInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeGoInfo, com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeGoInfo.Builder, com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeGoInfoOrBuilder> homeGoInfoBuilder_;
      /**
       * <code>optional .HomeGoInfo homeGoInfo = 19;</code>
       *
       * <pre>
       *房间开始信息
       * </pre>
       */
      public boolean hasHomeGoInfo() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional .HomeGoInfo homeGoInfo = 19;</code>
       *
       * <pre>
       *房间开始信息
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeGoInfo getHomeGoInfo() {
        if (homeGoInfoBuilder_ == null) {
          return homeGoInfo_;
        } else {
          return homeGoInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .HomeGoInfo homeGoInfo = 19;</code>
       *
       * <pre>
       *房间开始信息
       * </pre>
       */
      public Builder setHomeGoInfo(com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeGoInfo value) {
        if (homeGoInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          homeGoInfo_ = value;
          onChanged();
        } else {
          homeGoInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00001000;
        return this;
      }
      /**
       * <code>optional .HomeGoInfo homeGoInfo = 19;</code>
       *
       * <pre>
       *房间开始信息
       * </pre>
       */
      public Builder setHomeGoInfo(
          com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeGoInfo.Builder builderForValue) {
        if (homeGoInfoBuilder_ == null) {
          homeGoInfo_ = builderForValue.build();
          onChanged();
        } else {
          homeGoInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00001000;
        return this;
      }
      /**
       * <code>optional .HomeGoInfo homeGoInfo = 19;</code>
       *
       * <pre>
       *房间开始信息
       * </pre>
       */
      public Builder mergeHomeGoInfo(com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeGoInfo value) {
        if (homeGoInfoBuilder_ == null) {
          if (((bitField0_ & 0x00001000) == 0x00001000) &&
              homeGoInfo_ != com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeGoInfo.getDefaultInstance()) {
            homeGoInfo_ =
              com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeGoInfo.newBuilder(homeGoInfo_).mergeFrom(value).buildPartial();
          } else {
            homeGoInfo_ = value;
          }
          onChanged();
        } else {
          homeGoInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00001000;
        return this;
      }
      /**
       * <code>optional .HomeGoInfo homeGoInfo = 19;</code>
       *
       * <pre>
       *房间开始信息
       * </pre>
       */
      public Builder clearHomeGoInfo() {
        if (homeGoInfoBuilder_ == null) {
          homeGoInfo_ = com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeGoInfo.getDefaultInstance();
          onChanged();
        } else {
          homeGoInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00001000);
        return this;
      }
      /**
       * <code>optional .HomeGoInfo homeGoInfo = 19;</code>
       *
       * <pre>
       *房间开始信息
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeGoInfo.Builder getHomeGoInfoBuilder() {
        bitField0_ |= 0x00001000;
        onChanged();
        return getHomeGoInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .HomeGoInfo homeGoInfo = 19;</code>
       *
       * <pre>
       *房间开始信息
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeGoInfoOrBuilder getHomeGoInfoOrBuilder() {
        if (homeGoInfoBuilder_ != null) {
          return homeGoInfoBuilder_.getMessageOrBuilder();
        } else {
          return homeGoInfo_;
        }
      }
      /**
       * <code>optional .HomeGoInfo homeGoInfo = 19;</code>
       *
       * <pre>
       *房间开始信息
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeGoInfo, com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeGoInfo.Builder, com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeGoInfoOrBuilder> 
          getHomeGoInfoFieldBuilder() {
        if (homeGoInfoBuilder_ == null) {
          homeGoInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeGoInfo, com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeGoInfo.Builder, com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeGoInfoOrBuilder>(
                  getHomeGoInfo(),
                  getParentForChildren(),
                  isClean());
          homeGoInfo_ = null;
        }
        return homeGoInfoBuilder_;
      }

      private com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeExitInfo homeExitInfo_ = com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeExitInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeExitInfo, com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeExitInfo.Builder, com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeExitInfoOrBuilder> homeExitInfoBuilder_;
      /**
       * <code>optional .HomeExitInfo homeExitInfo = 20;</code>
       *
       * <pre>
       *退出房间信息
       * </pre>
       */
      public boolean hasHomeExitInfo() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional .HomeExitInfo homeExitInfo = 20;</code>
       *
       * <pre>
       *退出房间信息
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeExitInfo getHomeExitInfo() {
        if (homeExitInfoBuilder_ == null) {
          return homeExitInfo_;
        } else {
          return homeExitInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .HomeExitInfo homeExitInfo = 20;</code>
       *
       * <pre>
       *退出房间信息
       * </pre>
       */
      public Builder setHomeExitInfo(com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeExitInfo value) {
        if (homeExitInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          homeExitInfo_ = value;
          onChanged();
        } else {
          homeExitInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00002000;
        return this;
      }
      /**
       * <code>optional .HomeExitInfo homeExitInfo = 20;</code>
       *
       * <pre>
       *退出房间信息
       * </pre>
       */
      public Builder setHomeExitInfo(
          com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeExitInfo.Builder builderForValue) {
        if (homeExitInfoBuilder_ == null) {
          homeExitInfo_ = builderForValue.build();
          onChanged();
        } else {
          homeExitInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00002000;
        return this;
      }
      /**
       * <code>optional .HomeExitInfo homeExitInfo = 20;</code>
       *
       * <pre>
       *退出房间信息
       * </pre>
       */
      public Builder mergeHomeExitInfo(com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeExitInfo value) {
        if (homeExitInfoBuilder_ == null) {
          if (((bitField0_ & 0x00002000) == 0x00002000) &&
              homeExitInfo_ != com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeExitInfo.getDefaultInstance()) {
            homeExitInfo_ =
              com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeExitInfo.newBuilder(homeExitInfo_).mergeFrom(value).buildPartial();
          } else {
            homeExitInfo_ = value;
          }
          onChanged();
        } else {
          homeExitInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00002000;
        return this;
      }
      /**
       * <code>optional .HomeExitInfo homeExitInfo = 20;</code>
       *
       * <pre>
       *退出房间信息
       * </pre>
       */
      public Builder clearHomeExitInfo() {
        if (homeExitInfoBuilder_ == null) {
          homeExitInfo_ = com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeExitInfo.getDefaultInstance();
          onChanged();
        } else {
          homeExitInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00002000);
        return this;
      }
      /**
       * <code>optional .HomeExitInfo homeExitInfo = 20;</code>
       *
       * <pre>
       *退出房间信息
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeExitInfo.Builder getHomeExitInfoBuilder() {
        bitField0_ |= 0x00002000;
        onChanged();
        return getHomeExitInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .HomeExitInfo homeExitInfo = 20;</code>
       *
       * <pre>
       *退出房间信息
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeExitInfoOrBuilder getHomeExitInfoOrBuilder() {
        if (homeExitInfoBuilder_ != null) {
          return homeExitInfoBuilder_.getMessageOrBuilder();
        } else {
          return homeExitInfo_;
        }
      }
      /**
       * <code>optional .HomeExitInfo homeExitInfo = 20;</code>
       *
       * <pre>
       *退出房间信息
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeExitInfo, com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeExitInfo.Builder, com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeExitInfoOrBuilder> 
          getHomeExitInfoFieldBuilder() {
        if (homeExitInfoBuilder_ == null) {
          homeExitInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeExitInfo, com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeExitInfo.Builder, com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeExitInfoOrBuilder>(
                  getHomeExitInfo(),
                  getParentForChildren(),
                  isClean());
          homeExitInfo_ = null;
        }
        return homeExitInfoBuilder_;
      }

      private com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultInfo skillResultInfo_ = com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultInfo, com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultInfo.Builder, com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultInfoOrBuilder> skillResultInfoBuilder_;
      /**
       * <code>optional .SkillResultInfo skillResultInfo = 21;</code>
       *
       * <pre>
       *房间开始信息
       * </pre>
       */
      public boolean hasSkillResultInfo() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional .SkillResultInfo skillResultInfo = 21;</code>
       *
       * <pre>
       *房间开始信息
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultInfo getSkillResultInfo() {
        if (skillResultInfoBuilder_ == null) {
          return skillResultInfo_;
        } else {
          return skillResultInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .SkillResultInfo skillResultInfo = 21;</code>
       *
       * <pre>
       *房间开始信息
       * </pre>
       */
      public Builder setSkillResultInfo(com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultInfo value) {
        if (skillResultInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          skillResultInfo_ = value;
          onChanged();
        } else {
          skillResultInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00004000;
        return this;
      }
      /**
       * <code>optional .SkillResultInfo skillResultInfo = 21;</code>
       *
       * <pre>
       *房间开始信息
       * </pre>
       */
      public Builder setSkillResultInfo(
          com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultInfo.Builder builderForValue) {
        if (skillResultInfoBuilder_ == null) {
          skillResultInfo_ = builderForValue.build();
          onChanged();
        } else {
          skillResultInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00004000;
        return this;
      }
      /**
       * <code>optional .SkillResultInfo skillResultInfo = 21;</code>
       *
       * <pre>
       *房间开始信息
       * </pre>
       */
      public Builder mergeSkillResultInfo(com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultInfo value) {
        if (skillResultInfoBuilder_ == null) {
          if (((bitField0_ & 0x00004000) == 0x00004000) &&
              skillResultInfo_ != com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultInfo.getDefaultInstance()) {
            skillResultInfo_ =
              com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultInfo.newBuilder(skillResultInfo_).mergeFrom(value).buildPartial();
          } else {
            skillResultInfo_ = value;
          }
          onChanged();
        } else {
          skillResultInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00004000;
        return this;
      }
      /**
       * <code>optional .SkillResultInfo skillResultInfo = 21;</code>
       *
       * <pre>
       *房间开始信息
       * </pre>
       */
      public Builder clearSkillResultInfo() {
        if (skillResultInfoBuilder_ == null) {
          skillResultInfo_ = com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultInfo.getDefaultInstance();
          onChanged();
        } else {
          skillResultInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00004000);
        return this;
      }
      /**
       * <code>optional .SkillResultInfo skillResultInfo = 21;</code>
       *
       * <pre>
       *房间开始信息
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultInfo.Builder getSkillResultInfoBuilder() {
        bitField0_ |= 0x00004000;
        onChanged();
        return getSkillResultInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .SkillResultInfo skillResultInfo = 21;</code>
       *
       * <pre>
       *房间开始信息
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultInfoOrBuilder getSkillResultInfoOrBuilder() {
        if (skillResultInfoBuilder_ != null) {
          return skillResultInfoBuilder_.getMessageOrBuilder();
        } else {
          return skillResultInfo_;
        }
      }
      /**
       * <code>optional .SkillResultInfo skillResultInfo = 21;</code>
       *
       * <pre>
       *房间开始信息
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultInfo, com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultInfo.Builder, com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultInfoOrBuilder> 
          getSkillResultInfoFieldBuilder() {
        if (skillResultInfoBuilder_ == null) {
          skillResultInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultInfo, com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultInfo.Builder, com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultInfoOrBuilder>(
                  getSkillResultInfo(),
                  getParentForChildren(),
                  isClean());
          skillResultInfo_ = null;
        }
        return skillResultInfoBuilder_;
      }

      private com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarFinishInfo warFinishInfo_ = com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarFinishInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarFinishInfo, com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarFinishInfo.Builder, com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarFinishInfoOrBuilder> warFinishInfoBuilder_;
      /**
       * <code>optional .WarFinishInfo warFinishInfo = 22;</code>
       *
       * <pre>
       *战斗结束信息
       * </pre>
       */
      public boolean hasWarFinishInfo() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional .WarFinishInfo warFinishInfo = 22;</code>
       *
       * <pre>
       *战斗结束信息
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarFinishInfo getWarFinishInfo() {
        if (warFinishInfoBuilder_ == null) {
          return warFinishInfo_;
        } else {
          return warFinishInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .WarFinishInfo warFinishInfo = 22;</code>
       *
       * <pre>
       *战斗结束信息
       * </pre>
       */
      public Builder setWarFinishInfo(com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarFinishInfo value) {
        if (warFinishInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          warFinishInfo_ = value;
          onChanged();
        } else {
          warFinishInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00008000;
        return this;
      }
      /**
       * <code>optional .WarFinishInfo warFinishInfo = 22;</code>
       *
       * <pre>
       *战斗结束信息
       * </pre>
       */
      public Builder setWarFinishInfo(
          com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarFinishInfo.Builder builderForValue) {
        if (warFinishInfoBuilder_ == null) {
          warFinishInfo_ = builderForValue.build();
          onChanged();
        } else {
          warFinishInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00008000;
        return this;
      }
      /**
       * <code>optional .WarFinishInfo warFinishInfo = 22;</code>
       *
       * <pre>
       *战斗结束信息
       * </pre>
       */
      public Builder mergeWarFinishInfo(com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarFinishInfo value) {
        if (warFinishInfoBuilder_ == null) {
          if (((bitField0_ & 0x00008000) == 0x00008000) &&
              warFinishInfo_ != com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarFinishInfo.getDefaultInstance()) {
            warFinishInfo_ =
              com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarFinishInfo.newBuilder(warFinishInfo_).mergeFrom(value).buildPartial();
          } else {
            warFinishInfo_ = value;
          }
          onChanged();
        } else {
          warFinishInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00008000;
        return this;
      }
      /**
       * <code>optional .WarFinishInfo warFinishInfo = 22;</code>
       *
       * <pre>
       *战斗结束信息
       * </pre>
       */
      public Builder clearWarFinishInfo() {
        if (warFinishInfoBuilder_ == null) {
          warFinishInfo_ = com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarFinishInfo.getDefaultInstance();
          onChanged();
        } else {
          warFinishInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00008000);
        return this;
      }
      /**
       * <code>optional .WarFinishInfo warFinishInfo = 22;</code>
       *
       * <pre>
       *战斗结束信息
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarFinishInfo.Builder getWarFinishInfoBuilder() {
        bitField0_ |= 0x00008000;
        onChanged();
        return getWarFinishInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .WarFinishInfo warFinishInfo = 22;</code>
       *
       * <pre>
       *战斗结束信息
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarFinishInfoOrBuilder getWarFinishInfoOrBuilder() {
        if (warFinishInfoBuilder_ != null) {
          return warFinishInfoBuilder_.getMessageOrBuilder();
        } else {
          return warFinishInfo_;
        }
      }
      /**
       * <code>optional .WarFinishInfo warFinishInfo = 22;</code>
       *
       * <pre>
       *战斗结束信息
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarFinishInfo, com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarFinishInfo.Builder, com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarFinishInfoOrBuilder> 
          getWarFinishInfoFieldBuilder() {
        if (warFinishInfoBuilder_ == null) {
          warFinishInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarFinishInfo, com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarFinishInfo.Builder, com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarFinishInfoOrBuilder>(
                  getWarFinishInfo(),
                  getParentForChildren(),
                  isClean());
          warFinishInfo_ = null;
        }
        return warFinishInfoBuilder_;
      }

      private com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapHomeListInfo mapHomeListInfo_ = com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapHomeListInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapHomeListInfo, com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapHomeListInfo.Builder, com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapHomeListInfoOrBuilder> mapHomeListInfoBuilder_;
      /**
       * <code>optional .MapHomeListInfo mapHomeListInfo = 23;</code>
       *
       * <pre>
       *地图下的房间列表信息
       * </pre>
       */
      public boolean hasMapHomeListInfo() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional .MapHomeListInfo mapHomeListInfo = 23;</code>
       *
       * <pre>
       *地图下的房间列表信息
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapHomeListInfo getMapHomeListInfo() {
        if (mapHomeListInfoBuilder_ == null) {
          return mapHomeListInfo_;
        } else {
          return mapHomeListInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .MapHomeListInfo mapHomeListInfo = 23;</code>
       *
       * <pre>
       *地图下的房间列表信息
       * </pre>
       */
      public Builder setMapHomeListInfo(com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapHomeListInfo value) {
        if (mapHomeListInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          mapHomeListInfo_ = value;
          onChanged();
        } else {
          mapHomeListInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00010000;
        return this;
      }
      /**
       * <code>optional .MapHomeListInfo mapHomeListInfo = 23;</code>
       *
       * <pre>
       *地图下的房间列表信息
       * </pre>
       */
      public Builder setMapHomeListInfo(
          com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapHomeListInfo.Builder builderForValue) {
        if (mapHomeListInfoBuilder_ == null) {
          mapHomeListInfo_ = builderForValue.build();
          onChanged();
        } else {
          mapHomeListInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00010000;
        return this;
      }
      /**
       * <code>optional .MapHomeListInfo mapHomeListInfo = 23;</code>
       *
       * <pre>
       *地图下的房间列表信息
       * </pre>
       */
      public Builder mergeMapHomeListInfo(com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapHomeListInfo value) {
        if (mapHomeListInfoBuilder_ == null) {
          if (((bitField0_ & 0x00010000) == 0x00010000) &&
              mapHomeListInfo_ != com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapHomeListInfo.getDefaultInstance()) {
            mapHomeListInfo_ =
              com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapHomeListInfo.newBuilder(mapHomeListInfo_).mergeFrom(value).buildPartial();
          } else {
            mapHomeListInfo_ = value;
          }
          onChanged();
        } else {
          mapHomeListInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00010000;
        return this;
      }
      /**
       * <code>optional .MapHomeListInfo mapHomeListInfo = 23;</code>
       *
       * <pre>
       *地图下的房间列表信息
       * </pre>
       */
      public Builder clearMapHomeListInfo() {
        if (mapHomeListInfoBuilder_ == null) {
          mapHomeListInfo_ = com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapHomeListInfo.getDefaultInstance();
          onChanged();
        } else {
          mapHomeListInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00010000);
        return this;
      }
      /**
       * <code>optional .MapHomeListInfo mapHomeListInfo = 23;</code>
       *
       * <pre>
       *地图下的房间列表信息
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapHomeListInfo.Builder getMapHomeListInfoBuilder() {
        bitField0_ |= 0x00010000;
        onChanged();
        return getMapHomeListInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .MapHomeListInfo mapHomeListInfo = 23;</code>
       *
       * <pre>
       *地图下的房间列表信息
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapHomeListInfoOrBuilder getMapHomeListInfoOrBuilder() {
        if (mapHomeListInfoBuilder_ != null) {
          return mapHomeListInfoBuilder_.getMessageOrBuilder();
        } else {
          return mapHomeListInfo_;
        }
      }
      /**
       * <code>optional .MapHomeListInfo mapHomeListInfo = 23;</code>
       *
       * <pre>
       *地图下的房间列表信息
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapHomeListInfo, com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapHomeListInfo.Builder, com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapHomeListInfoOrBuilder> 
          getMapHomeListInfoFieldBuilder() {
        if (mapHomeListInfoBuilder_ == null) {
          mapHomeListInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapHomeListInfo, com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapHomeListInfo.Builder, com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapHomeListInfoOrBuilder>(
                  getMapHomeListInfo(),
                  getParentForChildren(),
                  isClean());
          mapHomeListInfo_ = null;
        }
        return mapHomeListInfoBuilder_;
      }

      private com.ninelook.wecard.protocol.beans.BeanEntityMessage.DeadInfo deadInfo_ = com.ninelook.wecard.protocol.beans.BeanEntityMessage.DeadInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.ninelook.wecard.protocol.beans.BeanEntityMessage.DeadInfo, com.ninelook.wecard.protocol.beans.BeanEntityMessage.DeadInfo.Builder, com.ninelook.wecard.protocol.beans.BeanEntityMessage.DeadInfoOrBuilder> deadInfoBuilder_;
      /**
       * <code>optional .DeadInfo deadInfo = 101;</code>
       *
       * <pre>
       *推送 - 死亡返回信息
       * </pre>
       */
      public boolean hasDeadInfo() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>optional .DeadInfo deadInfo = 101;</code>
       *
       * <pre>
       *推送 - 死亡返回信息
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanEntityMessage.DeadInfo getDeadInfo() {
        if (deadInfoBuilder_ == null) {
          return deadInfo_;
        } else {
          return deadInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .DeadInfo deadInfo = 101;</code>
       *
       * <pre>
       *推送 - 死亡返回信息
       * </pre>
       */
      public Builder setDeadInfo(com.ninelook.wecard.protocol.beans.BeanEntityMessage.DeadInfo value) {
        if (deadInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          deadInfo_ = value;
          onChanged();
        } else {
          deadInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00020000;
        return this;
      }
      /**
       * <code>optional .DeadInfo deadInfo = 101;</code>
       *
       * <pre>
       *推送 - 死亡返回信息
       * </pre>
       */
      public Builder setDeadInfo(
          com.ninelook.wecard.protocol.beans.BeanEntityMessage.DeadInfo.Builder builderForValue) {
        if (deadInfoBuilder_ == null) {
          deadInfo_ = builderForValue.build();
          onChanged();
        } else {
          deadInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00020000;
        return this;
      }
      /**
       * <code>optional .DeadInfo deadInfo = 101;</code>
       *
       * <pre>
       *推送 - 死亡返回信息
       * </pre>
       */
      public Builder mergeDeadInfo(com.ninelook.wecard.protocol.beans.BeanEntityMessage.DeadInfo value) {
        if (deadInfoBuilder_ == null) {
          if (((bitField0_ & 0x00020000) == 0x00020000) &&
              deadInfo_ != com.ninelook.wecard.protocol.beans.BeanEntityMessage.DeadInfo.getDefaultInstance()) {
            deadInfo_ =
              com.ninelook.wecard.protocol.beans.BeanEntityMessage.DeadInfo.newBuilder(deadInfo_).mergeFrom(value).buildPartial();
          } else {
            deadInfo_ = value;
          }
          onChanged();
        } else {
          deadInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00020000;
        return this;
      }
      /**
       * <code>optional .DeadInfo deadInfo = 101;</code>
       *
       * <pre>
       *推送 - 死亡返回信息
       * </pre>
       */
      public Builder clearDeadInfo() {
        if (deadInfoBuilder_ == null) {
          deadInfo_ = com.ninelook.wecard.protocol.beans.BeanEntityMessage.DeadInfo.getDefaultInstance();
          onChanged();
        } else {
          deadInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00020000);
        return this;
      }
      /**
       * <code>optional .DeadInfo deadInfo = 101;</code>
       *
       * <pre>
       *推送 - 死亡返回信息
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanEntityMessage.DeadInfo.Builder getDeadInfoBuilder() {
        bitField0_ |= 0x00020000;
        onChanged();
        return getDeadInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .DeadInfo deadInfo = 101;</code>
       *
       * <pre>
       *推送 - 死亡返回信息
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanEntityMessage.DeadInfoOrBuilder getDeadInfoOrBuilder() {
        if (deadInfoBuilder_ != null) {
          return deadInfoBuilder_.getMessageOrBuilder();
        } else {
          return deadInfo_;
        }
      }
      /**
       * <code>optional .DeadInfo deadInfo = 101;</code>
       *
       * <pre>
       *推送 - 死亡返回信息
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.ninelook.wecard.protocol.beans.BeanEntityMessage.DeadInfo, com.ninelook.wecard.protocol.beans.BeanEntityMessage.DeadInfo.Builder, com.ninelook.wecard.protocol.beans.BeanEntityMessage.DeadInfoOrBuilder> 
          getDeadInfoFieldBuilder() {
        if (deadInfoBuilder_ == null) {
          deadInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.ninelook.wecard.protocol.beans.BeanEntityMessage.DeadInfo, com.ninelook.wecard.protocol.beans.BeanEntityMessage.DeadInfo.Builder, com.ninelook.wecard.protocol.beans.BeanEntityMessage.DeadInfoOrBuilder>(
                  getDeadInfo(),
                  getParentForChildren(),
                  isClean());
          deadInfo_ = null;
        }
        return deadInfoBuilder_;
      }

      private java.util.List<com.ninelook.wecard.protocol.beans.BeanCreatureMessage.CreatureInfo> creatureRefreshInfo_ =
        java.util.Collections.emptyList();
      private void ensureCreatureRefreshInfoIsMutable() {
        if (!((bitField0_ & 0x00040000) == 0x00040000)) {
          creatureRefreshInfo_ = new java.util.ArrayList<com.ninelook.wecard.protocol.beans.BeanCreatureMessage.CreatureInfo>(creatureRefreshInfo_);
          bitField0_ |= 0x00040000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.ninelook.wecard.protocol.beans.BeanCreatureMessage.CreatureInfo, com.ninelook.wecard.protocol.beans.BeanCreatureMessage.CreatureInfo.Builder, com.ninelook.wecard.protocol.beans.BeanCreatureMessage.CreatureInfoOrBuilder> creatureRefreshInfoBuilder_;

      /**
       * <code>repeated .CreatureInfo creatureRefreshInfo = 102;</code>
       *
       * <pre>
       *推送 - 野怪刷新返回信息
       * </pre>
       */
      public java.util.List<com.ninelook.wecard.protocol.beans.BeanCreatureMessage.CreatureInfo> getCreatureRefreshInfoList() {
        if (creatureRefreshInfoBuilder_ == null) {
          return java.util.Collections.unmodifiableList(creatureRefreshInfo_);
        } else {
          return creatureRefreshInfoBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CreatureInfo creatureRefreshInfo = 102;</code>
       *
       * <pre>
       *推送 - 野怪刷新返回信息
       * </pre>
       */
      public int getCreatureRefreshInfoCount() {
        if (creatureRefreshInfoBuilder_ == null) {
          return creatureRefreshInfo_.size();
        } else {
          return creatureRefreshInfoBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CreatureInfo creatureRefreshInfo = 102;</code>
       *
       * <pre>
       *推送 - 野怪刷新返回信息
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanCreatureMessage.CreatureInfo getCreatureRefreshInfo(int index) {
        if (creatureRefreshInfoBuilder_ == null) {
          return creatureRefreshInfo_.get(index);
        } else {
          return creatureRefreshInfoBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CreatureInfo creatureRefreshInfo = 102;</code>
       *
       * <pre>
       *推送 - 野怪刷新返回信息
       * </pre>
       */
      public Builder setCreatureRefreshInfo(
          int index, com.ninelook.wecard.protocol.beans.BeanCreatureMessage.CreatureInfo value) {
        if (creatureRefreshInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCreatureRefreshInfoIsMutable();
          creatureRefreshInfo_.set(index, value);
          onChanged();
        } else {
          creatureRefreshInfoBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CreatureInfo creatureRefreshInfo = 102;</code>
       *
       * <pre>
       *推送 - 野怪刷新返回信息
       * </pre>
       */
      public Builder setCreatureRefreshInfo(
          int index, com.ninelook.wecard.protocol.beans.BeanCreatureMessage.CreatureInfo.Builder builderForValue) {
        if (creatureRefreshInfoBuilder_ == null) {
          ensureCreatureRefreshInfoIsMutable();
          creatureRefreshInfo_.set(index, builderForValue.build());
          onChanged();
        } else {
          creatureRefreshInfoBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CreatureInfo creatureRefreshInfo = 102;</code>
       *
       * <pre>
       *推送 - 野怪刷新返回信息
       * </pre>
       */
      public Builder addCreatureRefreshInfo(com.ninelook.wecard.protocol.beans.BeanCreatureMessage.CreatureInfo value) {
        if (creatureRefreshInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCreatureRefreshInfoIsMutable();
          creatureRefreshInfo_.add(value);
          onChanged();
        } else {
          creatureRefreshInfoBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CreatureInfo creatureRefreshInfo = 102;</code>
       *
       * <pre>
       *推送 - 野怪刷新返回信息
       * </pre>
       */
      public Builder addCreatureRefreshInfo(
          int index, com.ninelook.wecard.protocol.beans.BeanCreatureMessage.CreatureInfo value) {
        if (creatureRefreshInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCreatureRefreshInfoIsMutable();
          creatureRefreshInfo_.add(index, value);
          onChanged();
        } else {
          creatureRefreshInfoBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CreatureInfo creatureRefreshInfo = 102;</code>
       *
       * <pre>
       *推送 - 野怪刷新返回信息
       * </pre>
       */
      public Builder addCreatureRefreshInfo(
          com.ninelook.wecard.protocol.beans.BeanCreatureMessage.CreatureInfo.Builder builderForValue) {
        if (creatureRefreshInfoBuilder_ == null) {
          ensureCreatureRefreshInfoIsMutable();
          creatureRefreshInfo_.add(builderForValue.build());
          onChanged();
        } else {
          creatureRefreshInfoBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CreatureInfo creatureRefreshInfo = 102;</code>
       *
       * <pre>
       *推送 - 野怪刷新返回信息
       * </pre>
       */
      public Builder addCreatureRefreshInfo(
          int index, com.ninelook.wecard.protocol.beans.BeanCreatureMessage.CreatureInfo.Builder builderForValue) {
        if (creatureRefreshInfoBuilder_ == null) {
          ensureCreatureRefreshInfoIsMutable();
          creatureRefreshInfo_.add(index, builderForValue.build());
          onChanged();
        } else {
          creatureRefreshInfoBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CreatureInfo creatureRefreshInfo = 102;</code>
       *
       * <pre>
       *推送 - 野怪刷新返回信息
       * </pre>
       */
      public Builder addAllCreatureRefreshInfo(
          java.lang.Iterable<? extends com.ninelook.wecard.protocol.beans.BeanCreatureMessage.CreatureInfo> values) {
        if (creatureRefreshInfoBuilder_ == null) {
          ensureCreatureRefreshInfoIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, creatureRefreshInfo_);
          onChanged();
        } else {
          creatureRefreshInfoBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CreatureInfo creatureRefreshInfo = 102;</code>
       *
       * <pre>
       *推送 - 野怪刷新返回信息
       * </pre>
       */
      public Builder clearCreatureRefreshInfo() {
        if (creatureRefreshInfoBuilder_ == null) {
          creatureRefreshInfo_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00040000);
          onChanged();
        } else {
          creatureRefreshInfoBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CreatureInfo creatureRefreshInfo = 102;</code>
       *
       * <pre>
       *推送 - 野怪刷新返回信息
       * </pre>
       */
      public Builder removeCreatureRefreshInfo(int index) {
        if (creatureRefreshInfoBuilder_ == null) {
          ensureCreatureRefreshInfoIsMutable();
          creatureRefreshInfo_.remove(index);
          onChanged();
        } else {
          creatureRefreshInfoBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CreatureInfo creatureRefreshInfo = 102;</code>
       *
       * <pre>
       *推送 - 野怪刷新返回信息
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanCreatureMessage.CreatureInfo.Builder getCreatureRefreshInfoBuilder(
          int index) {
        return getCreatureRefreshInfoFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CreatureInfo creatureRefreshInfo = 102;</code>
       *
       * <pre>
       *推送 - 野怪刷新返回信息
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanCreatureMessage.CreatureInfoOrBuilder getCreatureRefreshInfoOrBuilder(
          int index) {
        if (creatureRefreshInfoBuilder_ == null) {
          return creatureRefreshInfo_.get(index);  } else {
          return creatureRefreshInfoBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CreatureInfo creatureRefreshInfo = 102;</code>
       *
       * <pre>
       *推送 - 野怪刷新返回信息
       * </pre>
       */
      public java.util.List<? extends com.ninelook.wecard.protocol.beans.BeanCreatureMessage.CreatureInfoOrBuilder> 
           getCreatureRefreshInfoOrBuilderList() {
        if (creatureRefreshInfoBuilder_ != null) {
          return creatureRefreshInfoBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(creatureRefreshInfo_);
        }
      }
      /**
       * <code>repeated .CreatureInfo creatureRefreshInfo = 102;</code>
       *
       * <pre>
       *推送 - 野怪刷新返回信息
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanCreatureMessage.CreatureInfo.Builder addCreatureRefreshInfoBuilder() {
        return getCreatureRefreshInfoFieldBuilder().addBuilder(
            com.ninelook.wecard.protocol.beans.BeanCreatureMessage.CreatureInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .CreatureInfo creatureRefreshInfo = 102;</code>
       *
       * <pre>
       *推送 - 野怪刷新返回信息
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanCreatureMessage.CreatureInfo.Builder addCreatureRefreshInfoBuilder(
          int index) {
        return getCreatureRefreshInfoFieldBuilder().addBuilder(
            index, com.ninelook.wecard.protocol.beans.BeanCreatureMessage.CreatureInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .CreatureInfo creatureRefreshInfo = 102;</code>
       *
       * <pre>
       *推送 - 野怪刷新返回信息
       * </pre>
       */
      public java.util.List<com.ninelook.wecard.protocol.beans.BeanCreatureMessage.CreatureInfo.Builder> 
           getCreatureRefreshInfoBuilderList() {
        return getCreatureRefreshInfoFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.ninelook.wecard.protocol.beans.BeanCreatureMessage.CreatureInfo, com.ninelook.wecard.protocol.beans.BeanCreatureMessage.CreatureInfo.Builder, com.ninelook.wecard.protocol.beans.BeanCreatureMessage.CreatureInfoOrBuilder> 
          getCreatureRefreshInfoFieldBuilder() {
        if (creatureRefreshInfoBuilder_ == null) {
          creatureRefreshInfoBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.ninelook.wecard.protocol.beans.BeanCreatureMessage.CreatureInfo, com.ninelook.wecard.protocol.beans.BeanCreatureMessage.CreatureInfo.Builder, com.ninelook.wecard.protocol.beans.BeanCreatureMessage.CreatureInfoOrBuilder>(
                  creatureRefreshInfo_,
                  ((bitField0_ & 0x00040000) == 0x00040000),
                  getParentForChildren(),
                  isClean());
          creatureRefreshInfo_ = null;
        }
        return creatureRefreshInfoBuilder_;
      }

      private com.ninelook.wecard.protocol.beans.BeanFightMessage.BuffEntityInfo buffEntityInfo_ = com.ninelook.wecard.protocol.beans.BeanFightMessage.BuffEntityInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.ninelook.wecard.protocol.beans.BeanFightMessage.BuffEntityInfo, com.ninelook.wecard.protocol.beans.BeanFightMessage.BuffEntityInfo.Builder, com.ninelook.wecard.protocol.beans.BeanFightMessage.BuffEntityInfoOrBuilder> buffEntityInfoBuilder_;
      /**
       * <code>optional .BuffEntityInfo buffEntityInfo = 103;</code>
       *
       * <pre>
       *推送 - buff信息推送
       * </pre>
       */
      public boolean hasBuffEntityInfo() {
        return ((bitField0_ & 0x00080000) == 0x00080000);
      }
      /**
       * <code>optional .BuffEntityInfo buffEntityInfo = 103;</code>
       *
       * <pre>
       *推送 - buff信息推送
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanFightMessage.BuffEntityInfo getBuffEntityInfo() {
        if (buffEntityInfoBuilder_ == null) {
          return buffEntityInfo_;
        } else {
          return buffEntityInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .BuffEntityInfo buffEntityInfo = 103;</code>
       *
       * <pre>
       *推送 - buff信息推送
       * </pre>
       */
      public Builder setBuffEntityInfo(com.ninelook.wecard.protocol.beans.BeanFightMessage.BuffEntityInfo value) {
        if (buffEntityInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          buffEntityInfo_ = value;
          onChanged();
        } else {
          buffEntityInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00080000;
        return this;
      }
      /**
       * <code>optional .BuffEntityInfo buffEntityInfo = 103;</code>
       *
       * <pre>
       *推送 - buff信息推送
       * </pre>
       */
      public Builder setBuffEntityInfo(
          com.ninelook.wecard.protocol.beans.BeanFightMessage.BuffEntityInfo.Builder builderForValue) {
        if (buffEntityInfoBuilder_ == null) {
          buffEntityInfo_ = builderForValue.build();
          onChanged();
        } else {
          buffEntityInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00080000;
        return this;
      }
      /**
       * <code>optional .BuffEntityInfo buffEntityInfo = 103;</code>
       *
       * <pre>
       *推送 - buff信息推送
       * </pre>
       */
      public Builder mergeBuffEntityInfo(com.ninelook.wecard.protocol.beans.BeanFightMessage.BuffEntityInfo value) {
        if (buffEntityInfoBuilder_ == null) {
          if (((bitField0_ & 0x00080000) == 0x00080000) &&
              buffEntityInfo_ != com.ninelook.wecard.protocol.beans.BeanFightMessage.BuffEntityInfo.getDefaultInstance()) {
            buffEntityInfo_ =
              com.ninelook.wecard.protocol.beans.BeanFightMessage.BuffEntityInfo.newBuilder(buffEntityInfo_).mergeFrom(value).buildPartial();
          } else {
            buffEntityInfo_ = value;
          }
          onChanged();
        } else {
          buffEntityInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00080000;
        return this;
      }
      /**
       * <code>optional .BuffEntityInfo buffEntityInfo = 103;</code>
       *
       * <pre>
       *推送 - buff信息推送
       * </pre>
       */
      public Builder clearBuffEntityInfo() {
        if (buffEntityInfoBuilder_ == null) {
          buffEntityInfo_ = com.ninelook.wecard.protocol.beans.BeanFightMessage.BuffEntityInfo.getDefaultInstance();
          onChanged();
        } else {
          buffEntityInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00080000);
        return this;
      }
      /**
       * <code>optional .BuffEntityInfo buffEntityInfo = 103;</code>
       *
       * <pre>
       *推送 - buff信息推送
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanFightMessage.BuffEntityInfo.Builder getBuffEntityInfoBuilder() {
        bitField0_ |= 0x00080000;
        onChanged();
        return getBuffEntityInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .BuffEntityInfo buffEntityInfo = 103;</code>
       *
       * <pre>
       *推送 - buff信息推送
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanFightMessage.BuffEntityInfoOrBuilder getBuffEntityInfoOrBuilder() {
        if (buffEntityInfoBuilder_ != null) {
          return buffEntityInfoBuilder_.getMessageOrBuilder();
        } else {
          return buffEntityInfo_;
        }
      }
      /**
       * <code>optional .BuffEntityInfo buffEntityInfo = 103;</code>
       *
       * <pre>
       *推送 - buff信息推送
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.ninelook.wecard.protocol.beans.BeanFightMessage.BuffEntityInfo, com.ninelook.wecard.protocol.beans.BeanFightMessage.BuffEntityInfo.Builder, com.ninelook.wecard.protocol.beans.BeanFightMessage.BuffEntityInfoOrBuilder> 
          getBuffEntityInfoFieldBuilder() {
        if (buffEntityInfoBuilder_ == null) {
          buffEntityInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.ninelook.wecard.protocol.beans.BeanFightMessage.BuffEntityInfo, com.ninelook.wecard.protocol.beans.BeanFightMessage.BuffEntityInfo.Builder, com.ninelook.wecard.protocol.beans.BeanFightMessage.BuffEntityInfoOrBuilder>(
                  getBuffEntityInfo(),
                  getParentForChildren(),
                  isClean());
          buffEntityInfo_ = null;
        }
        return buffEntityInfoBuilder_;
      }

      private java.util.List<com.ninelook.wecard.protocol.beans.BeanEntityMessage.EntityInfo> entityRefreshInfo_ =
        java.util.Collections.emptyList();
      private void ensureEntityRefreshInfoIsMutable() {
        if (!((bitField0_ & 0x00100000) == 0x00100000)) {
          entityRefreshInfo_ = new java.util.ArrayList<com.ninelook.wecard.protocol.beans.BeanEntityMessage.EntityInfo>(entityRefreshInfo_);
          bitField0_ |= 0x00100000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.ninelook.wecard.protocol.beans.BeanEntityMessage.EntityInfo, com.ninelook.wecard.protocol.beans.BeanEntityMessage.EntityInfo.Builder, com.ninelook.wecard.protocol.beans.BeanEntityMessage.EntityInfoOrBuilder> entityRefreshInfoBuilder_;

      /**
       * <code>repeated .EntityInfo entityRefreshInfo = 104;</code>
       *
       * <pre>
       *推送 - 实体刷新返回信息
       * </pre>
       */
      public java.util.List<com.ninelook.wecard.protocol.beans.BeanEntityMessage.EntityInfo> getEntityRefreshInfoList() {
        if (entityRefreshInfoBuilder_ == null) {
          return java.util.Collections.unmodifiableList(entityRefreshInfo_);
        } else {
          return entityRefreshInfoBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .EntityInfo entityRefreshInfo = 104;</code>
       *
       * <pre>
       *推送 - 实体刷新返回信息
       * </pre>
       */
      public int getEntityRefreshInfoCount() {
        if (entityRefreshInfoBuilder_ == null) {
          return entityRefreshInfo_.size();
        } else {
          return entityRefreshInfoBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .EntityInfo entityRefreshInfo = 104;</code>
       *
       * <pre>
       *推送 - 实体刷新返回信息
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanEntityMessage.EntityInfo getEntityRefreshInfo(int index) {
        if (entityRefreshInfoBuilder_ == null) {
          return entityRefreshInfo_.get(index);
        } else {
          return entityRefreshInfoBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .EntityInfo entityRefreshInfo = 104;</code>
       *
       * <pre>
       *推送 - 实体刷新返回信息
       * </pre>
       */
      public Builder setEntityRefreshInfo(
          int index, com.ninelook.wecard.protocol.beans.BeanEntityMessage.EntityInfo value) {
        if (entityRefreshInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEntityRefreshInfoIsMutable();
          entityRefreshInfo_.set(index, value);
          onChanged();
        } else {
          entityRefreshInfoBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .EntityInfo entityRefreshInfo = 104;</code>
       *
       * <pre>
       *推送 - 实体刷新返回信息
       * </pre>
       */
      public Builder setEntityRefreshInfo(
          int index, com.ninelook.wecard.protocol.beans.BeanEntityMessage.EntityInfo.Builder builderForValue) {
        if (entityRefreshInfoBuilder_ == null) {
          ensureEntityRefreshInfoIsMutable();
          entityRefreshInfo_.set(index, builderForValue.build());
          onChanged();
        } else {
          entityRefreshInfoBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .EntityInfo entityRefreshInfo = 104;</code>
       *
       * <pre>
       *推送 - 实体刷新返回信息
       * </pre>
       */
      public Builder addEntityRefreshInfo(com.ninelook.wecard.protocol.beans.BeanEntityMessage.EntityInfo value) {
        if (entityRefreshInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEntityRefreshInfoIsMutable();
          entityRefreshInfo_.add(value);
          onChanged();
        } else {
          entityRefreshInfoBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .EntityInfo entityRefreshInfo = 104;</code>
       *
       * <pre>
       *推送 - 实体刷新返回信息
       * </pre>
       */
      public Builder addEntityRefreshInfo(
          int index, com.ninelook.wecard.protocol.beans.BeanEntityMessage.EntityInfo value) {
        if (entityRefreshInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEntityRefreshInfoIsMutable();
          entityRefreshInfo_.add(index, value);
          onChanged();
        } else {
          entityRefreshInfoBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .EntityInfo entityRefreshInfo = 104;</code>
       *
       * <pre>
       *推送 - 实体刷新返回信息
       * </pre>
       */
      public Builder addEntityRefreshInfo(
          com.ninelook.wecard.protocol.beans.BeanEntityMessage.EntityInfo.Builder builderForValue) {
        if (entityRefreshInfoBuilder_ == null) {
          ensureEntityRefreshInfoIsMutable();
          entityRefreshInfo_.add(builderForValue.build());
          onChanged();
        } else {
          entityRefreshInfoBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .EntityInfo entityRefreshInfo = 104;</code>
       *
       * <pre>
       *推送 - 实体刷新返回信息
       * </pre>
       */
      public Builder addEntityRefreshInfo(
          int index, com.ninelook.wecard.protocol.beans.BeanEntityMessage.EntityInfo.Builder builderForValue) {
        if (entityRefreshInfoBuilder_ == null) {
          ensureEntityRefreshInfoIsMutable();
          entityRefreshInfo_.add(index, builderForValue.build());
          onChanged();
        } else {
          entityRefreshInfoBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .EntityInfo entityRefreshInfo = 104;</code>
       *
       * <pre>
       *推送 - 实体刷新返回信息
       * </pre>
       */
      public Builder addAllEntityRefreshInfo(
          java.lang.Iterable<? extends com.ninelook.wecard.protocol.beans.BeanEntityMessage.EntityInfo> values) {
        if (entityRefreshInfoBuilder_ == null) {
          ensureEntityRefreshInfoIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, entityRefreshInfo_);
          onChanged();
        } else {
          entityRefreshInfoBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .EntityInfo entityRefreshInfo = 104;</code>
       *
       * <pre>
       *推送 - 实体刷新返回信息
       * </pre>
       */
      public Builder clearEntityRefreshInfo() {
        if (entityRefreshInfoBuilder_ == null) {
          entityRefreshInfo_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00100000);
          onChanged();
        } else {
          entityRefreshInfoBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .EntityInfo entityRefreshInfo = 104;</code>
       *
       * <pre>
       *推送 - 实体刷新返回信息
       * </pre>
       */
      public Builder removeEntityRefreshInfo(int index) {
        if (entityRefreshInfoBuilder_ == null) {
          ensureEntityRefreshInfoIsMutable();
          entityRefreshInfo_.remove(index);
          onChanged();
        } else {
          entityRefreshInfoBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .EntityInfo entityRefreshInfo = 104;</code>
       *
       * <pre>
       *推送 - 实体刷新返回信息
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanEntityMessage.EntityInfo.Builder getEntityRefreshInfoBuilder(
          int index) {
        return getEntityRefreshInfoFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .EntityInfo entityRefreshInfo = 104;</code>
       *
       * <pre>
       *推送 - 实体刷新返回信息
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanEntityMessage.EntityInfoOrBuilder getEntityRefreshInfoOrBuilder(
          int index) {
        if (entityRefreshInfoBuilder_ == null) {
          return entityRefreshInfo_.get(index);  } else {
          return entityRefreshInfoBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .EntityInfo entityRefreshInfo = 104;</code>
       *
       * <pre>
       *推送 - 实体刷新返回信息
       * </pre>
       */
      public java.util.List<? extends com.ninelook.wecard.protocol.beans.BeanEntityMessage.EntityInfoOrBuilder> 
           getEntityRefreshInfoOrBuilderList() {
        if (entityRefreshInfoBuilder_ != null) {
          return entityRefreshInfoBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(entityRefreshInfo_);
        }
      }
      /**
       * <code>repeated .EntityInfo entityRefreshInfo = 104;</code>
       *
       * <pre>
       *推送 - 实体刷新返回信息
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanEntityMessage.EntityInfo.Builder addEntityRefreshInfoBuilder() {
        return getEntityRefreshInfoFieldBuilder().addBuilder(
            com.ninelook.wecard.protocol.beans.BeanEntityMessage.EntityInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .EntityInfo entityRefreshInfo = 104;</code>
       *
       * <pre>
       *推送 - 实体刷新返回信息
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanEntityMessage.EntityInfo.Builder addEntityRefreshInfoBuilder(
          int index) {
        return getEntityRefreshInfoFieldBuilder().addBuilder(
            index, com.ninelook.wecard.protocol.beans.BeanEntityMessage.EntityInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .EntityInfo entityRefreshInfo = 104;</code>
       *
       * <pre>
       *推送 - 实体刷新返回信息
       * </pre>
       */
      public java.util.List<com.ninelook.wecard.protocol.beans.BeanEntityMessage.EntityInfo.Builder> 
           getEntityRefreshInfoBuilderList() {
        return getEntityRefreshInfoFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.ninelook.wecard.protocol.beans.BeanEntityMessage.EntityInfo, com.ninelook.wecard.protocol.beans.BeanEntityMessage.EntityInfo.Builder, com.ninelook.wecard.protocol.beans.BeanEntityMessage.EntityInfoOrBuilder> 
          getEntityRefreshInfoFieldBuilder() {
        if (entityRefreshInfoBuilder_ == null) {
          entityRefreshInfoBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.ninelook.wecard.protocol.beans.BeanEntityMessage.EntityInfo, com.ninelook.wecard.protocol.beans.BeanEntityMessage.EntityInfo.Builder, com.ninelook.wecard.protocol.beans.BeanEntityMessage.EntityInfoOrBuilder>(
                  entityRefreshInfo_,
                  ((bitField0_ & 0x00100000) == 0x00100000),
                  getParentForChildren(),
                  isClean());
          entityRefreshInfo_ = null;
        }
        return entityRefreshInfoBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:HeshResMessage)
    }

    static {
      defaultInstance = new HeshResMessage(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:HeshResMessage)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_HeshResMessage_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_HeshResMessage_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\016Response.proto\032\034beans/BeanSceneMessage" +
      ".proto\032\033beans/BeanHomeMessage.proto\032\033bea" +
      "ns/BeanHeroMessage.proto\032\034beans/BeanFigh" +
      "tMessage.proto\032\035beans/BeanEntityMessage." +
      "proto\032\037beans/BeanCreatureMessage.proto\032\035" +
      "beans/BeanCommonMessage.proto\"\314\005\n\016HeshRe" +
      "sMessage\022\013\n\003mid\030\001 \002(\005\022\017\n\004code\030\002 \002(\005:\0010\022\023" +
      "\n\004push\030\003 \001(\010:\005false\022\037\n\nserverInfo\030\n \001(\0132" +
      "\013.ServerInfo\022\033\n\010homeInfo\030\013 \001(\0132\t.HomeInf" +
      "o\022\037\n\nplayerInfo\030\014 \001(\0132\013.PlayerInfo\022\033\n\010he",
      "roInfo\030\r \001(\0132\t.HeroInfo\022\031\n\007warInfo\030\016 \001(\013" +
      "2\010.WarInfo\022\035\n\013heroPosInfo\030\017 \001(\0132\010.PosInf" +
      "o\0225\n\025fightAttackResultInfo\030\020 \001(\0132\026.Fight" +
      "AttackResultInfo\022\034\n\tlUserInfo\030\021 \003(\0132\t.Us" +
      "erInfo\022\037\n\nloadedInfo\030\022 \001(\0132\013.LoadedInfo\022" +
      "\037\n\nhomeGoInfo\030\023 \001(\0132\013.HomeGoInfo\022#\n\014home" +
      "ExitInfo\030\024 \001(\0132\r.HomeExitInfo\022)\n\017skillRe" +
      "sultInfo\030\025 \001(\0132\020.SkillResultInfo\022%\n\rwarF" +
      "inishInfo\030\026 \001(\0132\016.WarFinishInfo\022)\n\017mapHo" +
      "meListInfo\030\027 \001(\0132\020.MapHomeListInfo\022\033\n\010de",
      "adInfo\030e \001(\0132\t.DeadInfo\022*\n\023creatureRefre" +
      "shInfo\030f \003(\0132\r.CreatureInfo\022\'\n\016buffEntit" +
      "yInfo\030g \001(\0132\017.BuffEntityInfo\022&\n\021entityRe" +
      "freshInfo\030h \003(\0132\013.EntityInfoB\036\n\034com.nine" +
      "look.wecard.protocol"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.ninelook.wecard.protocol.beans.BeanSceneMessage.getDescriptor(),
          com.ninelook.wecard.protocol.beans.BeanHomeMessage.getDescriptor(),
          com.ninelook.wecard.protocol.beans.BeanHeroMessage.getDescriptor(),
          com.ninelook.wecard.protocol.beans.BeanFightMessage.getDescriptor(),
          com.ninelook.wecard.protocol.beans.BeanEntityMessage.getDescriptor(),
          com.ninelook.wecard.protocol.beans.BeanCreatureMessage.getDescriptor(),
          com.ninelook.wecard.protocol.beans.BeanCommonMessage.getDescriptor(),
        }, assigner);
    internal_static_HeshResMessage_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_HeshResMessage_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_HeshResMessage_descriptor,
        new java.lang.String[] { "Mid", "Code", "Push", "ServerInfo", "HomeInfo", "PlayerInfo", "HeroInfo", "WarInfo", "HeroPosInfo", "FightAttackResultInfo", "LUserInfo", "LoadedInfo", "HomeGoInfo", "HomeExitInfo", "SkillResultInfo", "WarFinishInfo", "MapHomeListInfo", "DeadInfo", "CreatureRefreshInfo", "BuffEntityInfo", "EntityRefreshInfo", });
    com.ninelook.wecard.protocol.beans.BeanSceneMessage.getDescriptor();
    com.ninelook.wecard.protocol.beans.BeanHomeMessage.getDescriptor();
    com.ninelook.wecard.protocol.beans.BeanHeroMessage.getDescriptor();
    com.ninelook.wecard.protocol.beans.BeanFightMessage.getDescriptor();
    com.ninelook.wecard.protocol.beans.BeanEntityMessage.getDescriptor();
    com.ninelook.wecard.protocol.beans.BeanCreatureMessage.getDescriptor();
    com.ninelook.wecard.protocol.beans.BeanCommonMessage.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: apis/ApiFightMessage.proto

package com.ninelook.wecard.protocol.apis;

public final class ApiFightMessage {
  private ApiFightMessage() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface SReqAttackOrBuilder extends
      // @@protoc_insertion_point(interface_extends:SReqAttack)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .FighterInfo caster = 1;</code>
     *
     * <pre>
     *防御者列表
     * </pre>
     */
    java.util.List<com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfo> 
        getCasterList();
    /**
     * <code>repeated .FighterInfo caster = 1;</code>
     *
     * <pre>
     *防御者列表
     * </pre>
     */
    com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfo getCaster(int index);
    /**
     * <code>repeated .FighterInfo caster = 1;</code>
     *
     * <pre>
     *防御者列表
     * </pre>
     */
    int getCasterCount();
    /**
     * <code>repeated .FighterInfo caster = 1;</code>
     *
     * <pre>
     *防御者列表
     * </pre>
     */
    java.util.List<? extends com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfoOrBuilder> 
        getCasterOrBuilderList();
    /**
     * <code>repeated .FighterInfo caster = 1;</code>
     *
     * <pre>
     *防御者列表
     * </pre>
     */
    com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfoOrBuilder getCasterOrBuilder(
        int index);

    /**
     * <code>required .FighterInfo attacker = 2;</code>
     *
     * <pre>
     *攻击者信息
     * </pre>
     */
    boolean hasAttacker();
    /**
     * <code>required .FighterInfo attacker = 2;</code>
     *
     * <pre>
     *攻击者信息
     * </pre>
     */
    com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfo getAttacker();
    /**
     * <code>required .FighterInfo attacker = 2;</code>
     *
     * <pre>
     *攻击者信息
     * </pre>
     */
    com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfoOrBuilder getAttackerOrBuilder();

    /**
     * <code>required int32 serial = 3;</code>
     *
     * <pre>
     *当前连续攻击的序列
     * </pre>
     */
    boolean hasSerial();
    /**
     * <code>required int32 serial = 3;</code>
     *
     * <pre>
     *当前连续攻击的序列
     * </pre>
     */
    int getSerial();
  }
  /**
   * Protobuf type {@code SReqAttack}
   *
   * <pre>
   *API-英雄攻击
   * </pre>
   */
  public static final class SReqAttack extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:SReqAttack)
      SReqAttackOrBuilder {
    // Use SReqAttack.newBuilder() to construct.
    private SReqAttack(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SReqAttack(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SReqAttack defaultInstance;
    public static SReqAttack getDefaultInstance() {
      return defaultInstance;
    }

    public SReqAttack getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SReqAttack(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                caster_ = new java.util.ArrayList<com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfo>();
                mutable_bitField0_ |= 0x00000001;
              }
              caster_.add(input.readMessage(com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfo.PARSER, extensionRegistry));
              break;
            }
            case 18: {
              com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = attacker_.toBuilder();
              }
              attacker_ = input.readMessage(com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(attacker_);
                attacker_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 24: {
              bitField0_ |= 0x00000002;
              serial_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          caster_ = java.util.Collections.unmodifiableList(caster_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.ninelook.wecard.protocol.apis.ApiFightMessage.internal_static_SReqAttack_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.ninelook.wecard.protocol.apis.ApiFightMessage.internal_static_SReqAttack_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.ninelook.wecard.protocol.apis.ApiFightMessage.SReqAttack.class, com.ninelook.wecard.protocol.apis.ApiFightMessage.SReqAttack.Builder.class);
    }

    public static com.google.protobuf.Parser<SReqAttack> PARSER =
        new com.google.protobuf.AbstractParser<SReqAttack>() {
      public SReqAttack parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SReqAttack(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SReqAttack> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int CASTER_FIELD_NUMBER = 1;
    private java.util.List<com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfo> caster_;
    /**
     * <code>repeated .FighterInfo caster = 1;</code>
     *
     * <pre>
     *防御者列表
     * </pre>
     */
    public java.util.List<com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfo> getCasterList() {
      return caster_;
    }
    /**
     * <code>repeated .FighterInfo caster = 1;</code>
     *
     * <pre>
     *防御者列表
     * </pre>
     */
    public java.util.List<? extends com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfoOrBuilder> 
        getCasterOrBuilderList() {
      return caster_;
    }
    /**
     * <code>repeated .FighterInfo caster = 1;</code>
     *
     * <pre>
     *防御者列表
     * </pre>
     */
    public int getCasterCount() {
      return caster_.size();
    }
    /**
     * <code>repeated .FighterInfo caster = 1;</code>
     *
     * <pre>
     *防御者列表
     * </pre>
     */
    public com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfo getCaster(int index) {
      return caster_.get(index);
    }
    /**
     * <code>repeated .FighterInfo caster = 1;</code>
     *
     * <pre>
     *防御者列表
     * </pre>
     */
    public com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfoOrBuilder getCasterOrBuilder(
        int index) {
      return caster_.get(index);
    }

    public static final int ATTACKER_FIELD_NUMBER = 2;
    private com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfo attacker_;
    /**
     * <code>required .FighterInfo attacker = 2;</code>
     *
     * <pre>
     *攻击者信息
     * </pre>
     */
    public boolean hasAttacker() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .FighterInfo attacker = 2;</code>
     *
     * <pre>
     *攻击者信息
     * </pre>
     */
    public com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfo getAttacker() {
      return attacker_;
    }
    /**
     * <code>required .FighterInfo attacker = 2;</code>
     *
     * <pre>
     *攻击者信息
     * </pre>
     */
    public com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfoOrBuilder getAttackerOrBuilder() {
      return attacker_;
    }

    public static final int SERIAL_FIELD_NUMBER = 3;
    private int serial_;
    /**
     * <code>required int32 serial = 3;</code>
     *
     * <pre>
     *当前连续攻击的序列
     * </pre>
     */
    public boolean hasSerial() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 serial = 3;</code>
     *
     * <pre>
     *当前连续攻击的序列
     * </pre>
     */
    public int getSerial() {
      return serial_;
    }

    private void initFields() {
      caster_ = java.util.Collections.emptyList();
      attacker_ = com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfo.getDefaultInstance();
      serial_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasAttacker()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSerial()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getCasterCount(); i++) {
        if (!getCaster(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (!getAttacker().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < caster_.size(); i++) {
        output.writeMessage(1, caster_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(2, attacker_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(3, serial_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < caster_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, caster_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, attacker_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, serial_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ninelook.wecard.protocol.apis.ApiFightMessage.SReqAttack parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ninelook.wecard.protocol.apis.ApiFightMessage.SReqAttack parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ninelook.wecard.protocol.apis.ApiFightMessage.SReqAttack parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ninelook.wecard.protocol.apis.ApiFightMessage.SReqAttack parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ninelook.wecard.protocol.apis.ApiFightMessage.SReqAttack parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ninelook.wecard.protocol.apis.ApiFightMessage.SReqAttack parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ninelook.wecard.protocol.apis.ApiFightMessage.SReqAttack parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ninelook.wecard.protocol.apis.ApiFightMessage.SReqAttack parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ninelook.wecard.protocol.apis.ApiFightMessage.SReqAttack parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ninelook.wecard.protocol.apis.ApiFightMessage.SReqAttack parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ninelook.wecard.protocol.apis.ApiFightMessage.SReqAttack prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code SReqAttack}
     *
     * <pre>
     *API-英雄攻击
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:SReqAttack)
        com.ninelook.wecard.protocol.apis.ApiFightMessage.SReqAttackOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.ninelook.wecard.protocol.apis.ApiFightMessage.internal_static_SReqAttack_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.ninelook.wecard.protocol.apis.ApiFightMessage.internal_static_SReqAttack_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.ninelook.wecard.protocol.apis.ApiFightMessage.SReqAttack.class, com.ninelook.wecard.protocol.apis.ApiFightMessage.SReqAttack.Builder.class);
      }

      // Construct using com.ninelook.wecard.protocol.apis.ApiFightMessage.SReqAttack.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getCasterFieldBuilder();
          getAttackerFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (casterBuilder_ == null) {
          caster_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          casterBuilder_.clear();
        }
        if (attackerBuilder_ == null) {
          attacker_ = com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfo.getDefaultInstance();
        } else {
          attackerBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        serial_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.ninelook.wecard.protocol.apis.ApiFightMessage.internal_static_SReqAttack_descriptor;
      }

      public com.ninelook.wecard.protocol.apis.ApiFightMessage.SReqAttack getDefaultInstanceForType() {
        return com.ninelook.wecard.protocol.apis.ApiFightMessage.SReqAttack.getDefaultInstance();
      }

      public com.ninelook.wecard.protocol.apis.ApiFightMessage.SReqAttack build() {
        com.ninelook.wecard.protocol.apis.ApiFightMessage.SReqAttack result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ninelook.wecard.protocol.apis.ApiFightMessage.SReqAttack buildPartial() {
        com.ninelook.wecard.protocol.apis.ApiFightMessage.SReqAttack result = new com.ninelook.wecard.protocol.apis.ApiFightMessage.SReqAttack(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (casterBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            caster_ = java.util.Collections.unmodifiableList(caster_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.caster_ = caster_;
        } else {
          result.caster_ = casterBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000001;
        }
        if (attackerBuilder_ == null) {
          result.attacker_ = attacker_;
        } else {
          result.attacker_ = attackerBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.serial_ = serial_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.ninelook.wecard.protocol.apis.ApiFightMessage.SReqAttack) {
          return mergeFrom((com.ninelook.wecard.protocol.apis.ApiFightMessage.SReqAttack)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.ninelook.wecard.protocol.apis.ApiFightMessage.SReqAttack other) {
        if (other == com.ninelook.wecard.protocol.apis.ApiFightMessage.SReqAttack.getDefaultInstance()) return this;
        if (casterBuilder_ == null) {
          if (!other.caster_.isEmpty()) {
            if (caster_.isEmpty()) {
              caster_ = other.caster_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureCasterIsMutable();
              caster_.addAll(other.caster_);
            }
            onChanged();
          }
        } else {
          if (!other.caster_.isEmpty()) {
            if (casterBuilder_.isEmpty()) {
              casterBuilder_.dispose();
              casterBuilder_ = null;
              caster_ = other.caster_;
              bitField0_ = (bitField0_ & ~0x00000001);
              casterBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getCasterFieldBuilder() : null;
            } else {
              casterBuilder_.addAllMessages(other.caster_);
            }
          }
        }
        if (other.hasAttacker()) {
          mergeAttacker(other.getAttacker());
        }
        if (other.hasSerial()) {
          setSerial(other.getSerial());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasAttacker()) {
          
          return false;
        }
        if (!hasSerial()) {
          
          return false;
        }
        for (int i = 0; i < getCasterCount(); i++) {
          if (!getCaster(i).isInitialized()) {
            
            return false;
          }
        }
        if (!getAttacker().isInitialized()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ninelook.wecard.protocol.apis.ApiFightMessage.SReqAttack parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ninelook.wecard.protocol.apis.ApiFightMessage.SReqAttack) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfo> caster_ =
        java.util.Collections.emptyList();
      private void ensureCasterIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          caster_ = new java.util.ArrayList<com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfo>(caster_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfo, com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfo.Builder, com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfoOrBuilder> casterBuilder_;

      /**
       * <code>repeated .FighterInfo caster = 1;</code>
       *
       * <pre>
       *防御者列表
       * </pre>
       */
      public java.util.List<com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfo> getCasterList() {
        if (casterBuilder_ == null) {
          return java.util.Collections.unmodifiableList(caster_);
        } else {
          return casterBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .FighterInfo caster = 1;</code>
       *
       * <pre>
       *防御者列表
       * </pre>
       */
      public int getCasterCount() {
        if (casterBuilder_ == null) {
          return caster_.size();
        } else {
          return casterBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .FighterInfo caster = 1;</code>
       *
       * <pre>
       *防御者列表
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfo getCaster(int index) {
        if (casterBuilder_ == null) {
          return caster_.get(index);
        } else {
          return casterBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .FighterInfo caster = 1;</code>
       *
       * <pre>
       *防御者列表
       * </pre>
       */
      public Builder setCaster(
          int index, com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfo value) {
        if (casterBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCasterIsMutable();
          caster_.set(index, value);
          onChanged();
        } else {
          casterBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .FighterInfo caster = 1;</code>
       *
       * <pre>
       *防御者列表
       * </pre>
       */
      public Builder setCaster(
          int index, com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfo.Builder builderForValue) {
        if (casterBuilder_ == null) {
          ensureCasterIsMutable();
          caster_.set(index, builderForValue.build());
          onChanged();
        } else {
          casterBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .FighterInfo caster = 1;</code>
       *
       * <pre>
       *防御者列表
       * </pre>
       */
      public Builder addCaster(com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfo value) {
        if (casterBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCasterIsMutable();
          caster_.add(value);
          onChanged();
        } else {
          casterBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .FighterInfo caster = 1;</code>
       *
       * <pre>
       *防御者列表
       * </pre>
       */
      public Builder addCaster(
          int index, com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfo value) {
        if (casterBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCasterIsMutable();
          caster_.add(index, value);
          onChanged();
        } else {
          casterBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .FighterInfo caster = 1;</code>
       *
       * <pre>
       *防御者列表
       * </pre>
       */
      public Builder addCaster(
          com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfo.Builder builderForValue) {
        if (casterBuilder_ == null) {
          ensureCasterIsMutable();
          caster_.add(builderForValue.build());
          onChanged();
        } else {
          casterBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .FighterInfo caster = 1;</code>
       *
       * <pre>
       *防御者列表
       * </pre>
       */
      public Builder addCaster(
          int index, com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfo.Builder builderForValue) {
        if (casterBuilder_ == null) {
          ensureCasterIsMutable();
          caster_.add(index, builderForValue.build());
          onChanged();
        } else {
          casterBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .FighterInfo caster = 1;</code>
       *
       * <pre>
       *防御者列表
       * </pre>
       */
      public Builder addAllCaster(
          java.lang.Iterable<? extends com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfo> values) {
        if (casterBuilder_ == null) {
          ensureCasterIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, caster_);
          onChanged();
        } else {
          casterBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .FighterInfo caster = 1;</code>
       *
       * <pre>
       *防御者列表
       * </pre>
       */
      public Builder clearCaster() {
        if (casterBuilder_ == null) {
          caster_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          casterBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .FighterInfo caster = 1;</code>
       *
       * <pre>
       *防御者列表
       * </pre>
       */
      public Builder removeCaster(int index) {
        if (casterBuilder_ == null) {
          ensureCasterIsMutable();
          caster_.remove(index);
          onChanged();
        } else {
          casterBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .FighterInfo caster = 1;</code>
       *
       * <pre>
       *防御者列表
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfo.Builder getCasterBuilder(
          int index) {
        return getCasterFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .FighterInfo caster = 1;</code>
       *
       * <pre>
       *防御者列表
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfoOrBuilder getCasterOrBuilder(
          int index) {
        if (casterBuilder_ == null) {
          return caster_.get(index);  } else {
          return casterBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .FighterInfo caster = 1;</code>
       *
       * <pre>
       *防御者列表
       * </pre>
       */
      public java.util.List<? extends com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfoOrBuilder> 
           getCasterOrBuilderList() {
        if (casterBuilder_ != null) {
          return casterBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(caster_);
        }
      }
      /**
       * <code>repeated .FighterInfo caster = 1;</code>
       *
       * <pre>
       *防御者列表
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfo.Builder addCasterBuilder() {
        return getCasterFieldBuilder().addBuilder(
            com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .FighterInfo caster = 1;</code>
       *
       * <pre>
       *防御者列表
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfo.Builder addCasterBuilder(
          int index) {
        return getCasterFieldBuilder().addBuilder(
            index, com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .FighterInfo caster = 1;</code>
       *
       * <pre>
       *防御者列表
       * </pre>
       */
      public java.util.List<com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfo.Builder> 
           getCasterBuilderList() {
        return getCasterFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfo, com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfo.Builder, com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfoOrBuilder> 
          getCasterFieldBuilder() {
        if (casterBuilder_ == null) {
          casterBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfo, com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfo.Builder, com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfoOrBuilder>(
                  caster_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          caster_ = null;
        }
        return casterBuilder_;
      }

      private com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfo attacker_ = com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfo, com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfo.Builder, com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfoOrBuilder> attackerBuilder_;
      /**
       * <code>required .FighterInfo attacker = 2;</code>
       *
       * <pre>
       *攻击者信息
       * </pre>
       */
      public boolean hasAttacker() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .FighterInfo attacker = 2;</code>
       *
       * <pre>
       *攻击者信息
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfo getAttacker() {
        if (attackerBuilder_ == null) {
          return attacker_;
        } else {
          return attackerBuilder_.getMessage();
        }
      }
      /**
       * <code>required .FighterInfo attacker = 2;</code>
       *
       * <pre>
       *攻击者信息
       * </pre>
       */
      public Builder setAttacker(com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfo value) {
        if (attackerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          attacker_ = value;
          onChanged();
        } else {
          attackerBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .FighterInfo attacker = 2;</code>
       *
       * <pre>
       *攻击者信息
       * </pre>
       */
      public Builder setAttacker(
          com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfo.Builder builderForValue) {
        if (attackerBuilder_ == null) {
          attacker_ = builderForValue.build();
          onChanged();
        } else {
          attackerBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .FighterInfo attacker = 2;</code>
       *
       * <pre>
       *攻击者信息
       * </pre>
       */
      public Builder mergeAttacker(com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfo value) {
        if (attackerBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              attacker_ != com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfo.getDefaultInstance()) {
            attacker_ =
              com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfo.newBuilder(attacker_).mergeFrom(value).buildPartial();
          } else {
            attacker_ = value;
          }
          onChanged();
        } else {
          attackerBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .FighterInfo attacker = 2;</code>
       *
       * <pre>
       *攻击者信息
       * </pre>
       */
      public Builder clearAttacker() {
        if (attackerBuilder_ == null) {
          attacker_ = com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfo.getDefaultInstance();
          onChanged();
        } else {
          attackerBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>required .FighterInfo attacker = 2;</code>
       *
       * <pre>
       *攻击者信息
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfo.Builder getAttackerBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getAttackerFieldBuilder().getBuilder();
      }
      /**
       * <code>required .FighterInfo attacker = 2;</code>
       *
       * <pre>
       *攻击者信息
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfoOrBuilder getAttackerOrBuilder() {
        if (attackerBuilder_ != null) {
          return attackerBuilder_.getMessageOrBuilder();
        } else {
          return attacker_;
        }
      }
      /**
       * <code>required .FighterInfo attacker = 2;</code>
       *
       * <pre>
       *攻击者信息
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfo, com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfo.Builder, com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfoOrBuilder> 
          getAttackerFieldBuilder() {
        if (attackerBuilder_ == null) {
          attackerBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfo, com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfo.Builder, com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfoOrBuilder>(
                  getAttacker(),
                  getParentForChildren(),
                  isClean());
          attacker_ = null;
        }
        return attackerBuilder_;
      }

      private int serial_ ;
      /**
       * <code>required int32 serial = 3;</code>
       *
       * <pre>
       *当前连续攻击的序列
       * </pre>
       */
      public boolean hasSerial() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 serial = 3;</code>
       *
       * <pre>
       *当前连续攻击的序列
       * </pre>
       */
      public int getSerial() {
        return serial_;
      }
      /**
       * <code>required int32 serial = 3;</code>
       *
       * <pre>
       *当前连续攻击的序列
       * </pre>
       */
      public Builder setSerial(int value) {
        bitField0_ |= 0x00000004;
        serial_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 serial = 3;</code>
       *
       * <pre>
       *当前连续攻击的序列
       * </pre>
       */
      public Builder clearSerial() {
        bitField0_ = (bitField0_ & ~0x00000004);
        serial_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:SReqAttack)
    }

    static {
      defaultInstance = new SReqAttack(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:SReqAttack)
  }

  public interface SReqSkillUseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:SReqSkillUse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .FighterInfo caster = 1;</code>
     *
     * <pre>
     *防御者列表
     * </pre>
     */
    java.util.List<com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfo> 
        getCasterList();
    /**
     * <code>repeated .FighterInfo caster = 1;</code>
     *
     * <pre>
     *防御者列表
     * </pre>
     */
    com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfo getCaster(int index);
    /**
     * <code>repeated .FighterInfo caster = 1;</code>
     *
     * <pre>
     *防御者列表
     * </pre>
     */
    int getCasterCount();
    /**
     * <code>repeated .FighterInfo caster = 1;</code>
     *
     * <pre>
     *防御者列表
     * </pre>
     */
    java.util.List<? extends com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfoOrBuilder> 
        getCasterOrBuilderList();
    /**
     * <code>repeated .FighterInfo caster = 1;</code>
     *
     * <pre>
     *防御者列表
     * </pre>
     */
    com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfoOrBuilder getCasterOrBuilder(
        int index);

    /**
     * <code>required .FighterInfo attacker = 2;</code>
     *
     * <pre>
     *发起者信息
     * </pre>
     */
    boolean hasAttacker();
    /**
     * <code>required .FighterInfo attacker = 2;</code>
     *
     * <pre>
     *发起者信息
     * </pre>
     */
    com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfo getAttacker();
    /**
     * <code>required .FighterInfo attacker = 2;</code>
     *
     * <pre>
     *发起者信息
     * </pre>
     */
    com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfoOrBuilder getAttackerOrBuilder();
  }
  /**
   * Protobuf type {@code SReqSkillUse}
   *
   * <pre>
   *API-英雄技能
   * </pre>
   */
  public static final class SReqSkillUse extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:SReqSkillUse)
      SReqSkillUseOrBuilder {
    // Use SReqSkillUse.newBuilder() to construct.
    private SReqSkillUse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SReqSkillUse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SReqSkillUse defaultInstance;
    public static SReqSkillUse getDefaultInstance() {
      return defaultInstance;
    }

    public SReqSkillUse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SReqSkillUse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                caster_ = new java.util.ArrayList<com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfo>();
                mutable_bitField0_ |= 0x00000001;
              }
              caster_.add(input.readMessage(com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfo.PARSER, extensionRegistry));
              break;
            }
            case 18: {
              com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = attacker_.toBuilder();
              }
              attacker_ = input.readMessage(com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(attacker_);
                attacker_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          caster_ = java.util.Collections.unmodifiableList(caster_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.ninelook.wecard.protocol.apis.ApiFightMessage.internal_static_SReqSkillUse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.ninelook.wecard.protocol.apis.ApiFightMessage.internal_static_SReqSkillUse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.ninelook.wecard.protocol.apis.ApiFightMessage.SReqSkillUse.class, com.ninelook.wecard.protocol.apis.ApiFightMessage.SReqSkillUse.Builder.class);
    }

    public static com.google.protobuf.Parser<SReqSkillUse> PARSER =
        new com.google.protobuf.AbstractParser<SReqSkillUse>() {
      public SReqSkillUse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SReqSkillUse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SReqSkillUse> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int CASTER_FIELD_NUMBER = 1;
    private java.util.List<com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfo> caster_;
    /**
     * <code>repeated .FighterInfo caster = 1;</code>
     *
     * <pre>
     *防御者列表
     * </pre>
     */
    public java.util.List<com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfo> getCasterList() {
      return caster_;
    }
    /**
     * <code>repeated .FighterInfo caster = 1;</code>
     *
     * <pre>
     *防御者列表
     * </pre>
     */
    public java.util.List<? extends com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfoOrBuilder> 
        getCasterOrBuilderList() {
      return caster_;
    }
    /**
     * <code>repeated .FighterInfo caster = 1;</code>
     *
     * <pre>
     *防御者列表
     * </pre>
     */
    public int getCasterCount() {
      return caster_.size();
    }
    /**
     * <code>repeated .FighterInfo caster = 1;</code>
     *
     * <pre>
     *防御者列表
     * </pre>
     */
    public com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfo getCaster(int index) {
      return caster_.get(index);
    }
    /**
     * <code>repeated .FighterInfo caster = 1;</code>
     *
     * <pre>
     *防御者列表
     * </pre>
     */
    public com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfoOrBuilder getCasterOrBuilder(
        int index) {
      return caster_.get(index);
    }

    public static final int ATTACKER_FIELD_NUMBER = 2;
    private com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfo attacker_;
    /**
     * <code>required .FighterInfo attacker = 2;</code>
     *
     * <pre>
     *发起者信息
     * </pre>
     */
    public boolean hasAttacker() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .FighterInfo attacker = 2;</code>
     *
     * <pre>
     *发起者信息
     * </pre>
     */
    public com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfo getAttacker() {
      return attacker_;
    }
    /**
     * <code>required .FighterInfo attacker = 2;</code>
     *
     * <pre>
     *发起者信息
     * </pre>
     */
    public com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfoOrBuilder getAttackerOrBuilder() {
      return attacker_;
    }

    private void initFields() {
      caster_ = java.util.Collections.emptyList();
      attacker_ = com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfo.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasAttacker()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getCasterCount(); i++) {
        if (!getCaster(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (!getAttacker().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < caster_.size(); i++) {
        output.writeMessage(1, caster_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(2, attacker_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < caster_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, caster_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, attacker_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ninelook.wecard.protocol.apis.ApiFightMessage.SReqSkillUse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ninelook.wecard.protocol.apis.ApiFightMessage.SReqSkillUse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ninelook.wecard.protocol.apis.ApiFightMessage.SReqSkillUse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ninelook.wecard.protocol.apis.ApiFightMessage.SReqSkillUse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ninelook.wecard.protocol.apis.ApiFightMessage.SReqSkillUse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ninelook.wecard.protocol.apis.ApiFightMessage.SReqSkillUse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ninelook.wecard.protocol.apis.ApiFightMessage.SReqSkillUse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ninelook.wecard.protocol.apis.ApiFightMessage.SReqSkillUse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ninelook.wecard.protocol.apis.ApiFightMessage.SReqSkillUse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ninelook.wecard.protocol.apis.ApiFightMessage.SReqSkillUse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ninelook.wecard.protocol.apis.ApiFightMessage.SReqSkillUse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code SReqSkillUse}
     *
     * <pre>
     *API-英雄技能
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:SReqSkillUse)
        com.ninelook.wecard.protocol.apis.ApiFightMessage.SReqSkillUseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.ninelook.wecard.protocol.apis.ApiFightMessage.internal_static_SReqSkillUse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.ninelook.wecard.protocol.apis.ApiFightMessage.internal_static_SReqSkillUse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.ninelook.wecard.protocol.apis.ApiFightMessage.SReqSkillUse.class, com.ninelook.wecard.protocol.apis.ApiFightMessage.SReqSkillUse.Builder.class);
      }

      // Construct using com.ninelook.wecard.protocol.apis.ApiFightMessage.SReqSkillUse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getCasterFieldBuilder();
          getAttackerFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (casterBuilder_ == null) {
          caster_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          casterBuilder_.clear();
        }
        if (attackerBuilder_ == null) {
          attacker_ = com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfo.getDefaultInstance();
        } else {
          attackerBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.ninelook.wecard.protocol.apis.ApiFightMessage.internal_static_SReqSkillUse_descriptor;
      }

      public com.ninelook.wecard.protocol.apis.ApiFightMessage.SReqSkillUse getDefaultInstanceForType() {
        return com.ninelook.wecard.protocol.apis.ApiFightMessage.SReqSkillUse.getDefaultInstance();
      }

      public com.ninelook.wecard.protocol.apis.ApiFightMessage.SReqSkillUse build() {
        com.ninelook.wecard.protocol.apis.ApiFightMessage.SReqSkillUse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ninelook.wecard.protocol.apis.ApiFightMessage.SReqSkillUse buildPartial() {
        com.ninelook.wecard.protocol.apis.ApiFightMessage.SReqSkillUse result = new com.ninelook.wecard.protocol.apis.ApiFightMessage.SReqSkillUse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (casterBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            caster_ = java.util.Collections.unmodifiableList(caster_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.caster_ = caster_;
        } else {
          result.caster_ = casterBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000001;
        }
        if (attackerBuilder_ == null) {
          result.attacker_ = attacker_;
        } else {
          result.attacker_ = attackerBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.ninelook.wecard.protocol.apis.ApiFightMessage.SReqSkillUse) {
          return mergeFrom((com.ninelook.wecard.protocol.apis.ApiFightMessage.SReqSkillUse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.ninelook.wecard.protocol.apis.ApiFightMessage.SReqSkillUse other) {
        if (other == com.ninelook.wecard.protocol.apis.ApiFightMessage.SReqSkillUse.getDefaultInstance()) return this;
        if (casterBuilder_ == null) {
          if (!other.caster_.isEmpty()) {
            if (caster_.isEmpty()) {
              caster_ = other.caster_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureCasterIsMutable();
              caster_.addAll(other.caster_);
            }
            onChanged();
          }
        } else {
          if (!other.caster_.isEmpty()) {
            if (casterBuilder_.isEmpty()) {
              casterBuilder_.dispose();
              casterBuilder_ = null;
              caster_ = other.caster_;
              bitField0_ = (bitField0_ & ~0x00000001);
              casterBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getCasterFieldBuilder() : null;
            } else {
              casterBuilder_.addAllMessages(other.caster_);
            }
          }
        }
        if (other.hasAttacker()) {
          mergeAttacker(other.getAttacker());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasAttacker()) {
          
          return false;
        }
        for (int i = 0; i < getCasterCount(); i++) {
          if (!getCaster(i).isInitialized()) {
            
            return false;
          }
        }
        if (!getAttacker().isInitialized()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ninelook.wecard.protocol.apis.ApiFightMessage.SReqSkillUse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ninelook.wecard.protocol.apis.ApiFightMessage.SReqSkillUse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfo> caster_ =
        java.util.Collections.emptyList();
      private void ensureCasterIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          caster_ = new java.util.ArrayList<com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfo>(caster_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfo, com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfo.Builder, com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfoOrBuilder> casterBuilder_;

      /**
       * <code>repeated .FighterInfo caster = 1;</code>
       *
       * <pre>
       *防御者列表
       * </pre>
       */
      public java.util.List<com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfo> getCasterList() {
        if (casterBuilder_ == null) {
          return java.util.Collections.unmodifiableList(caster_);
        } else {
          return casterBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .FighterInfo caster = 1;</code>
       *
       * <pre>
       *防御者列表
       * </pre>
       */
      public int getCasterCount() {
        if (casterBuilder_ == null) {
          return caster_.size();
        } else {
          return casterBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .FighterInfo caster = 1;</code>
       *
       * <pre>
       *防御者列表
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfo getCaster(int index) {
        if (casterBuilder_ == null) {
          return caster_.get(index);
        } else {
          return casterBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .FighterInfo caster = 1;</code>
       *
       * <pre>
       *防御者列表
       * </pre>
       */
      public Builder setCaster(
          int index, com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfo value) {
        if (casterBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCasterIsMutable();
          caster_.set(index, value);
          onChanged();
        } else {
          casterBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .FighterInfo caster = 1;</code>
       *
       * <pre>
       *防御者列表
       * </pre>
       */
      public Builder setCaster(
          int index, com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfo.Builder builderForValue) {
        if (casterBuilder_ == null) {
          ensureCasterIsMutable();
          caster_.set(index, builderForValue.build());
          onChanged();
        } else {
          casterBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .FighterInfo caster = 1;</code>
       *
       * <pre>
       *防御者列表
       * </pre>
       */
      public Builder addCaster(com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfo value) {
        if (casterBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCasterIsMutable();
          caster_.add(value);
          onChanged();
        } else {
          casterBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .FighterInfo caster = 1;</code>
       *
       * <pre>
       *防御者列表
       * </pre>
       */
      public Builder addCaster(
          int index, com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfo value) {
        if (casterBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCasterIsMutable();
          caster_.add(index, value);
          onChanged();
        } else {
          casterBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .FighterInfo caster = 1;</code>
       *
       * <pre>
       *防御者列表
       * </pre>
       */
      public Builder addCaster(
          com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfo.Builder builderForValue) {
        if (casterBuilder_ == null) {
          ensureCasterIsMutable();
          caster_.add(builderForValue.build());
          onChanged();
        } else {
          casterBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .FighterInfo caster = 1;</code>
       *
       * <pre>
       *防御者列表
       * </pre>
       */
      public Builder addCaster(
          int index, com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfo.Builder builderForValue) {
        if (casterBuilder_ == null) {
          ensureCasterIsMutable();
          caster_.add(index, builderForValue.build());
          onChanged();
        } else {
          casterBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .FighterInfo caster = 1;</code>
       *
       * <pre>
       *防御者列表
       * </pre>
       */
      public Builder addAllCaster(
          java.lang.Iterable<? extends com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfo> values) {
        if (casterBuilder_ == null) {
          ensureCasterIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, caster_);
          onChanged();
        } else {
          casterBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .FighterInfo caster = 1;</code>
       *
       * <pre>
       *防御者列表
       * </pre>
       */
      public Builder clearCaster() {
        if (casterBuilder_ == null) {
          caster_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          casterBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .FighterInfo caster = 1;</code>
       *
       * <pre>
       *防御者列表
       * </pre>
       */
      public Builder removeCaster(int index) {
        if (casterBuilder_ == null) {
          ensureCasterIsMutable();
          caster_.remove(index);
          onChanged();
        } else {
          casterBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .FighterInfo caster = 1;</code>
       *
       * <pre>
       *防御者列表
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfo.Builder getCasterBuilder(
          int index) {
        return getCasterFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .FighterInfo caster = 1;</code>
       *
       * <pre>
       *防御者列表
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfoOrBuilder getCasterOrBuilder(
          int index) {
        if (casterBuilder_ == null) {
          return caster_.get(index);  } else {
          return casterBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .FighterInfo caster = 1;</code>
       *
       * <pre>
       *防御者列表
       * </pre>
       */
      public java.util.List<? extends com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfoOrBuilder> 
           getCasterOrBuilderList() {
        if (casterBuilder_ != null) {
          return casterBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(caster_);
        }
      }
      /**
       * <code>repeated .FighterInfo caster = 1;</code>
       *
       * <pre>
       *防御者列表
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfo.Builder addCasterBuilder() {
        return getCasterFieldBuilder().addBuilder(
            com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .FighterInfo caster = 1;</code>
       *
       * <pre>
       *防御者列表
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfo.Builder addCasterBuilder(
          int index) {
        return getCasterFieldBuilder().addBuilder(
            index, com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .FighterInfo caster = 1;</code>
       *
       * <pre>
       *防御者列表
       * </pre>
       */
      public java.util.List<com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfo.Builder> 
           getCasterBuilderList() {
        return getCasterFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfo, com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfo.Builder, com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfoOrBuilder> 
          getCasterFieldBuilder() {
        if (casterBuilder_ == null) {
          casterBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfo, com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfo.Builder, com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfoOrBuilder>(
                  caster_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          caster_ = null;
        }
        return casterBuilder_;
      }

      private com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfo attacker_ = com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfo, com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfo.Builder, com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfoOrBuilder> attackerBuilder_;
      /**
       * <code>required .FighterInfo attacker = 2;</code>
       *
       * <pre>
       *发起者信息
       * </pre>
       */
      public boolean hasAttacker() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .FighterInfo attacker = 2;</code>
       *
       * <pre>
       *发起者信息
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfo getAttacker() {
        if (attackerBuilder_ == null) {
          return attacker_;
        } else {
          return attackerBuilder_.getMessage();
        }
      }
      /**
       * <code>required .FighterInfo attacker = 2;</code>
       *
       * <pre>
       *发起者信息
       * </pre>
       */
      public Builder setAttacker(com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfo value) {
        if (attackerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          attacker_ = value;
          onChanged();
        } else {
          attackerBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .FighterInfo attacker = 2;</code>
       *
       * <pre>
       *发起者信息
       * </pre>
       */
      public Builder setAttacker(
          com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfo.Builder builderForValue) {
        if (attackerBuilder_ == null) {
          attacker_ = builderForValue.build();
          onChanged();
        } else {
          attackerBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .FighterInfo attacker = 2;</code>
       *
       * <pre>
       *发起者信息
       * </pre>
       */
      public Builder mergeAttacker(com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfo value) {
        if (attackerBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              attacker_ != com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfo.getDefaultInstance()) {
            attacker_ =
              com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfo.newBuilder(attacker_).mergeFrom(value).buildPartial();
          } else {
            attacker_ = value;
          }
          onChanged();
        } else {
          attackerBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .FighterInfo attacker = 2;</code>
       *
       * <pre>
       *发起者信息
       * </pre>
       */
      public Builder clearAttacker() {
        if (attackerBuilder_ == null) {
          attacker_ = com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfo.getDefaultInstance();
          onChanged();
        } else {
          attackerBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>required .FighterInfo attacker = 2;</code>
       *
       * <pre>
       *发起者信息
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfo.Builder getAttackerBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getAttackerFieldBuilder().getBuilder();
      }
      /**
       * <code>required .FighterInfo attacker = 2;</code>
       *
       * <pre>
       *发起者信息
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfoOrBuilder getAttackerOrBuilder() {
        if (attackerBuilder_ != null) {
          return attackerBuilder_.getMessageOrBuilder();
        } else {
          return attacker_;
        }
      }
      /**
       * <code>required .FighterInfo attacker = 2;</code>
       *
       * <pre>
       *发起者信息
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfo, com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfo.Builder, com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfoOrBuilder> 
          getAttackerFieldBuilder() {
        if (attackerBuilder_ == null) {
          attackerBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfo, com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfo.Builder, com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfoOrBuilder>(
                  getAttacker(),
                  getParentForChildren(),
                  isClean());
          attacker_ = null;
        }
        return attackerBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:SReqSkillUse)
    }

    static {
      defaultInstance = new SReqSkillUse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:SReqSkillUse)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_SReqAttack_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_SReqAttack_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_SReqSkillUse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_SReqSkillUse_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\032apis/ApiFightMessage.proto\032\034beans/Bean" +
      "SceneMessage.proto\032\033beans/BeanHomeMessag" +
      "e.proto\032\033beans/BeanHeroMessage.proto\032\035be" +
      "ans/BeanEntityMessage.proto\032\034beans/BeanF" +
      "ightMessage.proto\"Z\n\nSReqAttack\022\034\n\006caste" +
      "r\030\001 \003(\0132\014.FighterInfo\022\036\n\010attacker\030\002 \002(\0132" +
      "\014.FighterInfo\022\016\n\006serial\030\003 \002(\005\"L\n\014SReqSki" +
      "llUse\022\034\n\006caster\030\001 \003(\0132\014.FighterInfo\022\036\n\010a" +
      "ttacker\030\002 \002(\0132\014.FighterInfoB#\n!com.ninel" +
      "ook.wecard.protocol.apis"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.ninelook.wecard.protocol.beans.BeanSceneMessage.getDescriptor(),
          com.ninelook.wecard.protocol.beans.BeanHomeMessage.getDescriptor(),
          com.ninelook.wecard.protocol.beans.BeanHeroMessage.getDescriptor(),
          com.ninelook.wecard.protocol.beans.BeanEntityMessage.getDescriptor(),
          com.ninelook.wecard.protocol.beans.BeanFightMessage.getDescriptor(),
        }, assigner);
    internal_static_SReqAttack_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_SReqAttack_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_SReqAttack_descriptor,
        new java.lang.String[] { "Caster", "Attacker", "Serial", });
    internal_static_SReqSkillUse_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_SReqSkillUse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_SReqSkillUse_descriptor,
        new java.lang.String[] { "Caster", "Attacker", });
    com.ninelook.wecard.protocol.beans.BeanSceneMessage.getDescriptor();
    com.ninelook.wecard.protocol.beans.BeanHomeMessage.getDescriptor();
    com.ninelook.wecard.protocol.beans.BeanHeroMessage.getDescriptor();
    com.ninelook.wecard.protocol.beans.BeanEntityMessage.getDescriptor();
    com.ninelook.wecard.protocol.beans.BeanFightMessage.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}

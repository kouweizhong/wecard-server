// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: beans/BeanFightMessage.proto

package com.ninelook.wecard.protocol.beans;

public final class BeanFightMessage {
  private BeanFightMessage() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface FighterInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:FighterInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int32 eid = 1;</code>
     *
     * <pre>
     *防御者eid
     * </pre>
     */
    boolean hasEid();
    /**
     * <code>required int32 eid = 1;</code>
     *
     * <pre>
     *防御者eid
     * </pre>
     */
    int getEid();
  }
  /**
   * Protobuf type {@code FighterInfo}
   *
   * <pre>
   *参战者信息
   * </pre>
   */
  public static final class FighterInfo extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:FighterInfo)
      FighterInfoOrBuilder {
    // Use FighterInfo.newBuilder() to construct.
    private FighterInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private FighterInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final FighterInfo defaultInstance;
    public static FighterInfo getDefaultInstance() {
      return defaultInstance;
    }

    public FighterInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private FighterInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              eid_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.ninelook.wecard.protocol.beans.BeanFightMessage.internal_static_FighterInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.ninelook.wecard.protocol.beans.BeanFightMessage.internal_static_FighterInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfo.class, com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<FighterInfo> PARSER =
        new com.google.protobuf.AbstractParser<FighterInfo>() {
      public FighterInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FighterInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<FighterInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int EID_FIELD_NUMBER = 1;
    private int eid_;
    /**
     * <code>required int32 eid = 1;</code>
     *
     * <pre>
     *防御者eid
     * </pre>
     */
    public boolean hasEid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 eid = 1;</code>
     *
     * <pre>
     *防御者eid
     * </pre>
     */
    public int getEid() {
      return eid_;
    }

    private void initFields() {
      eid_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasEid()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, eid_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, eid_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code FighterInfo}
     *
     * <pre>
     *参战者信息
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:FighterInfo)
        com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.ninelook.wecard.protocol.beans.BeanFightMessage.internal_static_FighterInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.ninelook.wecard.protocol.beans.BeanFightMessage.internal_static_FighterInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfo.class, com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfo.Builder.class);
      }

      // Construct using com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        eid_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.ninelook.wecard.protocol.beans.BeanFightMessage.internal_static_FighterInfo_descriptor;
      }

      public com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfo getDefaultInstanceForType() {
        return com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfo.getDefaultInstance();
      }

      public com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfo build() {
        com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfo buildPartial() {
        com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfo result = new com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.eid_ = eid_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfo) {
          return mergeFrom((com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfo other) {
        if (other == com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfo.getDefaultInstance()) return this;
        if (other.hasEid()) {
          setEid(other.getEid());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasEid()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ninelook.wecard.protocol.beans.BeanFightMessage.FighterInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int eid_ ;
      /**
       * <code>required int32 eid = 1;</code>
       *
       * <pre>
       *防御者eid
       * </pre>
       */
      public boolean hasEid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 eid = 1;</code>
       *
       * <pre>
       *防御者eid
       * </pre>
       */
      public int getEid() {
        return eid_;
      }
      /**
       * <code>required int32 eid = 1;</code>
       *
       * <pre>
       *防御者eid
       * </pre>
       */
      public Builder setEid(int value) {
        bitField0_ |= 0x00000001;
        eid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 eid = 1;</code>
       *
       * <pre>
       *防御者eid
       * </pre>
       */
      public Builder clearEid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        eid_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:FighterInfo)
    }

    static {
      defaultInstance = new FighterInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:FighterInfo)
  }

  public interface AttackFeatureInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:AttackFeatureInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int32 attackNum = 1;</code>
     *
     * <pre>
     *攻击力
     * </pre>
     */
    boolean hasAttackNum();
    /**
     * <code>required int32 attackNum = 1;</code>
     *
     * <pre>
     *攻击力
     * </pre>
     */
    int getAttackNum();

    /**
     * <code>repeated int32 effect = 2;</code>
     *
     * <pre>
     *攻击效果(1:暴击, 2:?)
     * </pre>
     */
    java.util.List<java.lang.Integer> getEffectList();
    /**
     * <code>repeated int32 effect = 2;</code>
     *
     * <pre>
     *攻击效果(1:暴击, 2:?)
     * </pre>
     */
    int getEffectCount();
    /**
     * <code>repeated int32 effect = 2;</code>
     *
     * <pre>
     *攻击效果(1:暴击, 2:?)
     * </pre>
     */
    int getEffect(int index);
  }
  /**
   * Protobuf type {@code AttackFeatureInfo}
   *
   * <pre>
   *攻击方攻击特征信息
   * </pre>
   */
  public static final class AttackFeatureInfo extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:AttackFeatureInfo)
      AttackFeatureInfoOrBuilder {
    // Use AttackFeatureInfo.newBuilder() to construct.
    private AttackFeatureInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private AttackFeatureInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final AttackFeatureInfo defaultInstance;
    public static AttackFeatureInfo getDefaultInstance() {
      return defaultInstance;
    }

    public AttackFeatureInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private AttackFeatureInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              attackNum_ = input.readInt32();
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                effect_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              effect_.add(input.readInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                effect_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                effect_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          effect_ = java.util.Collections.unmodifiableList(effect_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.ninelook.wecard.protocol.beans.BeanFightMessage.internal_static_AttackFeatureInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.ninelook.wecard.protocol.beans.BeanFightMessage.internal_static_AttackFeatureInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.ninelook.wecard.protocol.beans.BeanFightMessage.AttackFeatureInfo.class, com.ninelook.wecard.protocol.beans.BeanFightMessage.AttackFeatureInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<AttackFeatureInfo> PARSER =
        new com.google.protobuf.AbstractParser<AttackFeatureInfo>() {
      public AttackFeatureInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new AttackFeatureInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<AttackFeatureInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int ATTACKNUM_FIELD_NUMBER = 1;
    private int attackNum_;
    /**
     * <code>required int32 attackNum = 1;</code>
     *
     * <pre>
     *攻击力
     * </pre>
     */
    public boolean hasAttackNum() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 attackNum = 1;</code>
     *
     * <pre>
     *攻击力
     * </pre>
     */
    public int getAttackNum() {
      return attackNum_;
    }

    public static final int EFFECT_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Integer> effect_;
    /**
     * <code>repeated int32 effect = 2;</code>
     *
     * <pre>
     *攻击效果(1:暴击, 2:?)
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getEffectList() {
      return effect_;
    }
    /**
     * <code>repeated int32 effect = 2;</code>
     *
     * <pre>
     *攻击效果(1:暴击, 2:?)
     * </pre>
     */
    public int getEffectCount() {
      return effect_.size();
    }
    /**
     * <code>repeated int32 effect = 2;</code>
     *
     * <pre>
     *攻击效果(1:暴击, 2:?)
     * </pre>
     */
    public int getEffect(int index) {
      return effect_.get(index);
    }

    private void initFields() {
      attackNum_ = 0;
      effect_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasAttackNum()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, attackNum_);
      }
      for (int i = 0; i < effect_.size(); i++) {
        output.writeInt32(2, effect_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, attackNum_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < effect_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(effect_.get(i));
        }
        size += dataSize;
        size += 1 * getEffectList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ninelook.wecard.protocol.beans.BeanFightMessage.AttackFeatureInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ninelook.wecard.protocol.beans.BeanFightMessage.AttackFeatureInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ninelook.wecard.protocol.beans.BeanFightMessage.AttackFeatureInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ninelook.wecard.protocol.beans.BeanFightMessage.AttackFeatureInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ninelook.wecard.protocol.beans.BeanFightMessage.AttackFeatureInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ninelook.wecard.protocol.beans.BeanFightMessage.AttackFeatureInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ninelook.wecard.protocol.beans.BeanFightMessage.AttackFeatureInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ninelook.wecard.protocol.beans.BeanFightMessage.AttackFeatureInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ninelook.wecard.protocol.beans.BeanFightMessage.AttackFeatureInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ninelook.wecard.protocol.beans.BeanFightMessage.AttackFeatureInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ninelook.wecard.protocol.beans.BeanFightMessage.AttackFeatureInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code AttackFeatureInfo}
     *
     * <pre>
     *攻击方攻击特征信息
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:AttackFeatureInfo)
        com.ninelook.wecard.protocol.beans.BeanFightMessage.AttackFeatureInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.ninelook.wecard.protocol.beans.BeanFightMessage.internal_static_AttackFeatureInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.ninelook.wecard.protocol.beans.BeanFightMessage.internal_static_AttackFeatureInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.ninelook.wecard.protocol.beans.BeanFightMessage.AttackFeatureInfo.class, com.ninelook.wecard.protocol.beans.BeanFightMessage.AttackFeatureInfo.Builder.class);
      }

      // Construct using com.ninelook.wecard.protocol.beans.BeanFightMessage.AttackFeatureInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        attackNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        effect_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.ninelook.wecard.protocol.beans.BeanFightMessage.internal_static_AttackFeatureInfo_descriptor;
      }

      public com.ninelook.wecard.protocol.beans.BeanFightMessage.AttackFeatureInfo getDefaultInstanceForType() {
        return com.ninelook.wecard.protocol.beans.BeanFightMessage.AttackFeatureInfo.getDefaultInstance();
      }

      public com.ninelook.wecard.protocol.beans.BeanFightMessage.AttackFeatureInfo build() {
        com.ninelook.wecard.protocol.beans.BeanFightMessage.AttackFeatureInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ninelook.wecard.protocol.beans.BeanFightMessage.AttackFeatureInfo buildPartial() {
        com.ninelook.wecard.protocol.beans.BeanFightMessage.AttackFeatureInfo result = new com.ninelook.wecard.protocol.beans.BeanFightMessage.AttackFeatureInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.attackNum_ = attackNum_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          effect_ = java.util.Collections.unmodifiableList(effect_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.effect_ = effect_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.ninelook.wecard.protocol.beans.BeanFightMessage.AttackFeatureInfo) {
          return mergeFrom((com.ninelook.wecard.protocol.beans.BeanFightMessage.AttackFeatureInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.ninelook.wecard.protocol.beans.BeanFightMessage.AttackFeatureInfo other) {
        if (other == com.ninelook.wecard.protocol.beans.BeanFightMessage.AttackFeatureInfo.getDefaultInstance()) return this;
        if (other.hasAttackNum()) {
          setAttackNum(other.getAttackNum());
        }
        if (!other.effect_.isEmpty()) {
          if (effect_.isEmpty()) {
            effect_ = other.effect_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureEffectIsMutable();
            effect_.addAll(other.effect_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasAttackNum()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ninelook.wecard.protocol.beans.BeanFightMessage.AttackFeatureInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ninelook.wecard.protocol.beans.BeanFightMessage.AttackFeatureInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int attackNum_ ;
      /**
       * <code>required int32 attackNum = 1;</code>
       *
       * <pre>
       *攻击力
       * </pre>
       */
      public boolean hasAttackNum() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 attackNum = 1;</code>
       *
       * <pre>
       *攻击力
       * </pre>
       */
      public int getAttackNum() {
        return attackNum_;
      }
      /**
       * <code>required int32 attackNum = 1;</code>
       *
       * <pre>
       *攻击力
       * </pre>
       */
      public Builder setAttackNum(int value) {
        bitField0_ |= 0x00000001;
        attackNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 attackNum = 1;</code>
       *
       * <pre>
       *攻击力
       * </pre>
       */
      public Builder clearAttackNum() {
        bitField0_ = (bitField0_ & ~0x00000001);
        attackNum_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> effect_ = java.util.Collections.emptyList();
      private void ensureEffectIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          effect_ = new java.util.ArrayList<java.lang.Integer>(effect_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated int32 effect = 2;</code>
       *
       * <pre>
       *攻击效果(1:暴击, 2:?)
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getEffectList() {
        return java.util.Collections.unmodifiableList(effect_);
      }
      /**
       * <code>repeated int32 effect = 2;</code>
       *
       * <pre>
       *攻击效果(1:暴击, 2:?)
       * </pre>
       */
      public int getEffectCount() {
        return effect_.size();
      }
      /**
       * <code>repeated int32 effect = 2;</code>
       *
       * <pre>
       *攻击效果(1:暴击, 2:?)
       * </pre>
       */
      public int getEffect(int index) {
        return effect_.get(index);
      }
      /**
       * <code>repeated int32 effect = 2;</code>
       *
       * <pre>
       *攻击效果(1:暴击, 2:?)
       * </pre>
       */
      public Builder setEffect(
          int index, int value) {
        ensureEffectIsMutable();
        effect_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 effect = 2;</code>
       *
       * <pre>
       *攻击效果(1:暴击, 2:?)
       * </pre>
       */
      public Builder addEffect(int value) {
        ensureEffectIsMutable();
        effect_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 effect = 2;</code>
       *
       * <pre>
       *攻击效果(1:暴击, 2:?)
       * </pre>
       */
      public Builder addAllEffect(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureEffectIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, effect_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 effect = 2;</code>
       *
       * <pre>
       *攻击效果(1:暴击, 2:?)
       * </pre>
       */
      public Builder clearEffect() {
        effect_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:AttackFeatureInfo)
    }

    static {
      defaultInstance = new AttackFeatureInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:AttackFeatureInfo)
  }

  public interface DefenceFeatureInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:DefenceFeatureInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int32 eid = 1;</code>
     *
     * <pre>
     *eid
     * </pre>
     */
    boolean hasEid();
    /**
     * <code>optional int32 eid = 1;</code>
     *
     * <pre>
     *eid
     * </pre>
     */
    int getEid();

    /**
     * <code>required int32 lossNum = 2;</code>
     *
     * <pre>
     *损失血量
     * </pre>
     */
    boolean hasLossNum();
    /**
     * <code>required int32 lossNum = 2;</code>
     *
     * <pre>
     *损失血量
     * </pre>
     */
    int getLossNum();

    /**
     * <code>optional int32 currentBloodNum = 3;</code>
     *
     * <pre>
     *剩余血量
     * </pre>
     */
    boolean hasCurrentBloodNum();
    /**
     * <code>optional int32 currentBloodNum = 3;</code>
     *
     * <pre>
     *剩余血量
     * </pre>
     */
    int getCurrentBloodNum();

    /**
     * <code>repeated int32 effect = 4;</code>
     *
     * <pre>
     *防御效果(1:躲避, 2:?)
     * </pre>
     */
    java.util.List<java.lang.Integer> getEffectList();
    /**
     * <code>repeated int32 effect = 4;</code>
     *
     * <pre>
     *防御效果(1:躲避, 2:?)
     * </pre>
     */
    int getEffectCount();
    /**
     * <code>repeated int32 effect = 4;</code>
     *
     * <pre>
     *防御效果(1:躲避, 2:?)
     * </pre>
     */
    int getEffect(int index);
  }
  /**
   * Protobuf type {@code DefenceFeatureInfo}
   *
   * <pre>
   *防御方防御特征信息
   * </pre>
   */
  public static final class DefenceFeatureInfo extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:DefenceFeatureInfo)
      DefenceFeatureInfoOrBuilder {
    // Use DefenceFeatureInfo.newBuilder() to construct.
    private DefenceFeatureInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DefenceFeatureInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DefenceFeatureInfo defaultInstance;
    public static DefenceFeatureInfo getDefaultInstance() {
      return defaultInstance;
    }

    public DefenceFeatureInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private DefenceFeatureInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              eid_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              lossNum_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              currentBloodNum_ = input.readInt32();
              break;
            }
            case 32: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                effect_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              effect_.add(input.readInt32());
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008) && input.getBytesUntilLimit() > 0) {
                effect_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              while (input.getBytesUntilLimit() > 0) {
                effect_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          effect_ = java.util.Collections.unmodifiableList(effect_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.ninelook.wecard.protocol.beans.BeanFightMessage.internal_static_DefenceFeatureInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.ninelook.wecard.protocol.beans.BeanFightMessage.internal_static_DefenceFeatureInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.ninelook.wecard.protocol.beans.BeanFightMessage.DefenceFeatureInfo.class, com.ninelook.wecard.protocol.beans.BeanFightMessage.DefenceFeatureInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<DefenceFeatureInfo> PARSER =
        new com.google.protobuf.AbstractParser<DefenceFeatureInfo>() {
      public DefenceFeatureInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DefenceFeatureInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DefenceFeatureInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int EID_FIELD_NUMBER = 1;
    private int eid_;
    /**
     * <code>optional int32 eid = 1;</code>
     *
     * <pre>
     *eid
     * </pre>
     */
    public boolean hasEid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 eid = 1;</code>
     *
     * <pre>
     *eid
     * </pre>
     */
    public int getEid() {
      return eid_;
    }

    public static final int LOSSNUM_FIELD_NUMBER = 2;
    private int lossNum_;
    /**
     * <code>required int32 lossNum = 2;</code>
     *
     * <pre>
     *损失血量
     * </pre>
     */
    public boolean hasLossNum() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 lossNum = 2;</code>
     *
     * <pre>
     *损失血量
     * </pre>
     */
    public int getLossNum() {
      return lossNum_;
    }

    public static final int CURRENTBLOODNUM_FIELD_NUMBER = 3;
    private int currentBloodNum_;
    /**
     * <code>optional int32 currentBloodNum = 3;</code>
     *
     * <pre>
     *剩余血量
     * </pre>
     */
    public boolean hasCurrentBloodNum() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 currentBloodNum = 3;</code>
     *
     * <pre>
     *剩余血量
     * </pre>
     */
    public int getCurrentBloodNum() {
      return currentBloodNum_;
    }

    public static final int EFFECT_FIELD_NUMBER = 4;
    private java.util.List<java.lang.Integer> effect_;
    /**
     * <code>repeated int32 effect = 4;</code>
     *
     * <pre>
     *防御效果(1:躲避, 2:?)
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getEffectList() {
      return effect_;
    }
    /**
     * <code>repeated int32 effect = 4;</code>
     *
     * <pre>
     *防御效果(1:躲避, 2:?)
     * </pre>
     */
    public int getEffectCount() {
      return effect_.size();
    }
    /**
     * <code>repeated int32 effect = 4;</code>
     *
     * <pre>
     *防御效果(1:躲避, 2:?)
     * </pre>
     */
    public int getEffect(int index) {
      return effect_.get(index);
    }

    private void initFields() {
      eid_ = 0;
      lossNum_ = 0;
      currentBloodNum_ = 0;
      effect_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasLossNum()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, eid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, lossNum_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, currentBloodNum_);
      }
      for (int i = 0; i < effect_.size(); i++) {
        output.writeInt32(4, effect_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, eid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, lossNum_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, currentBloodNum_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < effect_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(effect_.get(i));
        }
        size += dataSize;
        size += 1 * getEffectList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ninelook.wecard.protocol.beans.BeanFightMessage.DefenceFeatureInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ninelook.wecard.protocol.beans.BeanFightMessage.DefenceFeatureInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ninelook.wecard.protocol.beans.BeanFightMessage.DefenceFeatureInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ninelook.wecard.protocol.beans.BeanFightMessage.DefenceFeatureInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ninelook.wecard.protocol.beans.BeanFightMessage.DefenceFeatureInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ninelook.wecard.protocol.beans.BeanFightMessage.DefenceFeatureInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ninelook.wecard.protocol.beans.BeanFightMessage.DefenceFeatureInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ninelook.wecard.protocol.beans.BeanFightMessage.DefenceFeatureInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ninelook.wecard.protocol.beans.BeanFightMessage.DefenceFeatureInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ninelook.wecard.protocol.beans.BeanFightMessage.DefenceFeatureInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ninelook.wecard.protocol.beans.BeanFightMessage.DefenceFeatureInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code DefenceFeatureInfo}
     *
     * <pre>
     *防御方防御特征信息
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:DefenceFeatureInfo)
        com.ninelook.wecard.protocol.beans.BeanFightMessage.DefenceFeatureInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.ninelook.wecard.protocol.beans.BeanFightMessage.internal_static_DefenceFeatureInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.ninelook.wecard.protocol.beans.BeanFightMessage.internal_static_DefenceFeatureInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.ninelook.wecard.protocol.beans.BeanFightMessage.DefenceFeatureInfo.class, com.ninelook.wecard.protocol.beans.BeanFightMessage.DefenceFeatureInfo.Builder.class);
      }

      // Construct using com.ninelook.wecard.protocol.beans.BeanFightMessage.DefenceFeatureInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        eid_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        lossNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        currentBloodNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        effect_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.ninelook.wecard.protocol.beans.BeanFightMessage.internal_static_DefenceFeatureInfo_descriptor;
      }

      public com.ninelook.wecard.protocol.beans.BeanFightMessage.DefenceFeatureInfo getDefaultInstanceForType() {
        return com.ninelook.wecard.protocol.beans.BeanFightMessage.DefenceFeatureInfo.getDefaultInstance();
      }

      public com.ninelook.wecard.protocol.beans.BeanFightMessage.DefenceFeatureInfo build() {
        com.ninelook.wecard.protocol.beans.BeanFightMessage.DefenceFeatureInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ninelook.wecard.protocol.beans.BeanFightMessage.DefenceFeatureInfo buildPartial() {
        com.ninelook.wecard.protocol.beans.BeanFightMessage.DefenceFeatureInfo result = new com.ninelook.wecard.protocol.beans.BeanFightMessage.DefenceFeatureInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.eid_ = eid_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.lossNum_ = lossNum_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.currentBloodNum_ = currentBloodNum_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          effect_ = java.util.Collections.unmodifiableList(effect_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.effect_ = effect_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.ninelook.wecard.protocol.beans.BeanFightMessage.DefenceFeatureInfo) {
          return mergeFrom((com.ninelook.wecard.protocol.beans.BeanFightMessage.DefenceFeatureInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.ninelook.wecard.protocol.beans.BeanFightMessage.DefenceFeatureInfo other) {
        if (other == com.ninelook.wecard.protocol.beans.BeanFightMessage.DefenceFeatureInfo.getDefaultInstance()) return this;
        if (other.hasEid()) {
          setEid(other.getEid());
        }
        if (other.hasLossNum()) {
          setLossNum(other.getLossNum());
        }
        if (other.hasCurrentBloodNum()) {
          setCurrentBloodNum(other.getCurrentBloodNum());
        }
        if (!other.effect_.isEmpty()) {
          if (effect_.isEmpty()) {
            effect_ = other.effect_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureEffectIsMutable();
            effect_.addAll(other.effect_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasLossNum()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ninelook.wecard.protocol.beans.BeanFightMessage.DefenceFeatureInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ninelook.wecard.protocol.beans.BeanFightMessage.DefenceFeatureInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int eid_ ;
      /**
       * <code>optional int32 eid = 1;</code>
       *
       * <pre>
       *eid
       * </pre>
       */
      public boolean hasEid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 eid = 1;</code>
       *
       * <pre>
       *eid
       * </pre>
       */
      public int getEid() {
        return eid_;
      }
      /**
       * <code>optional int32 eid = 1;</code>
       *
       * <pre>
       *eid
       * </pre>
       */
      public Builder setEid(int value) {
        bitField0_ |= 0x00000001;
        eid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 eid = 1;</code>
       *
       * <pre>
       *eid
       * </pre>
       */
      public Builder clearEid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        eid_ = 0;
        onChanged();
        return this;
      }

      private int lossNum_ ;
      /**
       * <code>required int32 lossNum = 2;</code>
       *
       * <pre>
       *损失血量
       * </pre>
       */
      public boolean hasLossNum() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 lossNum = 2;</code>
       *
       * <pre>
       *损失血量
       * </pre>
       */
      public int getLossNum() {
        return lossNum_;
      }
      /**
       * <code>required int32 lossNum = 2;</code>
       *
       * <pre>
       *损失血量
       * </pre>
       */
      public Builder setLossNum(int value) {
        bitField0_ |= 0x00000002;
        lossNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 lossNum = 2;</code>
       *
       * <pre>
       *损失血量
       * </pre>
       */
      public Builder clearLossNum() {
        bitField0_ = (bitField0_ & ~0x00000002);
        lossNum_ = 0;
        onChanged();
        return this;
      }

      private int currentBloodNum_ ;
      /**
       * <code>optional int32 currentBloodNum = 3;</code>
       *
       * <pre>
       *剩余血量
       * </pre>
       */
      public boolean hasCurrentBloodNum() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 currentBloodNum = 3;</code>
       *
       * <pre>
       *剩余血量
       * </pre>
       */
      public int getCurrentBloodNum() {
        return currentBloodNum_;
      }
      /**
       * <code>optional int32 currentBloodNum = 3;</code>
       *
       * <pre>
       *剩余血量
       * </pre>
       */
      public Builder setCurrentBloodNum(int value) {
        bitField0_ |= 0x00000004;
        currentBloodNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 currentBloodNum = 3;</code>
       *
       * <pre>
       *剩余血量
       * </pre>
       */
      public Builder clearCurrentBloodNum() {
        bitField0_ = (bitField0_ & ~0x00000004);
        currentBloodNum_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> effect_ = java.util.Collections.emptyList();
      private void ensureEffectIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          effect_ = new java.util.ArrayList<java.lang.Integer>(effect_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated int32 effect = 4;</code>
       *
       * <pre>
       *防御效果(1:躲避, 2:?)
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getEffectList() {
        return java.util.Collections.unmodifiableList(effect_);
      }
      /**
       * <code>repeated int32 effect = 4;</code>
       *
       * <pre>
       *防御效果(1:躲避, 2:?)
       * </pre>
       */
      public int getEffectCount() {
        return effect_.size();
      }
      /**
       * <code>repeated int32 effect = 4;</code>
       *
       * <pre>
       *防御效果(1:躲避, 2:?)
       * </pre>
       */
      public int getEffect(int index) {
        return effect_.get(index);
      }
      /**
       * <code>repeated int32 effect = 4;</code>
       *
       * <pre>
       *防御效果(1:躲避, 2:?)
       * </pre>
       */
      public Builder setEffect(
          int index, int value) {
        ensureEffectIsMutable();
        effect_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 effect = 4;</code>
       *
       * <pre>
       *防御效果(1:躲避, 2:?)
       * </pre>
       */
      public Builder addEffect(int value) {
        ensureEffectIsMutable();
        effect_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 effect = 4;</code>
       *
       * <pre>
       *防御效果(1:躲避, 2:?)
       * </pre>
       */
      public Builder addAllEffect(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureEffectIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, effect_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 effect = 4;</code>
       *
       * <pre>
       *防御效果(1:躲避, 2:?)
       * </pre>
       */
      public Builder clearEffect() {
        effect_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:DefenceFeatureInfo)
    }

    static {
      defaultInstance = new DefenceFeatureInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:DefenceFeatureInfo)
  }

  public interface FightSerialInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:FightSerialInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int32 serial = 1;</code>
     *
     * <pre>
     *攻击序列
     * </pre>
     */
    boolean hasSerial();
    /**
     * <code>required int32 serial = 1;</code>
     *
     * <pre>
     *攻击序列
     * </pre>
     */
    int getSerial();

    /**
     * <code>required .AttackFeatureInfo attackFeatureInfo = 2;</code>
     *
     * <pre>
     *攻击方特征信息
     * </pre>
     */
    boolean hasAttackFeatureInfo();
    /**
     * <code>required .AttackFeatureInfo attackFeatureInfo = 2;</code>
     *
     * <pre>
     *攻击方特征信息
     * </pre>
     */
    com.ninelook.wecard.protocol.beans.BeanFightMessage.AttackFeatureInfo getAttackFeatureInfo();
    /**
     * <code>required .AttackFeatureInfo attackFeatureInfo = 2;</code>
     *
     * <pre>
     *攻击方特征信息
     * </pre>
     */
    com.ninelook.wecard.protocol.beans.BeanFightMessage.AttackFeatureInfoOrBuilder getAttackFeatureInfoOrBuilder();

    /**
     * <code>repeated .DefenceFeatureInfo defenceFeatureInfo = 3;</code>
     *
     * <pre>
     *防守方特征信息
     * </pre>
     */
    java.util.List<com.ninelook.wecard.protocol.beans.BeanFightMessage.DefenceFeatureInfo> 
        getDefenceFeatureInfoList();
    /**
     * <code>repeated .DefenceFeatureInfo defenceFeatureInfo = 3;</code>
     *
     * <pre>
     *防守方特征信息
     * </pre>
     */
    com.ninelook.wecard.protocol.beans.BeanFightMessage.DefenceFeatureInfo getDefenceFeatureInfo(int index);
    /**
     * <code>repeated .DefenceFeatureInfo defenceFeatureInfo = 3;</code>
     *
     * <pre>
     *防守方特征信息
     * </pre>
     */
    int getDefenceFeatureInfoCount();
    /**
     * <code>repeated .DefenceFeatureInfo defenceFeatureInfo = 3;</code>
     *
     * <pre>
     *防守方特征信息
     * </pre>
     */
    java.util.List<? extends com.ninelook.wecard.protocol.beans.BeanFightMessage.DefenceFeatureInfoOrBuilder> 
        getDefenceFeatureInfoOrBuilderList();
    /**
     * <code>repeated .DefenceFeatureInfo defenceFeatureInfo = 3;</code>
     *
     * <pre>
     *防守方特征信息
     * </pre>
     */
    com.ninelook.wecard.protocol.beans.BeanFightMessage.DefenceFeatureInfoOrBuilder getDefenceFeatureInfoOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code FightSerialInfo}
   *
   * <pre>
   *每一次序列攻击攻防双方信息, 防守方为多人.
   * </pre>
   */
  public static final class FightSerialInfo extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:FightSerialInfo)
      FightSerialInfoOrBuilder {
    // Use FightSerialInfo.newBuilder() to construct.
    private FightSerialInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private FightSerialInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final FightSerialInfo defaultInstance;
    public static FightSerialInfo getDefaultInstance() {
      return defaultInstance;
    }

    public FightSerialInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private FightSerialInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              serial_ = input.readInt32();
              break;
            }
            case 18: {
              com.ninelook.wecard.protocol.beans.BeanFightMessage.AttackFeatureInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = attackFeatureInfo_.toBuilder();
              }
              attackFeatureInfo_ = input.readMessage(com.ninelook.wecard.protocol.beans.BeanFightMessage.AttackFeatureInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(attackFeatureInfo_);
                attackFeatureInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                defenceFeatureInfo_ = new java.util.ArrayList<com.ninelook.wecard.protocol.beans.BeanFightMessage.DefenceFeatureInfo>();
                mutable_bitField0_ |= 0x00000004;
              }
              defenceFeatureInfo_.add(input.readMessage(com.ninelook.wecard.protocol.beans.BeanFightMessage.DefenceFeatureInfo.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          defenceFeatureInfo_ = java.util.Collections.unmodifiableList(defenceFeatureInfo_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.ninelook.wecard.protocol.beans.BeanFightMessage.internal_static_FightSerialInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.ninelook.wecard.protocol.beans.BeanFightMessage.internal_static_FightSerialInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.ninelook.wecard.protocol.beans.BeanFightMessage.FightSerialInfo.class, com.ninelook.wecard.protocol.beans.BeanFightMessage.FightSerialInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<FightSerialInfo> PARSER =
        new com.google.protobuf.AbstractParser<FightSerialInfo>() {
      public FightSerialInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FightSerialInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<FightSerialInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int SERIAL_FIELD_NUMBER = 1;
    private int serial_;
    /**
     * <code>required int32 serial = 1;</code>
     *
     * <pre>
     *攻击序列
     * </pre>
     */
    public boolean hasSerial() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 serial = 1;</code>
     *
     * <pre>
     *攻击序列
     * </pre>
     */
    public int getSerial() {
      return serial_;
    }

    public static final int ATTACKFEATUREINFO_FIELD_NUMBER = 2;
    private com.ninelook.wecard.protocol.beans.BeanFightMessage.AttackFeatureInfo attackFeatureInfo_;
    /**
     * <code>required .AttackFeatureInfo attackFeatureInfo = 2;</code>
     *
     * <pre>
     *攻击方特征信息
     * </pre>
     */
    public boolean hasAttackFeatureInfo() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .AttackFeatureInfo attackFeatureInfo = 2;</code>
     *
     * <pre>
     *攻击方特征信息
     * </pre>
     */
    public com.ninelook.wecard.protocol.beans.BeanFightMessage.AttackFeatureInfo getAttackFeatureInfo() {
      return attackFeatureInfo_;
    }
    /**
     * <code>required .AttackFeatureInfo attackFeatureInfo = 2;</code>
     *
     * <pre>
     *攻击方特征信息
     * </pre>
     */
    public com.ninelook.wecard.protocol.beans.BeanFightMessage.AttackFeatureInfoOrBuilder getAttackFeatureInfoOrBuilder() {
      return attackFeatureInfo_;
    }

    public static final int DEFENCEFEATUREINFO_FIELD_NUMBER = 3;
    private java.util.List<com.ninelook.wecard.protocol.beans.BeanFightMessage.DefenceFeatureInfo> defenceFeatureInfo_;
    /**
     * <code>repeated .DefenceFeatureInfo defenceFeatureInfo = 3;</code>
     *
     * <pre>
     *防守方特征信息
     * </pre>
     */
    public java.util.List<com.ninelook.wecard.protocol.beans.BeanFightMessage.DefenceFeatureInfo> getDefenceFeatureInfoList() {
      return defenceFeatureInfo_;
    }
    /**
     * <code>repeated .DefenceFeatureInfo defenceFeatureInfo = 3;</code>
     *
     * <pre>
     *防守方特征信息
     * </pre>
     */
    public java.util.List<? extends com.ninelook.wecard.protocol.beans.BeanFightMessage.DefenceFeatureInfoOrBuilder> 
        getDefenceFeatureInfoOrBuilderList() {
      return defenceFeatureInfo_;
    }
    /**
     * <code>repeated .DefenceFeatureInfo defenceFeatureInfo = 3;</code>
     *
     * <pre>
     *防守方特征信息
     * </pre>
     */
    public int getDefenceFeatureInfoCount() {
      return defenceFeatureInfo_.size();
    }
    /**
     * <code>repeated .DefenceFeatureInfo defenceFeatureInfo = 3;</code>
     *
     * <pre>
     *防守方特征信息
     * </pre>
     */
    public com.ninelook.wecard.protocol.beans.BeanFightMessage.DefenceFeatureInfo getDefenceFeatureInfo(int index) {
      return defenceFeatureInfo_.get(index);
    }
    /**
     * <code>repeated .DefenceFeatureInfo defenceFeatureInfo = 3;</code>
     *
     * <pre>
     *防守方特征信息
     * </pre>
     */
    public com.ninelook.wecard.protocol.beans.BeanFightMessage.DefenceFeatureInfoOrBuilder getDefenceFeatureInfoOrBuilder(
        int index) {
      return defenceFeatureInfo_.get(index);
    }

    private void initFields() {
      serial_ = 0;
      attackFeatureInfo_ = com.ninelook.wecard.protocol.beans.BeanFightMessage.AttackFeatureInfo.getDefaultInstance();
      defenceFeatureInfo_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasSerial()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAttackFeatureInfo()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getAttackFeatureInfo().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getDefenceFeatureInfoCount(); i++) {
        if (!getDefenceFeatureInfo(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, serial_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, attackFeatureInfo_);
      }
      for (int i = 0; i < defenceFeatureInfo_.size(); i++) {
        output.writeMessage(3, defenceFeatureInfo_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, serial_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, attackFeatureInfo_);
      }
      for (int i = 0; i < defenceFeatureInfo_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, defenceFeatureInfo_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ninelook.wecard.protocol.beans.BeanFightMessage.FightSerialInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ninelook.wecard.protocol.beans.BeanFightMessage.FightSerialInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ninelook.wecard.protocol.beans.BeanFightMessage.FightSerialInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ninelook.wecard.protocol.beans.BeanFightMessage.FightSerialInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ninelook.wecard.protocol.beans.BeanFightMessage.FightSerialInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ninelook.wecard.protocol.beans.BeanFightMessage.FightSerialInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ninelook.wecard.protocol.beans.BeanFightMessage.FightSerialInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ninelook.wecard.protocol.beans.BeanFightMessage.FightSerialInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ninelook.wecard.protocol.beans.BeanFightMessage.FightSerialInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ninelook.wecard.protocol.beans.BeanFightMessage.FightSerialInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ninelook.wecard.protocol.beans.BeanFightMessage.FightSerialInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code FightSerialInfo}
     *
     * <pre>
     *每一次序列攻击攻防双方信息, 防守方为多人.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:FightSerialInfo)
        com.ninelook.wecard.protocol.beans.BeanFightMessage.FightSerialInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.ninelook.wecard.protocol.beans.BeanFightMessage.internal_static_FightSerialInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.ninelook.wecard.protocol.beans.BeanFightMessage.internal_static_FightSerialInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.ninelook.wecard.protocol.beans.BeanFightMessage.FightSerialInfo.class, com.ninelook.wecard.protocol.beans.BeanFightMessage.FightSerialInfo.Builder.class);
      }

      // Construct using com.ninelook.wecard.protocol.beans.BeanFightMessage.FightSerialInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getAttackFeatureInfoFieldBuilder();
          getDefenceFeatureInfoFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        serial_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (attackFeatureInfoBuilder_ == null) {
          attackFeatureInfo_ = com.ninelook.wecard.protocol.beans.BeanFightMessage.AttackFeatureInfo.getDefaultInstance();
        } else {
          attackFeatureInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (defenceFeatureInfoBuilder_ == null) {
          defenceFeatureInfo_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          defenceFeatureInfoBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.ninelook.wecard.protocol.beans.BeanFightMessage.internal_static_FightSerialInfo_descriptor;
      }

      public com.ninelook.wecard.protocol.beans.BeanFightMessage.FightSerialInfo getDefaultInstanceForType() {
        return com.ninelook.wecard.protocol.beans.BeanFightMessage.FightSerialInfo.getDefaultInstance();
      }

      public com.ninelook.wecard.protocol.beans.BeanFightMessage.FightSerialInfo build() {
        com.ninelook.wecard.protocol.beans.BeanFightMessage.FightSerialInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ninelook.wecard.protocol.beans.BeanFightMessage.FightSerialInfo buildPartial() {
        com.ninelook.wecard.protocol.beans.BeanFightMessage.FightSerialInfo result = new com.ninelook.wecard.protocol.beans.BeanFightMessage.FightSerialInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.serial_ = serial_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (attackFeatureInfoBuilder_ == null) {
          result.attackFeatureInfo_ = attackFeatureInfo_;
        } else {
          result.attackFeatureInfo_ = attackFeatureInfoBuilder_.build();
        }
        if (defenceFeatureInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            defenceFeatureInfo_ = java.util.Collections.unmodifiableList(defenceFeatureInfo_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.defenceFeatureInfo_ = defenceFeatureInfo_;
        } else {
          result.defenceFeatureInfo_ = defenceFeatureInfoBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.ninelook.wecard.protocol.beans.BeanFightMessage.FightSerialInfo) {
          return mergeFrom((com.ninelook.wecard.protocol.beans.BeanFightMessage.FightSerialInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.ninelook.wecard.protocol.beans.BeanFightMessage.FightSerialInfo other) {
        if (other == com.ninelook.wecard.protocol.beans.BeanFightMessage.FightSerialInfo.getDefaultInstance()) return this;
        if (other.hasSerial()) {
          setSerial(other.getSerial());
        }
        if (other.hasAttackFeatureInfo()) {
          mergeAttackFeatureInfo(other.getAttackFeatureInfo());
        }
        if (defenceFeatureInfoBuilder_ == null) {
          if (!other.defenceFeatureInfo_.isEmpty()) {
            if (defenceFeatureInfo_.isEmpty()) {
              defenceFeatureInfo_ = other.defenceFeatureInfo_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureDefenceFeatureInfoIsMutable();
              defenceFeatureInfo_.addAll(other.defenceFeatureInfo_);
            }
            onChanged();
          }
        } else {
          if (!other.defenceFeatureInfo_.isEmpty()) {
            if (defenceFeatureInfoBuilder_.isEmpty()) {
              defenceFeatureInfoBuilder_.dispose();
              defenceFeatureInfoBuilder_ = null;
              defenceFeatureInfo_ = other.defenceFeatureInfo_;
              bitField0_ = (bitField0_ & ~0x00000004);
              defenceFeatureInfoBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getDefenceFeatureInfoFieldBuilder() : null;
            } else {
              defenceFeatureInfoBuilder_.addAllMessages(other.defenceFeatureInfo_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasSerial()) {
          
          return false;
        }
        if (!hasAttackFeatureInfo()) {
          
          return false;
        }
        if (!getAttackFeatureInfo().isInitialized()) {
          
          return false;
        }
        for (int i = 0; i < getDefenceFeatureInfoCount(); i++) {
          if (!getDefenceFeatureInfo(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ninelook.wecard.protocol.beans.BeanFightMessage.FightSerialInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ninelook.wecard.protocol.beans.BeanFightMessage.FightSerialInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int serial_ ;
      /**
       * <code>required int32 serial = 1;</code>
       *
       * <pre>
       *攻击序列
       * </pre>
       */
      public boolean hasSerial() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 serial = 1;</code>
       *
       * <pre>
       *攻击序列
       * </pre>
       */
      public int getSerial() {
        return serial_;
      }
      /**
       * <code>required int32 serial = 1;</code>
       *
       * <pre>
       *攻击序列
       * </pre>
       */
      public Builder setSerial(int value) {
        bitField0_ |= 0x00000001;
        serial_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 serial = 1;</code>
       *
       * <pre>
       *攻击序列
       * </pre>
       */
      public Builder clearSerial() {
        bitField0_ = (bitField0_ & ~0x00000001);
        serial_ = 0;
        onChanged();
        return this;
      }

      private com.ninelook.wecard.protocol.beans.BeanFightMessage.AttackFeatureInfo attackFeatureInfo_ = com.ninelook.wecard.protocol.beans.BeanFightMessage.AttackFeatureInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.ninelook.wecard.protocol.beans.BeanFightMessage.AttackFeatureInfo, com.ninelook.wecard.protocol.beans.BeanFightMessage.AttackFeatureInfo.Builder, com.ninelook.wecard.protocol.beans.BeanFightMessage.AttackFeatureInfoOrBuilder> attackFeatureInfoBuilder_;
      /**
       * <code>required .AttackFeatureInfo attackFeatureInfo = 2;</code>
       *
       * <pre>
       *攻击方特征信息
       * </pre>
       */
      public boolean hasAttackFeatureInfo() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .AttackFeatureInfo attackFeatureInfo = 2;</code>
       *
       * <pre>
       *攻击方特征信息
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanFightMessage.AttackFeatureInfo getAttackFeatureInfo() {
        if (attackFeatureInfoBuilder_ == null) {
          return attackFeatureInfo_;
        } else {
          return attackFeatureInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>required .AttackFeatureInfo attackFeatureInfo = 2;</code>
       *
       * <pre>
       *攻击方特征信息
       * </pre>
       */
      public Builder setAttackFeatureInfo(com.ninelook.wecard.protocol.beans.BeanFightMessage.AttackFeatureInfo value) {
        if (attackFeatureInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          attackFeatureInfo_ = value;
          onChanged();
        } else {
          attackFeatureInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .AttackFeatureInfo attackFeatureInfo = 2;</code>
       *
       * <pre>
       *攻击方特征信息
       * </pre>
       */
      public Builder setAttackFeatureInfo(
          com.ninelook.wecard.protocol.beans.BeanFightMessage.AttackFeatureInfo.Builder builderForValue) {
        if (attackFeatureInfoBuilder_ == null) {
          attackFeatureInfo_ = builderForValue.build();
          onChanged();
        } else {
          attackFeatureInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .AttackFeatureInfo attackFeatureInfo = 2;</code>
       *
       * <pre>
       *攻击方特征信息
       * </pre>
       */
      public Builder mergeAttackFeatureInfo(com.ninelook.wecard.protocol.beans.BeanFightMessage.AttackFeatureInfo value) {
        if (attackFeatureInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              attackFeatureInfo_ != com.ninelook.wecard.protocol.beans.BeanFightMessage.AttackFeatureInfo.getDefaultInstance()) {
            attackFeatureInfo_ =
              com.ninelook.wecard.protocol.beans.BeanFightMessage.AttackFeatureInfo.newBuilder(attackFeatureInfo_).mergeFrom(value).buildPartial();
          } else {
            attackFeatureInfo_ = value;
          }
          onChanged();
        } else {
          attackFeatureInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .AttackFeatureInfo attackFeatureInfo = 2;</code>
       *
       * <pre>
       *攻击方特征信息
       * </pre>
       */
      public Builder clearAttackFeatureInfo() {
        if (attackFeatureInfoBuilder_ == null) {
          attackFeatureInfo_ = com.ninelook.wecard.protocol.beans.BeanFightMessage.AttackFeatureInfo.getDefaultInstance();
          onChanged();
        } else {
          attackFeatureInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>required .AttackFeatureInfo attackFeatureInfo = 2;</code>
       *
       * <pre>
       *攻击方特征信息
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanFightMessage.AttackFeatureInfo.Builder getAttackFeatureInfoBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getAttackFeatureInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>required .AttackFeatureInfo attackFeatureInfo = 2;</code>
       *
       * <pre>
       *攻击方特征信息
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanFightMessage.AttackFeatureInfoOrBuilder getAttackFeatureInfoOrBuilder() {
        if (attackFeatureInfoBuilder_ != null) {
          return attackFeatureInfoBuilder_.getMessageOrBuilder();
        } else {
          return attackFeatureInfo_;
        }
      }
      /**
       * <code>required .AttackFeatureInfo attackFeatureInfo = 2;</code>
       *
       * <pre>
       *攻击方特征信息
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.ninelook.wecard.protocol.beans.BeanFightMessage.AttackFeatureInfo, com.ninelook.wecard.protocol.beans.BeanFightMessage.AttackFeatureInfo.Builder, com.ninelook.wecard.protocol.beans.BeanFightMessage.AttackFeatureInfoOrBuilder> 
          getAttackFeatureInfoFieldBuilder() {
        if (attackFeatureInfoBuilder_ == null) {
          attackFeatureInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.ninelook.wecard.protocol.beans.BeanFightMessage.AttackFeatureInfo, com.ninelook.wecard.protocol.beans.BeanFightMessage.AttackFeatureInfo.Builder, com.ninelook.wecard.protocol.beans.BeanFightMessage.AttackFeatureInfoOrBuilder>(
                  getAttackFeatureInfo(),
                  getParentForChildren(),
                  isClean());
          attackFeatureInfo_ = null;
        }
        return attackFeatureInfoBuilder_;
      }

      private java.util.List<com.ninelook.wecard.protocol.beans.BeanFightMessage.DefenceFeatureInfo> defenceFeatureInfo_ =
        java.util.Collections.emptyList();
      private void ensureDefenceFeatureInfoIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          defenceFeatureInfo_ = new java.util.ArrayList<com.ninelook.wecard.protocol.beans.BeanFightMessage.DefenceFeatureInfo>(defenceFeatureInfo_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.ninelook.wecard.protocol.beans.BeanFightMessage.DefenceFeatureInfo, com.ninelook.wecard.protocol.beans.BeanFightMessage.DefenceFeatureInfo.Builder, com.ninelook.wecard.protocol.beans.BeanFightMessage.DefenceFeatureInfoOrBuilder> defenceFeatureInfoBuilder_;

      /**
       * <code>repeated .DefenceFeatureInfo defenceFeatureInfo = 3;</code>
       *
       * <pre>
       *防守方特征信息
       * </pre>
       */
      public java.util.List<com.ninelook.wecard.protocol.beans.BeanFightMessage.DefenceFeatureInfo> getDefenceFeatureInfoList() {
        if (defenceFeatureInfoBuilder_ == null) {
          return java.util.Collections.unmodifiableList(defenceFeatureInfo_);
        } else {
          return defenceFeatureInfoBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .DefenceFeatureInfo defenceFeatureInfo = 3;</code>
       *
       * <pre>
       *防守方特征信息
       * </pre>
       */
      public int getDefenceFeatureInfoCount() {
        if (defenceFeatureInfoBuilder_ == null) {
          return defenceFeatureInfo_.size();
        } else {
          return defenceFeatureInfoBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .DefenceFeatureInfo defenceFeatureInfo = 3;</code>
       *
       * <pre>
       *防守方特征信息
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanFightMessage.DefenceFeatureInfo getDefenceFeatureInfo(int index) {
        if (defenceFeatureInfoBuilder_ == null) {
          return defenceFeatureInfo_.get(index);
        } else {
          return defenceFeatureInfoBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .DefenceFeatureInfo defenceFeatureInfo = 3;</code>
       *
       * <pre>
       *防守方特征信息
       * </pre>
       */
      public Builder setDefenceFeatureInfo(
          int index, com.ninelook.wecard.protocol.beans.BeanFightMessage.DefenceFeatureInfo value) {
        if (defenceFeatureInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDefenceFeatureInfoIsMutable();
          defenceFeatureInfo_.set(index, value);
          onChanged();
        } else {
          defenceFeatureInfoBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .DefenceFeatureInfo defenceFeatureInfo = 3;</code>
       *
       * <pre>
       *防守方特征信息
       * </pre>
       */
      public Builder setDefenceFeatureInfo(
          int index, com.ninelook.wecard.protocol.beans.BeanFightMessage.DefenceFeatureInfo.Builder builderForValue) {
        if (defenceFeatureInfoBuilder_ == null) {
          ensureDefenceFeatureInfoIsMutable();
          defenceFeatureInfo_.set(index, builderForValue.build());
          onChanged();
        } else {
          defenceFeatureInfoBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .DefenceFeatureInfo defenceFeatureInfo = 3;</code>
       *
       * <pre>
       *防守方特征信息
       * </pre>
       */
      public Builder addDefenceFeatureInfo(com.ninelook.wecard.protocol.beans.BeanFightMessage.DefenceFeatureInfo value) {
        if (defenceFeatureInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDefenceFeatureInfoIsMutable();
          defenceFeatureInfo_.add(value);
          onChanged();
        } else {
          defenceFeatureInfoBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .DefenceFeatureInfo defenceFeatureInfo = 3;</code>
       *
       * <pre>
       *防守方特征信息
       * </pre>
       */
      public Builder addDefenceFeatureInfo(
          int index, com.ninelook.wecard.protocol.beans.BeanFightMessage.DefenceFeatureInfo value) {
        if (defenceFeatureInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDefenceFeatureInfoIsMutable();
          defenceFeatureInfo_.add(index, value);
          onChanged();
        } else {
          defenceFeatureInfoBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .DefenceFeatureInfo defenceFeatureInfo = 3;</code>
       *
       * <pre>
       *防守方特征信息
       * </pre>
       */
      public Builder addDefenceFeatureInfo(
          com.ninelook.wecard.protocol.beans.BeanFightMessage.DefenceFeatureInfo.Builder builderForValue) {
        if (defenceFeatureInfoBuilder_ == null) {
          ensureDefenceFeatureInfoIsMutable();
          defenceFeatureInfo_.add(builderForValue.build());
          onChanged();
        } else {
          defenceFeatureInfoBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .DefenceFeatureInfo defenceFeatureInfo = 3;</code>
       *
       * <pre>
       *防守方特征信息
       * </pre>
       */
      public Builder addDefenceFeatureInfo(
          int index, com.ninelook.wecard.protocol.beans.BeanFightMessage.DefenceFeatureInfo.Builder builderForValue) {
        if (defenceFeatureInfoBuilder_ == null) {
          ensureDefenceFeatureInfoIsMutable();
          defenceFeatureInfo_.add(index, builderForValue.build());
          onChanged();
        } else {
          defenceFeatureInfoBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .DefenceFeatureInfo defenceFeatureInfo = 3;</code>
       *
       * <pre>
       *防守方特征信息
       * </pre>
       */
      public Builder addAllDefenceFeatureInfo(
          java.lang.Iterable<? extends com.ninelook.wecard.protocol.beans.BeanFightMessage.DefenceFeatureInfo> values) {
        if (defenceFeatureInfoBuilder_ == null) {
          ensureDefenceFeatureInfoIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, defenceFeatureInfo_);
          onChanged();
        } else {
          defenceFeatureInfoBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .DefenceFeatureInfo defenceFeatureInfo = 3;</code>
       *
       * <pre>
       *防守方特征信息
       * </pre>
       */
      public Builder clearDefenceFeatureInfo() {
        if (defenceFeatureInfoBuilder_ == null) {
          defenceFeatureInfo_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          defenceFeatureInfoBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .DefenceFeatureInfo defenceFeatureInfo = 3;</code>
       *
       * <pre>
       *防守方特征信息
       * </pre>
       */
      public Builder removeDefenceFeatureInfo(int index) {
        if (defenceFeatureInfoBuilder_ == null) {
          ensureDefenceFeatureInfoIsMutable();
          defenceFeatureInfo_.remove(index);
          onChanged();
        } else {
          defenceFeatureInfoBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .DefenceFeatureInfo defenceFeatureInfo = 3;</code>
       *
       * <pre>
       *防守方特征信息
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanFightMessage.DefenceFeatureInfo.Builder getDefenceFeatureInfoBuilder(
          int index) {
        return getDefenceFeatureInfoFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .DefenceFeatureInfo defenceFeatureInfo = 3;</code>
       *
       * <pre>
       *防守方特征信息
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanFightMessage.DefenceFeatureInfoOrBuilder getDefenceFeatureInfoOrBuilder(
          int index) {
        if (defenceFeatureInfoBuilder_ == null) {
          return defenceFeatureInfo_.get(index);  } else {
          return defenceFeatureInfoBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .DefenceFeatureInfo defenceFeatureInfo = 3;</code>
       *
       * <pre>
       *防守方特征信息
       * </pre>
       */
      public java.util.List<? extends com.ninelook.wecard.protocol.beans.BeanFightMessage.DefenceFeatureInfoOrBuilder> 
           getDefenceFeatureInfoOrBuilderList() {
        if (defenceFeatureInfoBuilder_ != null) {
          return defenceFeatureInfoBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(defenceFeatureInfo_);
        }
      }
      /**
       * <code>repeated .DefenceFeatureInfo defenceFeatureInfo = 3;</code>
       *
       * <pre>
       *防守方特征信息
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanFightMessage.DefenceFeatureInfo.Builder addDefenceFeatureInfoBuilder() {
        return getDefenceFeatureInfoFieldBuilder().addBuilder(
            com.ninelook.wecard.protocol.beans.BeanFightMessage.DefenceFeatureInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .DefenceFeatureInfo defenceFeatureInfo = 3;</code>
       *
       * <pre>
       *防守方特征信息
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanFightMessage.DefenceFeatureInfo.Builder addDefenceFeatureInfoBuilder(
          int index) {
        return getDefenceFeatureInfoFieldBuilder().addBuilder(
            index, com.ninelook.wecard.protocol.beans.BeanFightMessage.DefenceFeatureInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .DefenceFeatureInfo defenceFeatureInfo = 3;</code>
       *
       * <pre>
       *防守方特征信息
       * </pre>
       */
      public java.util.List<com.ninelook.wecard.protocol.beans.BeanFightMessage.DefenceFeatureInfo.Builder> 
           getDefenceFeatureInfoBuilderList() {
        return getDefenceFeatureInfoFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.ninelook.wecard.protocol.beans.BeanFightMessage.DefenceFeatureInfo, com.ninelook.wecard.protocol.beans.BeanFightMessage.DefenceFeatureInfo.Builder, com.ninelook.wecard.protocol.beans.BeanFightMessage.DefenceFeatureInfoOrBuilder> 
          getDefenceFeatureInfoFieldBuilder() {
        if (defenceFeatureInfoBuilder_ == null) {
          defenceFeatureInfoBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.ninelook.wecard.protocol.beans.BeanFightMessage.DefenceFeatureInfo, com.ninelook.wecard.protocol.beans.BeanFightMessage.DefenceFeatureInfo.Builder, com.ninelook.wecard.protocol.beans.BeanFightMessage.DefenceFeatureInfoOrBuilder>(
                  defenceFeatureInfo_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          defenceFeatureInfo_ = null;
        }
        return defenceFeatureInfoBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:FightSerialInfo)
    }

    static {
      defaultInstance = new FightSerialInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:FightSerialInfo)
  }

  public interface FightAttackResultInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:FightAttackResultInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int32 eid = 1;</code>
     *
     * <pre>
     *攻击方eid
     * </pre>
     */
    boolean hasEid();
    /**
     * <code>required int32 eid = 1;</code>
     *
     * <pre>
     *攻击方eid
     * </pre>
     */
    int getEid();

    /**
     * <code>optional int32 sid = 2;</code>
     *
     * <pre>
     *攻击消息序列号(前端使用)
     * </pre>
     */
    boolean hasSid();
    /**
     * <code>optional int32 sid = 2;</code>
     *
     * <pre>
     *攻击消息序列号(前端使用)
     * </pre>
     */
    int getSid();

    /**
     * <code>repeated .FightSerialInfo fightSerialInfo = 3;</code>
     *
     * <pre>
     *每一次序列攻击攻防双方信息
     * </pre>
     */
    java.util.List<com.ninelook.wecard.protocol.beans.BeanFightMessage.FightSerialInfo> 
        getFightSerialInfoList();
    /**
     * <code>repeated .FightSerialInfo fightSerialInfo = 3;</code>
     *
     * <pre>
     *每一次序列攻击攻防双方信息
     * </pre>
     */
    com.ninelook.wecard.protocol.beans.BeanFightMessage.FightSerialInfo getFightSerialInfo(int index);
    /**
     * <code>repeated .FightSerialInfo fightSerialInfo = 3;</code>
     *
     * <pre>
     *每一次序列攻击攻防双方信息
     * </pre>
     */
    int getFightSerialInfoCount();
    /**
     * <code>repeated .FightSerialInfo fightSerialInfo = 3;</code>
     *
     * <pre>
     *每一次序列攻击攻防双方信息
     * </pre>
     */
    java.util.List<? extends com.ninelook.wecard.protocol.beans.BeanFightMessage.FightSerialInfoOrBuilder> 
        getFightSerialInfoOrBuilderList();
    /**
     * <code>repeated .FightSerialInfo fightSerialInfo = 3;</code>
     *
     * <pre>
     *每一次序列攻击攻防双方信息
     * </pre>
     */
    com.ninelook.wecard.protocol.beans.BeanFightMessage.FightSerialInfoOrBuilder getFightSerialInfoOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code FightAttackResultInfo}
   *
   * <pre>
   *攻击结果信息
   * </pre>
   */
  public static final class FightAttackResultInfo extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:FightAttackResultInfo)
      FightAttackResultInfoOrBuilder {
    // Use FightAttackResultInfo.newBuilder() to construct.
    private FightAttackResultInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private FightAttackResultInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final FightAttackResultInfo defaultInstance;
    public static FightAttackResultInfo getDefaultInstance() {
      return defaultInstance;
    }

    public FightAttackResultInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private FightAttackResultInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              eid_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              sid_ = input.readInt32();
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                fightSerialInfo_ = new java.util.ArrayList<com.ninelook.wecard.protocol.beans.BeanFightMessage.FightSerialInfo>();
                mutable_bitField0_ |= 0x00000004;
              }
              fightSerialInfo_.add(input.readMessage(com.ninelook.wecard.protocol.beans.BeanFightMessage.FightSerialInfo.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          fightSerialInfo_ = java.util.Collections.unmodifiableList(fightSerialInfo_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.ninelook.wecard.protocol.beans.BeanFightMessage.internal_static_FightAttackResultInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.ninelook.wecard.protocol.beans.BeanFightMessage.internal_static_FightAttackResultInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.ninelook.wecard.protocol.beans.BeanFightMessage.FightAttackResultInfo.class, com.ninelook.wecard.protocol.beans.BeanFightMessage.FightAttackResultInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<FightAttackResultInfo> PARSER =
        new com.google.protobuf.AbstractParser<FightAttackResultInfo>() {
      public FightAttackResultInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FightAttackResultInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<FightAttackResultInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int EID_FIELD_NUMBER = 1;
    private int eid_;
    /**
     * <code>required int32 eid = 1;</code>
     *
     * <pre>
     *攻击方eid
     * </pre>
     */
    public boolean hasEid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 eid = 1;</code>
     *
     * <pre>
     *攻击方eid
     * </pre>
     */
    public int getEid() {
      return eid_;
    }

    public static final int SID_FIELD_NUMBER = 2;
    private int sid_;
    /**
     * <code>optional int32 sid = 2;</code>
     *
     * <pre>
     *攻击消息序列号(前端使用)
     * </pre>
     */
    public boolean hasSid() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 sid = 2;</code>
     *
     * <pre>
     *攻击消息序列号(前端使用)
     * </pre>
     */
    public int getSid() {
      return sid_;
    }

    public static final int FIGHTSERIALINFO_FIELD_NUMBER = 3;
    private java.util.List<com.ninelook.wecard.protocol.beans.BeanFightMessage.FightSerialInfo> fightSerialInfo_;
    /**
     * <code>repeated .FightSerialInfo fightSerialInfo = 3;</code>
     *
     * <pre>
     *每一次序列攻击攻防双方信息
     * </pre>
     */
    public java.util.List<com.ninelook.wecard.protocol.beans.BeanFightMessage.FightSerialInfo> getFightSerialInfoList() {
      return fightSerialInfo_;
    }
    /**
     * <code>repeated .FightSerialInfo fightSerialInfo = 3;</code>
     *
     * <pre>
     *每一次序列攻击攻防双方信息
     * </pre>
     */
    public java.util.List<? extends com.ninelook.wecard.protocol.beans.BeanFightMessage.FightSerialInfoOrBuilder> 
        getFightSerialInfoOrBuilderList() {
      return fightSerialInfo_;
    }
    /**
     * <code>repeated .FightSerialInfo fightSerialInfo = 3;</code>
     *
     * <pre>
     *每一次序列攻击攻防双方信息
     * </pre>
     */
    public int getFightSerialInfoCount() {
      return fightSerialInfo_.size();
    }
    /**
     * <code>repeated .FightSerialInfo fightSerialInfo = 3;</code>
     *
     * <pre>
     *每一次序列攻击攻防双方信息
     * </pre>
     */
    public com.ninelook.wecard.protocol.beans.BeanFightMessage.FightSerialInfo getFightSerialInfo(int index) {
      return fightSerialInfo_.get(index);
    }
    /**
     * <code>repeated .FightSerialInfo fightSerialInfo = 3;</code>
     *
     * <pre>
     *每一次序列攻击攻防双方信息
     * </pre>
     */
    public com.ninelook.wecard.protocol.beans.BeanFightMessage.FightSerialInfoOrBuilder getFightSerialInfoOrBuilder(
        int index) {
      return fightSerialInfo_.get(index);
    }

    private void initFields() {
      eid_ = 0;
      sid_ = 0;
      fightSerialInfo_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasEid()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getFightSerialInfoCount(); i++) {
        if (!getFightSerialInfo(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, eid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, sid_);
      }
      for (int i = 0; i < fightSerialInfo_.size(); i++) {
        output.writeMessage(3, fightSerialInfo_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, eid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, sid_);
      }
      for (int i = 0; i < fightSerialInfo_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, fightSerialInfo_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ninelook.wecard.protocol.beans.BeanFightMessage.FightAttackResultInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ninelook.wecard.protocol.beans.BeanFightMessage.FightAttackResultInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ninelook.wecard.protocol.beans.BeanFightMessage.FightAttackResultInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ninelook.wecard.protocol.beans.BeanFightMessage.FightAttackResultInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ninelook.wecard.protocol.beans.BeanFightMessage.FightAttackResultInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ninelook.wecard.protocol.beans.BeanFightMessage.FightAttackResultInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ninelook.wecard.protocol.beans.BeanFightMessage.FightAttackResultInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ninelook.wecard.protocol.beans.BeanFightMessage.FightAttackResultInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ninelook.wecard.protocol.beans.BeanFightMessage.FightAttackResultInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ninelook.wecard.protocol.beans.BeanFightMessage.FightAttackResultInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ninelook.wecard.protocol.beans.BeanFightMessage.FightAttackResultInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code FightAttackResultInfo}
     *
     * <pre>
     *攻击结果信息
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:FightAttackResultInfo)
        com.ninelook.wecard.protocol.beans.BeanFightMessage.FightAttackResultInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.ninelook.wecard.protocol.beans.BeanFightMessage.internal_static_FightAttackResultInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.ninelook.wecard.protocol.beans.BeanFightMessage.internal_static_FightAttackResultInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.ninelook.wecard.protocol.beans.BeanFightMessage.FightAttackResultInfo.class, com.ninelook.wecard.protocol.beans.BeanFightMessage.FightAttackResultInfo.Builder.class);
      }

      // Construct using com.ninelook.wecard.protocol.beans.BeanFightMessage.FightAttackResultInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getFightSerialInfoFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        eid_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        sid_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (fightSerialInfoBuilder_ == null) {
          fightSerialInfo_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          fightSerialInfoBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.ninelook.wecard.protocol.beans.BeanFightMessage.internal_static_FightAttackResultInfo_descriptor;
      }

      public com.ninelook.wecard.protocol.beans.BeanFightMessage.FightAttackResultInfo getDefaultInstanceForType() {
        return com.ninelook.wecard.protocol.beans.BeanFightMessage.FightAttackResultInfo.getDefaultInstance();
      }

      public com.ninelook.wecard.protocol.beans.BeanFightMessage.FightAttackResultInfo build() {
        com.ninelook.wecard.protocol.beans.BeanFightMessage.FightAttackResultInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ninelook.wecard.protocol.beans.BeanFightMessage.FightAttackResultInfo buildPartial() {
        com.ninelook.wecard.protocol.beans.BeanFightMessage.FightAttackResultInfo result = new com.ninelook.wecard.protocol.beans.BeanFightMessage.FightAttackResultInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.eid_ = eid_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.sid_ = sid_;
        if (fightSerialInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            fightSerialInfo_ = java.util.Collections.unmodifiableList(fightSerialInfo_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.fightSerialInfo_ = fightSerialInfo_;
        } else {
          result.fightSerialInfo_ = fightSerialInfoBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.ninelook.wecard.protocol.beans.BeanFightMessage.FightAttackResultInfo) {
          return mergeFrom((com.ninelook.wecard.protocol.beans.BeanFightMessage.FightAttackResultInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.ninelook.wecard.protocol.beans.BeanFightMessage.FightAttackResultInfo other) {
        if (other == com.ninelook.wecard.protocol.beans.BeanFightMessage.FightAttackResultInfo.getDefaultInstance()) return this;
        if (other.hasEid()) {
          setEid(other.getEid());
        }
        if (other.hasSid()) {
          setSid(other.getSid());
        }
        if (fightSerialInfoBuilder_ == null) {
          if (!other.fightSerialInfo_.isEmpty()) {
            if (fightSerialInfo_.isEmpty()) {
              fightSerialInfo_ = other.fightSerialInfo_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureFightSerialInfoIsMutable();
              fightSerialInfo_.addAll(other.fightSerialInfo_);
            }
            onChanged();
          }
        } else {
          if (!other.fightSerialInfo_.isEmpty()) {
            if (fightSerialInfoBuilder_.isEmpty()) {
              fightSerialInfoBuilder_.dispose();
              fightSerialInfoBuilder_ = null;
              fightSerialInfo_ = other.fightSerialInfo_;
              bitField0_ = (bitField0_ & ~0x00000004);
              fightSerialInfoBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getFightSerialInfoFieldBuilder() : null;
            } else {
              fightSerialInfoBuilder_.addAllMessages(other.fightSerialInfo_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasEid()) {
          
          return false;
        }
        for (int i = 0; i < getFightSerialInfoCount(); i++) {
          if (!getFightSerialInfo(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ninelook.wecard.protocol.beans.BeanFightMessage.FightAttackResultInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ninelook.wecard.protocol.beans.BeanFightMessage.FightAttackResultInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int eid_ ;
      /**
       * <code>required int32 eid = 1;</code>
       *
       * <pre>
       *攻击方eid
       * </pre>
       */
      public boolean hasEid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 eid = 1;</code>
       *
       * <pre>
       *攻击方eid
       * </pre>
       */
      public int getEid() {
        return eid_;
      }
      /**
       * <code>required int32 eid = 1;</code>
       *
       * <pre>
       *攻击方eid
       * </pre>
       */
      public Builder setEid(int value) {
        bitField0_ |= 0x00000001;
        eid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 eid = 1;</code>
       *
       * <pre>
       *攻击方eid
       * </pre>
       */
      public Builder clearEid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        eid_ = 0;
        onChanged();
        return this;
      }

      private int sid_ ;
      /**
       * <code>optional int32 sid = 2;</code>
       *
       * <pre>
       *攻击消息序列号(前端使用)
       * </pre>
       */
      public boolean hasSid() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 sid = 2;</code>
       *
       * <pre>
       *攻击消息序列号(前端使用)
       * </pre>
       */
      public int getSid() {
        return sid_;
      }
      /**
       * <code>optional int32 sid = 2;</code>
       *
       * <pre>
       *攻击消息序列号(前端使用)
       * </pre>
       */
      public Builder setSid(int value) {
        bitField0_ |= 0x00000002;
        sid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 sid = 2;</code>
       *
       * <pre>
       *攻击消息序列号(前端使用)
       * </pre>
       */
      public Builder clearSid() {
        bitField0_ = (bitField0_ & ~0x00000002);
        sid_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<com.ninelook.wecard.protocol.beans.BeanFightMessage.FightSerialInfo> fightSerialInfo_ =
        java.util.Collections.emptyList();
      private void ensureFightSerialInfoIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          fightSerialInfo_ = new java.util.ArrayList<com.ninelook.wecard.protocol.beans.BeanFightMessage.FightSerialInfo>(fightSerialInfo_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.ninelook.wecard.protocol.beans.BeanFightMessage.FightSerialInfo, com.ninelook.wecard.protocol.beans.BeanFightMessage.FightSerialInfo.Builder, com.ninelook.wecard.protocol.beans.BeanFightMessage.FightSerialInfoOrBuilder> fightSerialInfoBuilder_;

      /**
       * <code>repeated .FightSerialInfo fightSerialInfo = 3;</code>
       *
       * <pre>
       *每一次序列攻击攻防双方信息
       * </pre>
       */
      public java.util.List<com.ninelook.wecard.protocol.beans.BeanFightMessage.FightSerialInfo> getFightSerialInfoList() {
        if (fightSerialInfoBuilder_ == null) {
          return java.util.Collections.unmodifiableList(fightSerialInfo_);
        } else {
          return fightSerialInfoBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .FightSerialInfo fightSerialInfo = 3;</code>
       *
       * <pre>
       *每一次序列攻击攻防双方信息
       * </pre>
       */
      public int getFightSerialInfoCount() {
        if (fightSerialInfoBuilder_ == null) {
          return fightSerialInfo_.size();
        } else {
          return fightSerialInfoBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .FightSerialInfo fightSerialInfo = 3;</code>
       *
       * <pre>
       *每一次序列攻击攻防双方信息
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanFightMessage.FightSerialInfo getFightSerialInfo(int index) {
        if (fightSerialInfoBuilder_ == null) {
          return fightSerialInfo_.get(index);
        } else {
          return fightSerialInfoBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .FightSerialInfo fightSerialInfo = 3;</code>
       *
       * <pre>
       *每一次序列攻击攻防双方信息
       * </pre>
       */
      public Builder setFightSerialInfo(
          int index, com.ninelook.wecard.protocol.beans.BeanFightMessage.FightSerialInfo value) {
        if (fightSerialInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFightSerialInfoIsMutable();
          fightSerialInfo_.set(index, value);
          onChanged();
        } else {
          fightSerialInfoBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .FightSerialInfo fightSerialInfo = 3;</code>
       *
       * <pre>
       *每一次序列攻击攻防双方信息
       * </pre>
       */
      public Builder setFightSerialInfo(
          int index, com.ninelook.wecard.protocol.beans.BeanFightMessage.FightSerialInfo.Builder builderForValue) {
        if (fightSerialInfoBuilder_ == null) {
          ensureFightSerialInfoIsMutable();
          fightSerialInfo_.set(index, builderForValue.build());
          onChanged();
        } else {
          fightSerialInfoBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .FightSerialInfo fightSerialInfo = 3;</code>
       *
       * <pre>
       *每一次序列攻击攻防双方信息
       * </pre>
       */
      public Builder addFightSerialInfo(com.ninelook.wecard.protocol.beans.BeanFightMessage.FightSerialInfo value) {
        if (fightSerialInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFightSerialInfoIsMutable();
          fightSerialInfo_.add(value);
          onChanged();
        } else {
          fightSerialInfoBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .FightSerialInfo fightSerialInfo = 3;</code>
       *
       * <pre>
       *每一次序列攻击攻防双方信息
       * </pre>
       */
      public Builder addFightSerialInfo(
          int index, com.ninelook.wecard.protocol.beans.BeanFightMessage.FightSerialInfo value) {
        if (fightSerialInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFightSerialInfoIsMutable();
          fightSerialInfo_.add(index, value);
          onChanged();
        } else {
          fightSerialInfoBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .FightSerialInfo fightSerialInfo = 3;</code>
       *
       * <pre>
       *每一次序列攻击攻防双方信息
       * </pre>
       */
      public Builder addFightSerialInfo(
          com.ninelook.wecard.protocol.beans.BeanFightMessage.FightSerialInfo.Builder builderForValue) {
        if (fightSerialInfoBuilder_ == null) {
          ensureFightSerialInfoIsMutable();
          fightSerialInfo_.add(builderForValue.build());
          onChanged();
        } else {
          fightSerialInfoBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .FightSerialInfo fightSerialInfo = 3;</code>
       *
       * <pre>
       *每一次序列攻击攻防双方信息
       * </pre>
       */
      public Builder addFightSerialInfo(
          int index, com.ninelook.wecard.protocol.beans.BeanFightMessage.FightSerialInfo.Builder builderForValue) {
        if (fightSerialInfoBuilder_ == null) {
          ensureFightSerialInfoIsMutable();
          fightSerialInfo_.add(index, builderForValue.build());
          onChanged();
        } else {
          fightSerialInfoBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .FightSerialInfo fightSerialInfo = 3;</code>
       *
       * <pre>
       *每一次序列攻击攻防双方信息
       * </pre>
       */
      public Builder addAllFightSerialInfo(
          java.lang.Iterable<? extends com.ninelook.wecard.protocol.beans.BeanFightMessage.FightSerialInfo> values) {
        if (fightSerialInfoBuilder_ == null) {
          ensureFightSerialInfoIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, fightSerialInfo_);
          onChanged();
        } else {
          fightSerialInfoBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .FightSerialInfo fightSerialInfo = 3;</code>
       *
       * <pre>
       *每一次序列攻击攻防双方信息
       * </pre>
       */
      public Builder clearFightSerialInfo() {
        if (fightSerialInfoBuilder_ == null) {
          fightSerialInfo_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          fightSerialInfoBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .FightSerialInfo fightSerialInfo = 3;</code>
       *
       * <pre>
       *每一次序列攻击攻防双方信息
       * </pre>
       */
      public Builder removeFightSerialInfo(int index) {
        if (fightSerialInfoBuilder_ == null) {
          ensureFightSerialInfoIsMutable();
          fightSerialInfo_.remove(index);
          onChanged();
        } else {
          fightSerialInfoBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .FightSerialInfo fightSerialInfo = 3;</code>
       *
       * <pre>
       *每一次序列攻击攻防双方信息
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanFightMessage.FightSerialInfo.Builder getFightSerialInfoBuilder(
          int index) {
        return getFightSerialInfoFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .FightSerialInfo fightSerialInfo = 3;</code>
       *
       * <pre>
       *每一次序列攻击攻防双方信息
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanFightMessage.FightSerialInfoOrBuilder getFightSerialInfoOrBuilder(
          int index) {
        if (fightSerialInfoBuilder_ == null) {
          return fightSerialInfo_.get(index);  } else {
          return fightSerialInfoBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .FightSerialInfo fightSerialInfo = 3;</code>
       *
       * <pre>
       *每一次序列攻击攻防双方信息
       * </pre>
       */
      public java.util.List<? extends com.ninelook.wecard.protocol.beans.BeanFightMessage.FightSerialInfoOrBuilder> 
           getFightSerialInfoOrBuilderList() {
        if (fightSerialInfoBuilder_ != null) {
          return fightSerialInfoBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(fightSerialInfo_);
        }
      }
      /**
       * <code>repeated .FightSerialInfo fightSerialInfo = 3;</code>
       *
       * <pre>
       *每一次序列攻击攻防双方信息
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanFightMessage.FightSerialInfo.Builder addFightSerialInfoBuilder() {
        return getFightSerialInfoFieldBuilder().addBuilder(
            com.ninelook.wecard.protocol.beans.BeanFightMessage.FightSerialInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .FightSerialInfo fightSerialInfo = 3;</code>
       *
       * <pre>
       *每一次序列攻击攻防双方信息
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanFightMessage.FightSerialInfo.Builder addFightSerialInfoBuilder(
          int index) {
        return getFightSerialInfoFieldBuilder().addBuilder(
            index, com.ninelook.wecard.protocol.beans.BeanFightMessage.FightSerialInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .FightSerialInfo fightSerialInfo = 3;</code>
       *
       * <pre>
       *每一次序列攻击攻防双方信息
       * </pre>
       */
      public java.util.List<com.ninelook.wecard.protocol.beans.BeanFightMessage.FightSerialInfo.Builder> 
           getFightSerialInfoBuilderList() {
        return getFightSerialInfoFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.ninelook.wecard.protocol.beans.BeanFightMessage.FightSerialInfo, com.ninelook.wecard.protocol.beans.BeanFightMessage.FightSerialInfo.Builder, com.ninelook.wecard.protocol.beans.BeanFightMessage.FightSerialInfoOrBuilder> 
          getFightSerialInfoFieldBuilder() {
        if (fightSerialInfoBuilder_ == null) {
          fightSerialInfoBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.ninelook.wecard.protocol.beans.BeanFightMessage.FightSerialInfo, com.ninelook.wecard.protocol.beans.BeanFightMessage.FightSerialInfo.Builder, com.ninelook.wecard.protocol.beans.BeanFightMessage.FightSerialInfoOrBuilder>(
                  fightSerialInfo_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          fightSerialInfo_ = null;
        }
        return fightSerialInfoBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:FightAttackResultInfo)
    }

    static {
      defaultInstance = new FightAttackResultInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:FightAttackResultInfo)
  }

  public interface BuffEntityInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:BuffEntityInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int32 buffId = 1;</code>
     *
     * <pre>
     *buffId
     * </pre>
     */
    boolean hasBuffId();
    /**
     * <code>required int32 buffId = 1;</code>
     *
     * <pre>
     *buffId
     * </pre>
     */
    int getBuffId();

    /**
     * <code>required int32 status = 2;</code>
     *
     * <pre>
     *buff更新状态(1:已开始, 2:已结束)
     * </pre>
     */
    boolean hasStatus();
    /**
     * <code>required int32 status = 2;</code>
     *
     * <pre>
     *buff更新状态(1:已开始, 2:已结束)
     * </pre>
     */
    int getStatus();

    /**
     * <code>required .EntityInfo entityInfo = 3;</code>
     *
     * <pre>
     *buff影响的实体信息
     * </pre>
     */
    boolean hasEntityInfo();
    /**
     * <code>required .EntityInfo entityInfo = 3;</code>
     *
     * <pre>
     *buff影响的实体信息
     * </pre>
     */
    com.ninelook.wecard.protocol.beans.BeanEntityMessage.EntityInfo getEntityInfo();
    /**
     * <code>required .EntityInfo entityInfo = 3;</code>
     *
     * <pre>
     *buff影响的实体信息
     * </pre>
     */
    com.ninelook.wecard.protocol.beans.BeanEntityMessage.EntityInfoOrBuilder getEntityInfoOrBuilder();
  }
  /**
   * Protobuf type {@code BuffEntityInfo}
   *
   * <pre>
   *BUFF更新信息
   * </pre>
   */
  public static final class BuffEntityInfo extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:BuffEntityInfo)
      BuffEntityInfoOrBuilder {
    // Use BuffEntityInfo.newBuilder() to construct.
    private BuffEntityInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private BuffEntityInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final BuffEntityInfo defaultInstance;
    public static BuffEntityInfo getDefaultInstance() {
      return defaultInstance;
    }

    public BuffEntityInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private BuffEntityInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              buffId_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              status_ = input.readInt32();
              break;
            }
            case 26: {
              com.ninelook.wecard.protocol.beans.BeanEntityMessage.EntityInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = entityInfo_.toBuilder();
              }
              entityInfo_ = input.readMessage(com.ninelook.wecard.protocol.beans.BeanEntityMessage.EntityInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(entityInfo_);
                entityInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.ninelook.wecard.protocol.beans.BeanFightMessage.internal_static_BuffEntityInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.ninelook.wecard.protocol.beans.BeanFightMessage.internal_static_BuffEntityInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.ninelook.wecard.protocol.beans.BeanFightMessage.BuffEntityInfo.class, com.ninelook.wecard.protocol.beans.BeanFightMessage.BuffEntityInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<BuffEntityInfo> PARSER =
        new com.google.protobuf.AbstractParser<BuffEntityInfo>() {
      public BuffEntityInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new BuffEntityInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<BuffEntityInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int BUFFID_FIELD_NUMBER = 1;
    private int buffId_;
    /**
     * <code>required int32 buffId = 1;</code>
     *
     * <pre>
     *buffId
     * </pre>
     */
    public boolean hasBuffId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 buffId = 1;</code>
     *
     * <pre>
     *buffId
     * </pre>
     */
    public int getBuffId() {
      return buffId_;
    }

    public static final int STATUS_FIELD_NUMBER = 2;
    private int status_;
    /**
     * <code>required int32 status = 2;</code>
     *
     * <pre>
     *buff更新状态(1:已开始, 2:已结束)
     * </pre>
     */
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 status = 2;</code>
     *
     * <pre>
     *buff更新状态(1:已开始, 2:已结束)
     * </pre>
     */
    public int getStatus() {
      return status_;
    }

    public static final int ENTITYINFO_FIELD_NUMBER = 3;
    private com.ninelook.wecard.protocol.beans.BeanEntityMessage.EntityInfo entityInfo_;
    /**
     * <code>required .EntityInfo entityInfo = 3;</code>
     *
     * <pre>
     *buff影响的实体信息
     * </pre>
     */
    public boolean hasEntityInfo() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required .EntityInfo entityInfo = 3;</code>
     *
     * <pre>
     *buff影响的实体信息
     * </pre>
     */
    public com.ninelook.wecard.protocol.beans.BeanEntityMessage.EntityInfo getEntityInfo() {
      return entityInfo_;
    }
    /**
     * <code>required .EntityInfo entityInfo = 3;</code>
     *
     * <pre>
     *buff影响的实体信息
     * </pre>
     */
    public com.ninelook.wecard.protocol.beans.BeanEntityMessage.EntityInfoOrBuilder getEntityInfoOrBuilder() {
      return entityInfo_;
    }

    private void initFields() {
      buffId_ = 0;
      status_ = 0;
      entityInfo_ = com.ninelook.wecard.protocol.beans.BeanEntityMessage.EntityInfo.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasBuffId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasStatus()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasEntityInfo()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getEntityInfo().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, buffId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, status_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, entityInfo_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, buffId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, status_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, entityInfo_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ninelook.wecard.protocol.beans.BeanFightMessage.BuffEntityInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ninelook.wecard.protocol.beans.BeanFightMessage.BuffEntityInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ninelook.wecard.protocol.beans.BeanFightMessage.BuffEntityInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ninelook.wecard.protocol.beans.BeanFightMessage.BuffEntityInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ninelook.wecard.protocol.beans.BeanFightMessage.BuffEntityInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ninelook.wecard.protocol.beans.BeanFightMessage.BuffEntityInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ninelook.wecard.protocol.beans.BeanFightMessage.BuffEntityInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ninelook.wecard.protocol.beans.BeanFightMessage.BuffEntityInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ninelook.wecard.protocol.beans.BeanFightMessage.BuffEntityInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ninelook.wecard.protocol.beans.BeanFightMessage.BuffEntityInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ninelook.wecard.protocol.beans.BeanFightMessage.BuffEntityInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code BuffEntityInfo}
     *
     * <pre>
     *BUFF更新信息
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:BuffEntityInfo)
        com.ninelook.wecard.protocol.beans.BeanFightMessage.BuffEntityInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.ninelook.wecard.protocol.beans.BeanFightMessage.internal_static_BuffEntityInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.ninelook.wecard.protocol.beans.BeanFightMessage.internal_static_BuffEntityInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.ninelook.wecard.protocol.beans.BeanFightMessage.BuffEntityInfo.class, com.ninelook.wecard.protocol.beans.BeanFightMessage.BuffEntityInfo.Builder.class);
      }

      // Construct using com.ninelook.wecard.protocol.beans.BeanFightMessage.BuffEntityInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getEntityInfoFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        buffId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        status_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (entityInfoBuilder_ == null) {
          entityInfo_ = com.ninelook.wecard.protocol.beans.BeanEntityMessage.EntityInfo.getDefaultInstance();
        } else {
          entityInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.ninelook.wecard.protocol.beans.BeanFightMessage.internal_static_BuffEntityInfo_descriptor;
      }

      public com.ninelook.wecard.protocol.beans.BeanFightMessage.BuffEntityInfo getDefaultInstanceForType() {
        return com.ninelook.wecard.protocol.beans.BeanFightMessage.BuffEntityInfo.getDefaultInstance();
      }

      public com.ninelook.wecard.protocol.beans.BeanFightMessage.BuffEntityInfo build() {
        com.ninelook.wecard.protocol.beans.BeanFightMessage.BuffEntityInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ninelook.wecard.protocol.beans.BeanFightMessage.BuffEntityInfo buildPartial() {
        com.ninelook.wecard.protocol.beans.BeanFightMessage.BuffEntityInfo result = new com.ninelook.wecard.protocol.beans.BeanFightMessage.BuffEntityInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.buffId_ = buffId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.status_ = status_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (entityInfoBuilder_ == null) {
          result.entityInfo_ = entityInfo_;
        } else {
          result.entityInfo_ = entityInfoBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.ninelook.wecard.protocol.beans.BeanFightMessage.BuffEntityInfo) {
          return mergeFrom((com.ninelook.wecard.protocol.beans.BeanFightMessage.BuffEntityInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.ninelook.wecard.protocol.beans.BeanFightMessage.BuffEntityInfo other) {
        if (other == com.ninelook.wecard.protocol.beans.BeanFightMessage.BuffEntityInfo.getDefaultInstance()) return this;
        if (other.hasBuffId()) {
          setBuffId(other.getBuffId());
        }
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        if (other.hasEntityInfo()) {
          mergeEntityInfo(other.getEntityInfo());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasBuffId()) {
          
          return false;
        }
        if (!hasStatus()) {
          
          return false;
        }
        if (!hasEntityInfo()) {
          
          return false;
        }
        if (!getEntityInfo().isInitialized()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ninelook.wecard.protocol.beans.BeanFightMessage.BuffEntityInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ninelook.wecard.protocol.beans.BeanFightMessage.BuffEntityInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int buffId_ ;
      /**
       * <code>required int32 buffId = 1;</code>
       *
       * <pre>
       *buffId
       * </pre>
       */
      public boolean hasBuffId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 buffId = 1;</code>
       *
       * <pre>
       *buffId
       * </pre>
       */
      public int getBuffId() {
        return buffId_;
      }
      /**
       * <code>required int32 buffId = 1;</code>
       *
       * <pre>
       *buffId
       * </pre>
       */
      public Builder setBuffId(int value) {
        bitField0_ |= 0x00000001;
        buffId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 buffId = 1;</code>
       *
       * <pre>
       *buffId
       * </pre>
       */
      public Builder clearBuffId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        buffId_ = 0;
        onChanged();
        return this;
      }

      private int status_ ;
      /**
       * <code>required int32 status = 2;</code>
       *
       * <pre>
       *buff更新状态(1:已开始, 2:已结束)
       * </pre>
       */
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 status = 2;</code>
       *
       * <pre>
       *buff更新状态(1:已开始, 2:已结束)
       * </pre>
       */
      public int getStatus() {
        return status_;
      }
      /**
       * <code>required int32 status = 2;</code>
       *
       * <pre>
       *buff更新状态(1:已开始, 2:已结束)
       * </pre>
       */
      public Builder setStatus(int value) {
        bitField0_ |= 0x00000002;
        status_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 status = 2;</code>
       *
       * <pre>
       *buff更新状态(1:已开始, 2:已结束)
       * </pre>
       */
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00000002);
        status_ = 0;
        onChanged();
        return this;
      }

      private com.ninelook.wecard.protocol.beans.BeanEntityMessage.EntityInfo entityInfo_ = com.ninelook.wecard.protocol.beans.BeanEntityMessage.EntityInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.ninelook.wecard.protocol.beans.BeanEntityMessage.EntityInfo, com.ninelook.wecard.protocol.beans.BeanEntityMessage.EntityInfo.Builder, com.ninelook.wecard.protocol.beans.BeanEntityMessage.EntityInfoOrBuilder> entityInfoBuilder_;
      /**
       * <code>required .EntityInfo entityInfo = 3;</code>
       *
       * <pre>
       *buff影响的实体信息
       * </pre>
       */
      public boolean hasEntityInfo() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required .EntityInfo entityInfo = 3;</code>
       *
       * <pre>
       *buff影响的实体信息
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanEntityMessage.EntityInfo getEntityInfo() {
        if (entityInfoBuilder_ == null) {
          return entityInfo_;
        } else {
          return entityInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>required .EntityInfo entityInfo = 3;</code>
       *
       * <pre>
       *buff影响的实体信息
       * </pre>
       */
      public Builder setEntityInfo(com.ninelook.wecard.protocol.beans.BeanEntityMessage.EntityInfo value) {
        if (entityInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          entityInfo_ = value;
          onChanged();
        } else {
          entityInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>required .EntityInfo entityInfo = 3;</code>
       *
       * <pre>
       *buff影响的实体信息
       * </pre>
       */
      public Builder setEntityInfo(
          com.ninelook.wecard.protocol.beans.BeanEntityMessage.EntityInfo.Builder builderForValue) {
        if (entityInfoBuilder_ == null) {
          entityInfo_ = builderForValue.build();
          onChanged();
        } else {
          entityInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>required .EntityInfo entityInfo = 3;</code>
       *
       * <pre>
       *buff影响的实体信息
       * </pre>
       */
      public Builder mergeEntityInfo(com.ninelook.wecard.protocol.beans.BeanEntityMessage.EntityInfo value) {
        if (entityInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              entityInfo_ != com.ninelook.wecard.protocol.beans.BeanEntityMessage.EntityInfo.getDefaultInstance()) {
            entityInfo_ =
              com.ninelook.wecard.protocol.beans.BeanEntityMessage.EntityInfo.newBuilder(entityInfo_).mergeFrom(value).buildPartial();
          } else {
            entityInfo_ = value;
          }
          onChanged();
        } else {
          entityInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>required .EntityInfo entityInfo = 3;</code>
       *
       * <pre>
       *buff影响的实体信息
       * </pre>
       */
      public Builder clearEntityInfo() {
        if (entityInfoBuilder_ == null) {
          entityInfo_ = com.ninelook.wecard.protocol.beans.BeanEntityMessage.EntityInfo.getDefaultInstance();
          onChanged();
        } else {
          entityInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>required .EntityInfo entityInfo = 3;</code>
       *
       * <pre>
       *buff影响的实体信息
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanEntityMessage.EntityInfo.Builder getEntityInfoBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getEntityInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>required .EntityInfo entityInfo = 3;</code>
       *
       * <pre>
       *buff影响的实体信息
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanEntityMessage.EntityInfoOrBuilder getEntityInfoOrBuilder() {
        if (entityInfoBuilder_ != null) {
          return entityInfoBuilder_.getMessageOrBuilder();
        } else {
          return entityInfo_;
        }
      }
      /**
       * <code>required .EntityInfo entityInfo = 3;</code>
       *
       * <pre>
       *buff影响的实体信息
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.ninelook.wecard.protocol.beans.BeanEntityMessage.EntityInfo, com.ninelook.wecard.protocol.beans.BeanEntityMessage.EntityInfo.Builder, com.ninelook.wecard.protocol.beans.BeanEntityMessage.EntityInfoOrBuilder> 
          getEntityInfoFieldBuilder() {
        if (entityInfoBuilder_ == null) {
          entityInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.ninelook.wecard.protocol.beans.BeanEntityMessage.EntityInfo, com.ninelook.wecard.protocol.beans.BeanEntityMessage.EntityInfo.Builder, com.ninelook.wecard.protocol.beans.BeanEntityMessage.EntityInfoOrBuilder>(
                  getEntityInfo(),
                  getParentForChildren(),
                  isClean());
          entityInfo_ = null;
        }
        return entityInfoBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:BuffEntityInfo)
    }

    static {
      defaultInstance = new BuffEntityInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:BuffEntityInfo)
  }

  public interface SkillResultByAttackInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:SkillResultByAttackInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required .FightAttackResultInfo fightAttackResultInfo = 1;</code>
     */
    boolean hasFightAttackResultInfo();
    /**
     * <code>required .FightAttackResultInfo fightAttackResultInfo = 1;</code>
     */
    com.ninelook.wecard.protocol.beans.BeanFightMessage.FightAttackResultInfo getFightAttackResultInfo();
    /**
     * <code>required .FightAttackResultInfo fightAttackResultInfo = 1;</code>
     */
    com.ninelook.wecard.protocol.beans.BeanFightMessage.FightAttackResultInfoOrBuilder getFightAttackResultInfoOrBuilder();
  }
  /**
   * Protobuf type {@code SkillResultByAttackInfo}
   *
   * <pre>
   *技能返回信息 - 攻击性技能
   * </pre>
   */
  public static final class SkillResultByAttackInfo extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:SkillResultByAttackInfo)
      SkillResultByAttackInfoOrBuilder {
    // Use SkillResultByAttackInfo.newBuilder() to construct.
    private SkillResultByAttackInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SkillResultByAttackInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SkillResultByAttackInfo defaultInstance;
    public static SkillResultByAttackInfo getDefaultInstance() {
      return defaultInstance;
    }

    public SkillResultByAttackInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SkillResultByAttackInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.ninelook.wecard.protocol.beans.BeanFightMessage.FightAttackResultInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = fightAttackResultInfo_.toBuilder();
              }
              fightAttackResultInfo_ = input.readMessage(com.ninelook.wecard.protocol.beans.BeanFightMessage.FightAttackResultInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(fightAttackResultInfo_);
                fightAttackResultInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.ninelook.wecard.protocol.beans.BeanFightMessage.internal_static_SkillResultByAttackInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.ninelook.wecard.protocol.beans.BeanFightMessage.internal_static_SkillResultByAttackInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByAttackInfo.class, com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByAttackInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<SkillResultByAttackInfo> PARSER =
        new com.google.protobuf.AbstractParser<SkillResultByAttackInfo>() {
      public SkillResultByAttackInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SkillResultByAttackInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SkillResultByAttackInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int FIGHTATTACKRESULTINFO_FIELD_NUMBER = 1;
    private com.ninelook.wecard.protocol.beans.BeanFightMessage.FightAttackResultInfo fightAttackResultInfo_;
    /**
     * <code>required .FightAttackResultInfo fightAttackResultInfo = 1;</code>
     */
    public boolean hasFightAttackResultInfo() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .FightAttackResultInfo fightAttackResultInfo = 1;</code>
     */
    public com.ninelook.wecard.protocol.beans.BeanFightMessage.FightAttackResultInfo getFightAttackResultInfo() {
      return fightAttackResultInfo_;
    }
    /**
     * <code>required .FightAttackResultInfo fightAttackResultInfo = 1;</code>
     */
    public com.ninelook.wecard.protocol.beans.BeanFightMessage.FightAttackResultInfoOrBuilder getFightAttackResultInfoOrBuilder() {
      return fightAttackResultInfo_;
    }

    private void initFields() {
      fightAttackResultInfo_ = com.ninelook.wecard.protocol.beans.BeanFightMessage.FightAttackResultInfo.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasFightAttackResultInfo()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getFightAttackResultInfo().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, fightAttackResultInfo_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, fightAttackResultInfo_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByAttackInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByAttackInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByAttackInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByAttackInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByAttackInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByAttackInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByAttackInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByAttackInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByAttackInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByAttackInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByAttackInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code SkillResultByAttackInfo}
     *
     * <pre>
     *技能返回信息 - 攻击性技能
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:SkillResultByAttackInfo)
        com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByAttackInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.ninelook.wecard.protocol.beans.BeanFightMessage.internal_static_SkillResultByAttackInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.ninelook.wecard.protocol.beans.BeanFightMessage.internal_static_SkillResultByAttackInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByAttackInfo.class, com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByAttackInfo.Builder.class);
      }

      // Construct using com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByAttackInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getFightAttackResultInfoFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (fightAttackResultInfoBuilder_ == null) {
          fightAttackResultInfo_ = com.ninelook.wecard.protocol.beans.BeanFightMessage.FightAttackResultInfo.getDefaultInstance();
        } else {
          fightAttackResultInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.ninelook.wecard.protocol.beans.BeanFightMessage.internal_static_SkillResultByAttackInfo_descriptor;
      }

      public com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByAttackInfo getDefaultInstanceForType() {
        return com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByAttackInfo.getDefaultInstance();
      }

      public com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByAttackInfo build() {
        com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByAttackInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByAttackInfo buildPartial() {
        com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByAttackInfo result = new com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByAttackInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (fightAttackResultInfoBuilder_ == null) {
          result.fightAttackResultInfo_ = fightAttackResultInfo_;
        } else {
          result.fightAttackResultInfo_ = fightAttackResultInfoBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByAttackInfo) {
          return mergeFrom((com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByAttackInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByAttackInfo other) {
        if (other == com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByAttackInfo.getDefaultInstance()) return this;
        if (other.hasFightAttackResultInfo()) {
          mergeFightAttackResultInfo(other.getFightAttackResultInfo());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasFightAttackResultInfo()) {
          
          return false;
        }
        if (!getFightAttackResultInfo().isInitialized()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByAttackInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByAttackInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.ninelook.wecard.protocol.beans.BeanFightMessage.FightAttackResultInfo fightAttackResultInfo_ = com.ninelook.wecard.protocol.beans.BeanFightMessage.FightAttackResultInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.ninelook.wecard.protocol.beans.BeanFightMessage.FightAttackResultInfo, com.ninelook.wecard.protocol.beans.BeanFightMessage.FightAttackResultInfo.Builder, com.ninelook.wecard.protocol.beans.BeanFightMessage.FightAttackResultInfoOrBuilder> fightAttackResultInfoBuilder_;
      /**
       * <code>required .FightAttackResultInfo fightAttackResultInfo = 1;</code>
       */
      public boolean hasFightAttackResultInfo() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .FightAttackResultInfo fightAttackResultInfo = 1;</code>
       */
      public com.ninelook.wecard.protocol.beans.BeanFightMessage.FightAttackResultInfo getFightAttackResultInfo() {
        if (fightAttackResultInfoBuilder_ == null) {
          return fightAttackResultInfo_;
        } else {
          return fightAttackResultInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>required .FightAttackResultInfo fightAttackResultInfo = 1;</code>
       */
      public Builder setFightAttackResultInfo(com.ninelook.wecard.protocol.beans.BeanFightMessage.FightAttackResultInfo value) {
        if (fightAttackResultInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          fightAttackResultInfo_ = value;
          onChanged();
        } else {
          fightAttackResultInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .FightAttackResultInfo fightAttackResultInfo = 1;</code>
       */
      public Builder setFightAttackResultInfo(
          com.ninelook.wecard.protocol.beans.BeanFightMessage.FightAttackResultInfo.Builder builderForValue) {
        if (fightAttackResultInfoBuilder_ == null) {
          fightAttackResultInfo_ = builderForValue.build();
          onChanged();
        } else {
          fightAttackResultInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .FightAttackResultInfo fightAttackResultInfo = 1;</code>
       */
      public Builder mergeFightAttackResultInfo(com.ninelook.wecard.protocol.beans.BeanFightMessage.FightAttackResultInfo value) {
        if (fightAttackResultInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              fightAttackResultInfo_ != com.ninelook.wecard.protocol.beans.BeanFightMessage.FightAttackResultInfo.getDefaultInstance()) {
            fightAttackResultInfo_ =
              com.ninelook.wecard.protocol.beans.BeanFightMessage.FightAttackResultInfo.newBuilder(fightAttackResultInfo_).mergeFrom(value).buildPartial();
          } else {
            fightAttackResultInfo_ = value;
          }
          onChanged();
        } else {
          fightAttackResultInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .FightAttackResultInfo fightAttackResultInfo = 1;</code>
       */
      public Builder clearFightAttackResultInfo() {
        if (fightAttackResultInfoBuilder_ == null) {
          fightAttackResultInfo_ = com.ninelook.wecard.protocol.beans.BeanFightMessage.FightAttackResultInfo.getDefaultInstance();
          onChanged();
        } else {
          fightAttackResultInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>required .FightAttackResultInfo fightAttackResultInfo = 1;</code>
       */
      public com.ninelook.wecard.protocol.beans.BeanFightMessage.FightAttackResultInfo.Builder getFightAttackResultInfoBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getFightAttackResultInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>required .FightAttackResultInfo fightAttackResultInfo = 1;</code>
       */
      public com.ninelook.wecard.protocol.beans.BeanFightMessage.FightAttackResultInfoOrBuilder getFightAttackResultInfoOrBuilder() {
        if (fightAttackResultInfoBuilder_ != null) {
          return fightAttackResultInfoBuilder_.getMessageOrBuilder();
        } else {
          return fightAttackResultInfo_;
        }
      }
      /**
       * <code>required .FightAttackResultInfo fightAttackResultInfo = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.ninelook.wecard.protocol.beans.BeanFightMessage.FightAttackResultInfo, com.ninelook.wecard.protocol.beans.BeanFightMessage.FightAttackResultInfo.Builder, com.ninelook.wecard.protocol.beans.BeanFightMessage.FightAttackResultInfoOrBuilder> 
          getFightAttackResultInfoFieldBuilder() {
        if (fightAttackResultInfoBuilder_ == null) {
          fightAttackResultInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.ninelook.wecard.protocol.beans.BeanFightMessage.FightAttackResultInfo, com.ninelook.wecard.protocol.beans.BeanFightMessage.FightAttackResultInfo.Builder, com.ninelook.wecard.protocol.beans.BeanFightMessage.FightAttackResultInfoOrBuilder>(
                  getFightAttackResultInfo(),
                  getParentForChildren(),
                  isClean());
          fightAttackResultInfo_ = null;
        }
        return fightAttackResultInfoBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:SkillResultByAttackInfo)
    }

    static {
      defaultInstance = new SkillResultByAttackInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:SkillResultByAttackInfo)
  }

  public interface SkillResultByBloodInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:SkillResultByBloodInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .ItemByIntInt item = 1;</code>
     *
     * <pre>
     *加血受益实体列表 k:实体ID v:加血数量
     * </pre>
     */
    java.util.List<com.ninelook.wecard.protocol.beans.BeanCommonMessage.ItemByIntInt> 
        getItemList();
    /**
     * <code>repeated .ItemByIntInt item = 1;</code>
     *
     * <pre>
     *加血受益实体列表 k:实体ID v:加血数量
     * </pre>
     */
    com.ninelook.wecard.protocol.beans.BeanCommonMessage.ItemByIntInt getItem(int index);
    /**
     * <code>repeated .ItemByIntInt item = 1;</code>
     *
     * <pre>
     *加血受益实体列表 k:实体ID v:加血数量
     * </pre>
     */
    int getItemCount();
    /**
     * <code>repeated .ItemByIntInt item = 1;</code>
     *
     * <pre>
     *加血受益实体列表 k:实体ID v:加血数量
     * </pre>
     */
    java.util.List<? extends com.ninelook.wecard.protocol.beans.BeanCommonMessage.ItemByIntIntOrBuilder> 
        getItemOrBuilderList();
    /**
     * <code>repeated .ItemByIntInt item = 1;</code>
     *
     * <pre>
     *加血受益实体列表 k:实体ID v:加血数量
     * </pre>
     */
    com.ninelook.wecard.protocol.beans.BeanCommonMessage.ItemByIntIntOrBuilder getItemOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code SkillResultByBloodInfo}
   *
   * <pre>
   *技能返回信息 - 加血技能
   * </pre>
   */
  public static final class SkillResultByBloodInfo extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:SkillResultByBloodInfo)
      SkillResultByBloodInfoOrBuilder {
    // Use SkillResultByBloodInfo.newBuilder() to construct.
    private SkillResultByBloodInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SkillResultByBloodInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SkillResultByBloodInfo defaultInstance;
    public static SkillResultByBloodInfo getDefaultInstance() {
      return defaultInstance;
    }

    public SkillResultByBloodInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SkillResultByBloodInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                item_ = new java.util.ArrayList<com.ninelook.wecard.protocol.beans.BeanCommonMessage.ItemByIntInt>();
                mutable_bitField0_ |= 0x00000001;
              }
              item_.add(input.readMessage(com.ninelook.wecard.protocol.beans.BeanCommonMessage.ItemByIntInt.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          item_ = java.util.Collections.unmodifiableList(item_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.ninelook.wecard.protocol.beans.BeanFightMessage.internal_static_SkillResultByBloodInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.ninelook.wecard.protocol.beans.BeanFightMessage.internal_static_SkillResultByBloodInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByBloodInfo.class, com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByBloodInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<SkillResultByBloodInfo> PARSER =
        new com.google.protobuf.AbstractParser<SkillResultByBloodInfo>() {
      public SkillResultByBloodInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SkillResultByBloodInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SkillResultByBloodInfo> getParserForType() {
      return PARSER;
    }

    public static final int ITEM_FIELD_NUMBER = 1;
    private java.util.List<com.ninelook.wecard.protocol.beans.BeanCommonMessage.ItemByIntInt> item_;
    /**
     * <code>repeated .ItemByIntInt item = 1;</code>
     *
     * <pre>
     *加血受益实体列表 k:实体ID v:加血数量
     * </pre>
     */
    public java.util.List<com.ninelook.wecard.protocol.beans.BeanCommonMessage.ItemByIntInt> getItemList() {
      return item_;
    }
    /**
     * <code>repeated .ItemByIntInt item = 1;</code>
     *
     * <pre>
     *加血受益实体列表 k:实体ID v:加血数量
     * </pre>
     */
    public java.util.List<? extends com.ninelook.wecard.protocol.beans.BeanCommonMessage.ItemByIntIntOrBuilder> 
        getItemOrBuilderList() {
      return item_;
    }
    /**
     * <code>repeated .ItemByIntInt item = 1;</code>
     *
     * <pre>
     *加血受益实体列表 k:实体ID v:加血数量
     * </pre>
     */
    public int getItemCount() {
      return item_.size();
    }
    /**
     * <code>repeated .ItemByIntInt item = 1;</code>
     *
     * <pre>
     *加血受益实体列表 k:实体ID v:加血数量
     * </pre>
     */
    public com.ninelook.wecard.protocol.beans.BeanCommonMessage.ItemByIntInt getItem(int index) {
      return item_.get(index);
    }
    /**
     * <code>repeated .ItemByIntInt item = 1;</code>
     *
     * <pre>
     *加血受益实体列表 k:实体ID v:加血数量
     * </pre>
     */
    public com.ninelook.wecard.protocol.beans.BeanCommonMessage.ItemByIntIntOrBuilder getItemOrBuilder(
        int index) {
      return item_.get(index);
    }

    private void initFields() {
      item_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      for (int i = 0; i < getItemCount(); i++) {
        if (!getItem(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < item_.size(); i++) {
        output.writeMessage(1, item_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < item_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, item_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByBloodInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByBloodInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByBloodInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByBloodInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByBloodInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByBloodInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByBloodInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByBloodInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByBloodInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByBloodInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByBloodInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code SkillResultByBloodInfo}
     *
     * <pre>
     *技能返回信息 - 加血技能
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:SkillResultByBloodInfo)
        com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByBloodInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.ninelook.wecard.protocol.beans.BeanFightMessage.internal_static_SkillResultByBloodInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.ninelook.wecard.protocol.beans.BeanFightMessage.internal_static_SkillResultByBloodInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByBloodInfo.class, com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByBloodInfo.Builder.class);
      }

      // Construct using com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByBloodInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getItemFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (itemBuilder_ == null) {
          item_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          itemBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.ninelook.wecard.protocol.beans.BeanFightMessage.internal_static_SkillResultByBloodInfo_descriptor;
      }

      public com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByBloodInfo getDefaultInstanceForType() {
        return com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByBloodInfo.getDefaultInstance();
      }

      public com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByBloodInfo build() {
        com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByBloodInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByBloodInfo buildPartial() {
        com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByBloodInfo result = new com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByBloodInfo(this);
        int from_bitField0_ = bitField0_;
        if (itemBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            item_ = java.util.Collections.unmodifiableList(item_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.item_ = item_;
        } else {
          result.item_ = itemBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByBloodInfo) {
          return mergeFrom((com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByBloodInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByBloodInfo other) {
        if (other == com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByBloodInfo.getDefaultInstance()) return this;
        if (itemBuilder_ == null) {
          if (!other.item_.isEmpty()) {
            if (item_.isEmpty()) {
              item_ = other.item_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureItemIsMutable();
              item_.addAll(other.item_);
            }
            onChanged();
          }
        } else {
          if (!other.item_.isEmpty()) {
            if (itemBuilder_.isEmpty()) {
              itemBuilder_.dispose();
              itemBuilder_ = null;
              item_ = other.item_;
              bitField0_ = (bitField0_ & ~0x00000001);
              itemBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getItemFieldBuilder() : null;
            } else {
              itemBuilder_.addAllMessages(other.item_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getItemCount(); i++) {
          if (!getItem(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByBloodInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByBloodInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<com.ninelook.wecard.protocol.beans.BeanCommonMessage.ItemByIntInt> item_ =
        java.util.Collections.emptyList();
      private void ensureItemIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          item_ = new java.util.ArrayList<com.ninelook.wecard.protocol.beans.BeanCommonMessage.ItemByIntInt>(item_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.ninelook.wecard.protocol.beans.BeanCommonMessage.ItemByIntInt, com.ninelook.wecard.protocol.beans.BeanCommonMessage.ItemByIntInt.Builder, com.ninelook.wecard.protocol.beans.BeanCommonMessage.ItemByIntIntOrBuilder> itemBuilder_;

      /**
       * <code>repeated .ItemByIntInt item = 1;</code>
       *
       * <pre>
       *加血受益实体列表 k:实体ID v:加血数量
       * </pre>
       */
      public java.util.List<com.ninelook.wecard.protocol.beans.BeanCommonMessage.ItemByIntInt> getItemList() {
        if (itemBuilder_ == null) {
          return java.util.Collections.unmodifiableList(item_);
        } else {
          return itemBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .ItemByIntInt item = 1;</code>
       *
       * <pre>
       *加血受益实体列表 k:实体ID v:加血数量
       * </pre>
       */
      public int getItemCount() {
        if (itemBuilder_ == null) {
          return item_.size();
        } else {
          return itemBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .ItemByIntInt item = 1;</code>
       *
       * <pre>
       *加血受益实体列表 k:实体ID v:加血数量
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanCommonMessage.ItemByIntInt getItem(int index) {
        if (itemBuilder_ == null) {
          return item_.get(index);
        } else {
          return itemBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .ItemByIntInt item = 1;</code>
       *
       * <pre>
       *加血受益实体列表 k:实体ID v:加血数量
       * </pre>
       */
      public Builder setItem(
          int index, com.ninelook.wecard.protocol.beans.BeanCommonMessage.ItemByIntInt value) {
        if (itemBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureItemIsMutable();
          item_.set(index, value);
          onChanged();
        } else {
          itemBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .ItemByIntInt item = 1;</code>
       *
       * <pre>
       *加血受益实体列表 k:实体ID v:加血数量
       * </pre>
       */
      public Builder setItem(
          int index, com.ninelook.wecard.protocol.beans.BeanCommonMessage.ItemByIntInt.Builder builderForValue) {
        if (itemBuilder_ == null) {
          ensureItemIsMutable();
          item_.set(index, builderForValue.build());
          onChanged();
        } else {
          itemBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ItemByIntInt item = 1;</code>
       *
       * <pre>
       *加血受益实体列表 k:实体ID v:加血数量
       * </pre>
       */
      public Builder addItem(com.ninelook.wecard.protocol.beans.BeanCommonMessage.ItemByIntInt value) {
        if (itemBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureItemIsMutable();
          item_.add(value);
          onChanged();
        } else {
          itemBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .ItemByIntInt item = 1;</code>
       *
       * <pre>
       *加血受益实体列表 k:实体ID v:加血数量
       * </pre>
       */
      public Builder addItem(
          int index, com.ninelook.wecard.protocol.beans.BeanCommonMessage.ItemByIntInt value) {
        if (itemBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureItemIsMutable();
          item_.add(index, value);
          onChanged();
        } else {
          itemBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .ItemByIntInt item = 1;</code>
       *
       * <pre>
       *加血受益实体列表 k:实体ID v:加血数量
       * </pre>
       */
      public Builder addItem(
          com.ninelook.wecard.protocol.beans.BeanCommonMessage.ItemByIntInt.Builder builderForValue) {
        if (itemBuilder_ == null) {
          ensureItemIsMutable();
          item_.add(builderForValue.build());
          onChanged();
        } else {
          itemBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ItemByIntInt item = 1;</code>
       *
       * <pre>
       *加血受益实体列表 k:实体ID v:加血数量
       * </pre>
       */
      public Builder addItem(
          int index, com.ninelook.wecard.protocol.beans.BeanCommonMessage.ItemByIntInt.Builder builderForValue) {
        if (itemBuilder_ == null) {
          ensureItemIsMutable();
          item_.add(index, builderForValue.build());
          onChanged();
        } else {
          itemBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ItemByIntInt item = 1;</code>
       *
       * <pre>
       *加血受益实体列表 k:实体ID v:加血数量
       * </pre>
       */
      public Builder addAllItem(
          java.lang.Iterable<? extends com.ninelook.wecard.protocol.beans.BeanCommonMessage.ItemByIntInt> values) {
        if (itemBuilder_ == null) {
          ensureItemIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, item_);
          onChanged();
        } else {
          itemBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .ItemByIntInt item = 1;</code>
       *
       * <pre>
       *加血受益实体列表 k:实体ID v:加血数量
       * </pre>
       */
      public Builder clearItem() {
        if (itemBuilder_ == null) {
          item_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          itemBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .ItemByIntInt item = 1;</code>
       *
       * <pre>
       *加血受益实体列表 k:实体ID v:加血数量
       * </pre>
       */
      public Builder removeItem(int index) {
        if (itemBuilder_ == null) {
          ensureItemIsMutable();
          item_.remove(index);
          onChanged();
        } else {
          itemBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .ItemByIntInt item = 1;</code>
       *
       * <pre>
       *加血受益实体列表 k:实体ID v:加血数量
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanCommonMessage.ItemByIntInt.Builder getItemBuilder(
          int index) {
        return getItemFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .ItemByIntInt item = 1;</code>
       *
       * <pre>
       *加血受益实体列表 k:实体ID v:加血数量
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanCommonMessage.ItemByIntIntOrBuilder getItemOrBuilder(
          int index) {
        if (itemBuilder_ == null) {
          return item_.get(index);  } else {
          return itemBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .ItemByIntInt item = 1;</code>
       *
       * <pre>
       *加血受益实体列表 k:实体ID v:加血数量
       * </pre>
       */
      public java.util.List<? extends com.ninelook.wecard.protocol.beans.BeanCommonMessage.ItemByIntIntOrBuilder> 
           getItemOrBuilderList() {
        if (itemBuilder_ != null) {
          return itemBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(item_);
        }
      }
      /**
       * <code>repeated .ItemByIntInt item = 1;</code>
       *
       * <pre>
       *加血受益实体列表 k:实体ID v:加血数量
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanCommonMessage.ItemByIntInt.Builder addItemBuilder() {
        return getItemFieldBuilder().addBuilder(
            com.ninelook.wecard.protocol.beans.BeanCommonMessage.ItemByIntInt.getDefaultInstance());
      }
      /**
       * <code>repeated .ItemByIntInt item = 1;</code>
       *
       * <pre>
       *加血受益实体列表 k:实体ID v:加血数量
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanCommonMessage.ItemByIntInt.Builder addItemBuilder(
          int index) {
        return getItemFieldBuilder().addBuilder(
            index, com.ninelook.wecard.protocol.beans.BeanCommonMessage.ItemByIntInt.getDefaultInstance());
      }
      /**
       * <code>repeated .ItemByIntInt item = 1;</code>
       *
       * <pre>
       *加血受益实体列表 k:实体ID v:加血数量
       * </pre>
       */
      public java.util.List<com.ninelook.wecard.protocol.beans.BeanCommonMessage.ItemByIntInt.Builder> 
           getItemBuilderList() {
        return getItemFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.ninelook.wecard.protocol.beans.BeanCommonMessage.ItemByIntInt, com.ninelook.wecard.protocol.beans.BeanCommonMessage.ItemByIntInt.Builder, com.ninelook.wecard.protocol.beans.BeanCommonMessage.ItemByIntIntOrBuilder> 
          getItemFieldBuilder() {
        if (itemBuilder_ == null) {
          itemBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.ninelook.wecard.protocol.beans.BeanCommonMessage.ItemByIntInt, com.ninelook.wecard.protocol.beans.BeanCommonMessage.ItemByIntInt.Builder, com.ninelook.wecard.protocol.beans.BeanCommonMessage.ItemByIntIntOrBuilder>(
                  item_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          item_ = null;
        }
        return itemBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:SkillResultByBloodInfo)
    }

    static {
      defaultInstance = new SkillResultByBloodInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:SkillResultByBloodInfo)
  }

  public interface SkillResultByBuffInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:SkillResultByBuffInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .BuffEntityInfo buffEntityInfo = 3;</code>
     *
     * <pre>
     *此次BUFF触发影响到的实体
     * </pre>
     */
    java.util.List<com.ninelook.wecard.protocol.beans.BeanFightMessage.BuffEntityInfo> 
        getBuffEntityInfoList();
    /**
     * <code>repeated .BuffEntityInfo buffEntityInfo = 3;</code>
     *
     * <pre>
     *此次BUFF触发影响到的实体
     * </pre>
     */
    com.ninelook.wecard.protocol.beans.BeanFightMessage.BuffEntityInfo getBuffEntityInfo(int index);
    /**
     * <code>repeated .BuffEntityInfo buffEntityInfo = 3;</code>
     *
     * <pre>
     *此次BUFF触发影响到的实体
     * </pre>
     */
    int getBuffEntityInfoCount();
    /**
     * <code>repeated .BuffEntityInfo buffEntityInfo = 3;</code>
     *
     * <pre>
     *此次BUFF触发影响到的实体
     * </pre>
     */
    java.util.List<? extends com.ninelook.wecard.protocol.beans.BeanFightMessage.BuffEntityInfoOrBuilder> 
        getBuffEntityInfoOrBuilderList();
    /**
     * <code>repeated .BuffEntityInfo buffEntityInfo = 3;</code>
     *
     * <pre>
     *此次BUFF触发影响到的实体
     * </pre>
     */
    com.ninelook.wecard.protocol.beans.BeanFightMessage.BuffEntityInfoOrBuilder getBuffEntityInfoOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code SkillResultByBuffInfo}
   *
   * <pre>
   *技能返回信息 - 触发BUFF技能
   * </pre>
   */
  public static final class SkillResultByBuffInfo extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:SkillResultByBuffInfo)
      SkillResultByBuffInfoOrBuilder {
    // Use SkillResultByBuffInfo.newBuilder() to construct.
    private SkillResultByBuffInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SkillResultByBuffInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SkillResultByBuffInfo defaultInstance;
    public static SkillResultByBuffInfo getDefaultInstance() {
      return defaultInstance;
    }

    public SkillResultByBuffInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SkillResultByBuffInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                buffEntityInfo_ = new java.util.ArrayList<com.ninelook.wecard.protocol.beans.BeanFightMessage.BuffEntityInfo>();
                mutable_bitField0_ |= 0x00000001;
              }
              buffEntityInfo_.add(input.readMessage(com.ninelook.wecard.protocol.beans.BeanFightMessage.BuffEntityInfo.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          buffEntityInfo_ = java.util.Collections.unmodifiableList(buffEntityInfo_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.ninelook.wecard.protocol.beans.BeanFightMessage.internal_static_SkillResultByBuffInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.ninelook.wecard.protocol.beans.BeanFightMessage.internal_static_SkillResultByBuffInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByBuffInfo.class, com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByBuffInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<SkillResultByBuffInfo> PARSER =
        new com.google.protobuf.AbstractParser<SkillResultByBuffInfo>() {
      public SkillResultByBuffInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SkillResultByBuffInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SkillResultByBuffInfo> getParserForType() {
      return PARSER;
    }

    public static final int BUFFENTITYINFO_FIELD_NUMBER = 3;
    private java.util.List<com.ninelook.wecard.protocol.beans.BeanFightMessage.BuffEntityInfo> buffEntityInfo_;
    /**
     * <code>repeated .BuffEntityInfo buffEntityInfo = 3;</code>
     *
     * <pre>
     *此次BUFF触发影响到的实体
     * </pre>
     */
    public java.util.List<com.ninelook.wecard.protocol.beans.BeanFightMessage.BuffEntityInfo> getBuffEntityInfoList() {
      return buffEntityInfo_;
    }
    /**
     * <code>repeated .BuffEntityInfo buffEntityInfo = 3;</code>
     *
     * <pre>
     *此次BUFF触发影响到的实体
     * </pre>
     */
    public java.util.List<? extends com.ninelook.wecard.protocol.beans.BeanFightMessage.BuffEntityInfoOrBuilder> 
        getBuffEntityInfoOrBuilderList() {
      return buffEntityInfo_;
    }
    /**
     * <code>repeated .BuffEntityInfo buffEntityInfo = 3;</code>
     *
     * <pre>
     *此次BUFF触发影响到的实体
     * </pre>
     */
    public int getBuffEntityInfoCount() {
      return buffEntityInfo_.size();
    }
    /**
     * <code>repeated .BuffEntityInfo buffEntityInfo = 3;</code>
     *
     * <pre>
     *此次BUFF触发影响到的实体
     * </pre>
     */
    public com.ninelook.wecard.protocol.beans.BeanFightMessage.BuffEntityInfo getBuffEntityInfo(int index) {
      return buffEntityInfo_.get(index);
    }
    /**
     * <code>repeated .BuffEntityInfo buffEntityInfo = 3;</code>
     *
     * <pre>
     *此次BUFF触发影响到的实体
     * </pre>
     */
    public com.ninelook.wecard.protocol.beans.BeanFightMessage.BuffEntityInfoOrBuilder getBuffEntityInfoOrBuilder(
        int index) {
      return buffEntityInfo_.get(index);
    }

    private void initFields() {
      buffEntityInfo_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      for (int i = 0; i < getBuffEntityInfoCount(); i++) {
        if (!getBuffEntityInfo(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < buffEntityInfo_.size(); i++) {
        output.writeMessage(3, buffEntityInfo_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < buffEntityInfo_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, buffEntityInfo_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByBuffInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByBuffInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByBuffInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByBuffInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByBuffInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByBuffInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByBuffInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByBuffInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByBuffInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByBuffInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByBuffInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code SkillResultByBuffInfo}
     *
     * <pre>
     *技能返回信息 - 触发BUFF技能
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:SkillResultByBuffInfo)
        com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByBuffInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.ninelook.wecard.protocol.beans.BeanFightMessage.internal_static_SkillResultByBuffInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.ninelook.wecard.protocol.beans.BeanFightMessage.internal_static_SkillResultByBuffInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByBuffInfo.class, com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByBuffInfo.Builder.class);
      }

      // Construct using com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByBuffInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getBuffEntityInfoFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (buffEntityInfoBuilder_ == null) {
          buffEntityInfo_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          buffEntityInfoBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.ninelook.wecard.protocol.beans.BeanFightMessage.internal_static_SkillResultByBuffInfo_descriptor;
      }

      public com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByBuffInfo getDefaultInstanceForType() {
        return com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByBuffInfo.getDefaultInstance();
      }

      public com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByBuffInfo build() {
        com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByBuffInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByBuffInfo buildPartial() {
        com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByBuffInfo result = new com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByBuffInfo(this);
        int from_bitField0_ = bitField0_;
        if (buffEntityInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            buffEntityInfo_ = java.util.Collections.unmodifiableList(buffEntityInfo_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.buffEntityInfo_ = buffEntityInfo_;
        } else {
          result.buffEntityInfo_ = buffEntityInfoBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByBuffInfo) {
          return mergeFrom((com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByBuffInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByBuffInfo other) {
        if (other == com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByBuffInfo.getDefaultInstance()) return this;
        if (buffEntityInfoBuilder_ == null) {
          if (!other.buffEntityInfo_.isEmpty()) {
            if (buffEntityInfo_.isEmpty()) {
              buffEntityInfo_ = other.buffEntityInfo_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureBuffEntityInfoIsMutable();
              buffEntityInfo_.addAll(other.buffEntityInfo_);
            }
            onChanged();
          }
        } else {
          if (!other.buffEntityInfo_.isEmpty()) {
            if (buffEntityInfoBuilder_.isEmpty()) {
              buffEntityInfoBuilder_.dispose();
              buffEntityInfoBuilder_ = null;
              buffEntityInfo_ = other.buffEntityInfo_;
              bitField0_ = (bitField0_ & ~0x00000001);
              buffEntityInfoBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getBuffEntityInfoFieldBuilder() : null;
            } else {
              buffEntityInfoBuilder_.addAllMessages(other.buffEntityInfo_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getBuffEntityInfoCount(); i++) {
          if (!getBuffEntityInfo(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByBuffInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByBuffInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<com.ninelook.wecard.protocol.beans.BeanFightMessage.BuffEntityInfo> buffEntityInfo_ =
        java.util.Collections.emptyList();
      private void ensureBuffEntityInfoIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          buffEntityInfo_ = new java.util.ArrayList<com.ninelook.wecard.protocol.beans.BeanFightMessage.BuffEntityInfo>(buffEntityInfo_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.ninelook.wecard.protocol.beans.BeanFightMessage.BuffEntityInfo, com.ninelook.wecard.protocol.beans.BeanFightMessage.BuffEntityInfo.Builder, com.ninelook.wecard.protocol.beans.BeanFightMessage.BuffEntityInfoOrBuilder> buffEntityInfoBuilder_;

      /**
       * <code>repeated .BuffEntityInfo buffEntityInfo = 3;</code>
       *
       * <pre>
       *此次BUFF触发影响到的实体
       * </pre>
       */
      public java.util.List<com.ninelook.wecard.protocol.beans.BeanFightMessage.BuffEntityInfo> getBuffEntityInfoList() {
        if (buffEntityInfoBuilder_ == null) {
          return java.util.Collections.unmodifiableList(buffEntityInfo_);
        } else {
          return buffEntityInfoBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .BuffEntityInfo buffEntityInfo = 3;</code>
       *
       * <pre>
       *此次BUFF触发影响到的实体
       * </pre>
       */
      public int getBuffEntityInfoCount() {
        if (buffEntityInfoBuilder_ == null) {
          return buffEntityInfo_.size();
        } else {
          return buffEntityInfoBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .BuffEntityInfo buffEntityInfo = 3;</code>
       *
       * <pre>
       *此次BUFF触发影响到的实体
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanFightMessage.BuffEntityInfo getBuffEntityInfo(int index) {
        if (buffEntityInfoBuilder_ == null) {
          return buffEntityInfo_.get(index);
        } else {
          return buffEntityInfoBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .BuffEntityInfo buffEntityInfo = 3;</code>
       *
       * <pre>
       *此次BUFF触发影响到的实体
       * </pre>
       */
      public Builder setBuffEntityInfo(
          int index, com.ninelook.wecard.protocol.beans.BeanFightMessage.BuffEntityInfo value) {
        if (buffEntityInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBuffEntityInfoIsMutable();
          buffEntityInfo_.set(index, value);
          onChanged();
        } else {
          buffEntityInfoBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .BuffEntityInfo buffEntityInfo = 3;</code>
       *
       * <pre>
       *此次BUFF触发影响到的实体
       * </pre>
       */
      public Builder setBuffEntityInfo(
          int index, com.ninelook.wecard.protocol.beans.BeanFightMessage.BuffEntityInfo.Builder builderForValue) {
        if (buffEntityInfoBuilder_ == null) {
          ensureBuffEntityInfoIsMutable();
          buffEntityInfo_.set(index, builderForValue.build());
          onChanged();
        } else {
          buffEntityInfoBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .BuffEntityInfo buffEntityInfo = 3;</code>
       *
       * <pre>
       *此次BUFF触发影响到的实体
       * </pre>
       */
      public Builder addBuffEntityInfo(com.ninelook.wecard.protocol.beans.BeanFightMessage.BuffEntityInfo value) {
        if (buffEntityInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBuffEntityInfoIsMutable();
          buffEntityInfo_.add(value);
          onChanged();
        } else {
          buffEntityInfoBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .BuffEntityInfo buffEntityInfo = 3;</code>
       *
       * <pre>
       *此次BUFF触发影响到的实体
       * </pre>
       */
      public Builder addBuffEntityInfo(
          int index, com.ninelook.wecard.protocol.beans.BeanFightMessage.BuffEntityInfo value) {
        if (buffEntityInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBuffEntityInfoIsMutable();
          buffEntityInfo_.add(index, value);
          onChanged();
        } else {
          buffEntityInfoBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .BuffEntityInfo buffEntityInfo = 3;</code>
       *
       * <pre>
       *此次BUFF触发影响到的实体
       * </pre>
       */
      public Builder addBuffEntityInfo(
          com.ninelook.wecard.protocol.beans.BeanFightMessage.BuffEntityInfo.Builder builderForValue) {
        if (buffEntityInfoBuilder_ == null) {
          ensureBuffEntityInfoIsMutable();
          buffEntityInfo_.add(builderForValue.build());
          onChanged();
        } else {
          buffEntityInfoBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .BuffEntityInfo buffEntityInfo = 3;</code>
       *
       * <pre>
       *此次BUFF触发影响到的实体
       * </pre>
       */
      public Builder addBuffEntityInfo(
          int index, com.ninelook.wecard.protocol.beans.BeanFightMessage.BuffEntityInfo.Builder builderForValue) {
        if (buffEntityInfoBuilder_ == null) {
          ensureBuffEntityInfoIsMutable();
          buffEntityInfo_.add(index, builderForValue.build());
          onChanged();
        } else {
          buffEntityInfoBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .BuffEntityInfo buffEntityInfo = 3;</code>
       *
       * <pre>
       *此次BUFF触发影响到的实体
       * </pre>
       */
      public Builder addAllBuffEntityInfo(
          java.lang.Iterable<? extends com.ninelook.wecard.protocol.beans.BeanFightMessage.BuffEntityInfo> values) {
        if (buffEntityInfoBuilder_ == null) {
          ensureBuffEntityInfoIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, buffEntityInfo_);
          onChanged();
        } else {
          buffEntityInfoBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .BuffEntityInfo buffEntityInfo = 3;</code>
       *
       * <pre>
       *此次BUFF触发影响到的实体
       * </pre>
       */
      public Builder clearBuffEntityInfo() {
        if (buffEntityInfoBuilder_ == null) {
          buffEntityInfo_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          buffEntityInfoBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .BuffEntityInfo buffEntityInfo = 3;</code>
       *
       * <pre>
       *此次BUFF触发影响到的实体
       * </pre>
       */
      public Builder removeBuffEntityInfo(int index) {
        if (buffEntityInfoBuilder_ == null) {
          ensureBuffEntityInfoIsMutable();
          buffEntityInfo_.remove(index);
          onChanged();
        } else {
          buffEntityInfoBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .BuffEntityInfo buffEntityInfo = 3;</code>
       *
       * <pre>
       *此次BUFF触发影响到的实体
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanFightMessage.BuffEntityInfo.Builder getBuffEntityInfoBuilder(
          int index) {
        return getBuffEntityInfoFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .BuffEntityInfo buffEntityInfo = 3;</code>
       *
       * <pre>
       *此次BUFF触发影响到的实体
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanFightMessage.BuffEntityInfoOrBuilder getBuffEntityInfoOrBuilder(
          int index) {
        if (buffEntityInfoBuilder_ == null) {
          return buffEntityInfo_.get(index);  } else {
          return buffEntityInfoBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .BuffEntityInfo buffEntityInfo = 3;</code>
       *
       * <pre>
       *此次BUFF触发影响到的实体
       * </pre>
       */
      public java.util.List<? extends com.ninelook.wecard.protocol.beans.BeanFightMessage.BuffEntityInfoOrBuilder> 
           getBuffEntityInfoOrBuilderList() {
        if (buffEntityInfoBuilder_ != null) {
          return buffEntityInfoBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(buffEntityInfo_);
        }
      }
      /**
       * <code>repeated .BuffEntityInfo buffEntityInfo = 3;</code>
       *
       * <pre>
       *此次BUFF触发影响到的实体
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanFightMessage.BuffEntityInfo.Builder addBuffEntityInfoBuilder() {
        return getBuffEntityInfoFieldBuilder().addBuilder(
            com.ninelook.wecard.protocol.beans.BeanFightMessage.BuffEntityInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .BuffEntityInfo buffEntityInfo = 3;</code>
       *
       * <pre>
       *此次BUFF触发影响到的实体
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanFightMessage.BuffEntityInfo.Builder addBuffEntityInfoBuilder(
          int index) {
        return getBuffEntityInfoFieldBuilder().addBuilder(
            index, com.ninelook.wecard.protocol.beans.BeanFightMessage.BuffEntityInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .BuffEntityInfo buffEntityInfo = 3;</code>
       *
       * <pre>
       *此次BUFF触发影响到的实体
       * </pre>
       */
      public java.util.List<com.ninelook.wecard.protocol.beans.BeanFightMessage.BuffEntityInfo.Builder> 
           getBuffEntityInfoBuilderList() {
        return getBuffEntityInfoFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.ninelook.wecard.protocol.beans.BeanFightMessage.BuffEntityInfo, com.ninelook.wecard.protocol.beans.BeanFightMessage.BuffEntityInfo.Builder, com.ninelook.wecard.protocol.beans.BeanFightMessage.BuffEntityInfoOrBuilder> 
          getBuffEntityInfoFieldBuilder() {
        if (buffEntityInfoBuilder_ == null) {
          buffEntityInfoBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.ninelook.wecard.protocol.beans.BeanFightMessage.BuffEntityInfo, com.ninelook.wecard.protocol.beans.BeanFightMessage.BuffEntityInfo.Builder, com.ninelook.wecard.protocol.beans.BeanFightMessage.BuffEntityInfoOrBuilder>(
                  buffEntityInfo_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          buffEntityInfo_ = null;
        }
        return buffEntityInfoBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:SkillResultByBuffInfo)
    }

    static {
      defaultInstance = new SkillResultByBuffInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:SkillResultByBuffInfo)
  }

  public interface SkillResultByCallupInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:SkillResultByCallupInfo)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code SkillResultByCallupInfo}
   *
   * <pre>
   *技能返回信息 - 召唤技能
   * </pre>
   */
  public static final class SkillResultByCallupInfo extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:SkillResultByCallupInfo)
      SkillResultByCallupInfoOrBuilder {
    // Use SkillResultByCallupInfo.newBuilder() to construct.
    private SkillResultByCallupInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SkillResultByCallupInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SkillResultByCallupInfo defaultInstance;
    public static SkillResultByCallupInfo getDefaultInstance() {
      return defaultInstance;
    }

    public SkillResultByCallupInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SkillResultByCallupInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.ninelook.wecard.protocol.beans.BeanFightMessage.internal_static_SkillResultByCallupInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.ninelook.wecard.protocol.beans.BeanFightMessage.internal_static_SkillResultByCallupInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByCallupInfo.class, com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByCallupInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<SkillResultByCallupInfo> PARSER =
        new com.google.protobuf.AbstractParser<SkillResultByCallupInfo>() {
      public SkillResultByCallupInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SkillResultByCallupInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SkillResultByCallupInfo> getParserForType() {
      return PARSER;
    }

    private void initFields() {
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByCallupInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByCallupInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByCallupInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByCallupInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByCallupInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByCallupInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByCallupInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByCallupInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByCallupInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByCallupInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByCallupInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code SkillResultByCallupInfo}
     *
     * <pre>
     *技能返回信息 - 召唤技能
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:SkillResultByCallupInfo)
        com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByCallupInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.ninelook.wecard.protocol.beans.BeanFightMessage.internal_static_SkillResultByCallupInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.ninelook.wecard.protocol.beans.BeanFightMessage.internal_static_SkillResultByCallupInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByCallupInfo.class, com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByCallupInfo.Builder.class);
      }

      // Construct using com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByCallupInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.ninelook.wecard.protocol.beans.BeanFightMessage.internal_static_SkillResultByCallupInfo_descriptor;
      }

      public com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByCallupInfo getDefaultInstanceForType() {
        return com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByCallupInfo.getDefaultInstance();
      }

      public com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByCallupInfo build() {
        com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByCallupInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByCallupInfo buildPartial() {
        com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByCallupInfo result = new com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByCallupInfo(this);
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByCallupInfo) {
          return mergeFrom((com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByCallupInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByCallupInfo other) {
        if (other == com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByCallupInfo.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByCallupInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByCallupInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      // @@protoc_insertion_point(builder_scope:SkillResultByCallupInfo)
    }

    static {
      defaultInstance = new SkillResultByCallupInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:SkillResultByCallupInfo)
  }

  public interface SkillResultInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:SkillResultInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int32 attackerEid = 1;</code>
     *
     * <pre>
     *攻击者eid
     * </pre>
     */
    boolean hasAttackerEid();
    /**
     * <code>optional int32 attackerEid = 1;</code>
     *
     * <pre>
     *攻击者eid
     * </pre>
     */
    int getAttackerEid();

    /**
     * <code>optional int32 skillId = 2;</code>
     *
     * <pre>
     *如果是技能攻击, 需提供技能ID
     * </pre>
     */
    boolean hasSkillId();
    /**
     * <code>optional int32 skillId = 2;</code>
     *
     * <pre>
     *如果是技能攻击, 需提供技能ID
     * </pre>
     */
    int getSkillId();

    /**
     * <code>optional .SkillResultByAttackInfo skillResultByAttackInfo = 3;</code>
     *
     * <pre>
     *技能返回信息 - 攻击性技能
     * </pre>
     */
    boolean hasSkillResultByAttackInfo();
    /**
     * <code>optional .SkillResultByAttackInfo skillResultByAttackInfo = 3;</code>
     *
     * <pre>
     *技能返回信息 - 攻击性技能
     * </pre>
     */
    com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByAttackInfo getSkillResultByAttackInfo();
    /**
     * <code>optional .SkillResultByAttackInfo skillResultByAttackInfo = 3;</code>
     *
     * <pre>
     *技能返回信息 - 攻击性技能
     * </pre>
     */
    com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByAttackInfoOrBuilder getSkillResultByAttackInfoOrBuilder();

    /**
     * <code>optional .SkillResultByBloodInfo skillResultByBloodInfo = 4;</code>
     *
     * <pre>
     *技能返回信息 - 加血技能
     * </pre>
     */
    boolean hasSkillResultByBloodInfo();
    /**
     * <code>optional .SkillResultByBloodInfo skillResultByBloodInfo = 4;</code>
     *
     * <pre>
     *技能返回信息 - 加血技能
     * </pre>
     */
    com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByBloodInfo getSkillResultByBloodInfo();
    /**
     * <code>optional .SkillResultByBloodInfo skillResultByBloodInfo = 4;</code>
     *
     * <pre>
     *技能返回信息 - 加血技能
     * </pre>
     */
    com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByBloodInfoOrBuilder getSkillResultByBloodInfoOrBuilder();

    /**
     * <code>optional .SkillResultByBuffInfo skillResultByBuffInfo = 5;</code>
     *
     * <pre>
     *技能返回信息 - 触发BUFF技能
     * </pre>
     */
    boolean hasSkillResultByBuffInfo();
    /**
     * <code>optional .SkillResultByBuffInfo skillResultByBuffInfo = 5;</code>
     *
     * <pre>
     *技能返回信息 - 触发BUFF技能
     * </pre>
     */
    com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByBuffInfo getSkillResultByBuffInfo();
    /**
     * <code>optional .SkillResultByBuffInfo skillResultByBuffInfo = 5;</code>
     *
     * <pre>
     *技能返回信息 - 触发BUFF技能
     * </pre>
     */
    com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByBuffInfoOrBuilder getSkillResultByBuffInfoOrBuilder();

    /**
     * <code>optional .SkillResultByCallupInfo skillResultByCallupInfo = 6;</code>
     *
     * <pre>
     *技能返回信息 - 召唤技能
     * </pre>
     */
    boolean hasSkillResultByCallupInfo();
    /**
     * <code>optional .SkillResultByCallupInfo skillResultByCallupInfo = 6;</code>
     *
     * <pre>
     *技能返回信息 - 召唤技能
     * </pre>
     */
    com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByCallupInfo getSkillResultByCallupInfo();
    /**
     * <code>optional .SkillResultByCallupInfo skillResultByCallupInfo = 6;</code>
     *
     * <pre>
     *技能返回信息 - 召唤技能
     * </pre>
     */
    com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByCallupInfoOrBuilder getSkillResultByCallupInfoOrBuilder();
  }
  /**
   * Protobuf type {@code SkillResultInfo}
   *
   * <pre>
   *技能返回信息
   * </pre>
   */
  public static final class SkillResultInfo extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:SkillResultInfo)
      SkillResultInfoOrBuilder {
    // Use SkillResultInfo.newBuilder() to construct.
    private SkillResultInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SkillResultInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SkillResultInfo defaultInstance;
    public static SkillResultInfo getDefaultInstance() {
      return defaultInstance;
    }

    public SkillResultInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SkillResultInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              attackerEid_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              skillId_ = input.readInt32();
              break;
            }
            case 26: {
              com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByAttackInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = skillResultByAttackInfo_.toBuilder();
              }
              skillResultByAttackInfo_ = input.readMessage(com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByAttackInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(skillResultByAttackInfo_);
                skillResultByAttackInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 34: {
              com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByBloodInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = skillResultByBloodInfo_.toBuilder();
              }
              skillResultByBloodInfo_ = input.readMessage(com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByBloodInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(skillResultByBloodInfo_);
                skillResultByBloodInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
            case 42: {
              com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByBuffInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000010) == 0x00000010)) {
                subBuilder = skillResultByBuffInfo_.toBuilder();
              }
              skillResultByBuffInfo_ = input.readMessage(com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByBuffInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(skillResultByBuffInfo_);
                skillResultByBuffInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000010;
              break;
            }
            case 50: {
              com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByCallupInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000020) == 0x00000020)) {
                subBuilder = skillResultByCallupInfo_.toBuilder();
              }
              skillResultByCallupInfo_ = input.readMessage(com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByCallupInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(skillResultByCallupInfo_);
                skillResultByCallupInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000020;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.ninelook.wecard.protocol.beans.BeanFightMessage.internal_static_SkillResultInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.ninelook.wecard.protocol.beans.BeanFightMessage.internal_static_SkillResultInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultInfo.class, com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<SkillResultInfo> PARSER =
        new com.google.protobuf.AbstractParser<SkillResultInfo>() {
      public SkillResultInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SkillResultInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SkillResultInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int ATTACKEREID_FIELD_NUMBER = 1;
    private int attackerEid_;
    /**
     * <code>optional int32 attackerEid = 1;</code>
     *
     * <pre>
     *攻击者eid
     * </pre>
     */
    public boolean hasAttackerEid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 attackerEid = 1;</code>
     *
     * <pre>
     *攻击者eid
     * </pre>
     */
    public int getAttackerEid() {
      return attackerEid_;
    }

    public static final int SKILLID_FIELD_NUMBER = 2;
    private int skillId_;
    /**
     * <code>optional int32 skillId = 2;</code>
     *
     * <pre>
     *如果是技能攻击, 需提供技能ID
     * </pre>
     */
    public boolean hasSkillId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 skillId = 2;</code>
     *
     * <pre>
     *如果是技能攻击, 需提供技能ID
     * </pre>
     */
    public int getSkillId() {
      return skillId_;
    }

    public static final int SKILLRESULTBYATTACKINFO_FIELD_NUMBER = 3;
    private com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByAttackInfo skillResultByAttackInfo_;
    /**
     * <code>optional .SkillResultByAttackInfo skillResultByAttackInfo = 3;</code>
     *
     * <pre>
     *技能返回信息 - 攻击性技能
     * </pre>
     */
    public boolean hasSkillResultByAttackInfo() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .SkillResultByAttackInfo skillResultByAttackInfo = 3;</code>
     *
     * <pre>
     *技能返回信息 - 攻击性技能
     * </pre>
     */
    public com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByAttackInfo getSkillResultByAttackInfo() {
      return skillResultByAttackInfo_;
    }
    /**
     * <code>optional .SkillResultByAttackInfo skillResultByAttackInfo = 3;</code>
     *
     * <pre>
     *技能返回信息 - 攻击性技能
     * </pre>
     */
    public com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByAttackInfoOrBuilder getSkillResultByAttackInfoOrBuilder() {
      return skillResultByAttackInfo_;
    }

    public static final int SKILLRESULTBYBLOODINFO_FIELD_NUMBER = 4;
    private com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByBloodInfo skillResultByBloodInfo_;
    /**
     * <code>optional .SkillResultByBloodInfo skillResultByBloodInfo = 4;</code>
     *
     * <pre>
     *技能返回信息 - 加血技能
     * </pre>
     */
    public boolean hasSkillResultByBloodInfo() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .SkillResultByBloodInfo skillResultByBloodInfo = 4;</code>
     *
     * <pre>
     *技能返回信息 - 加血技能
     * </pre>
     */
    public com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByBloodInfo getSkillResultByBloodInfo() {
      return skillResultByBloodInfo_;
    }
    /**
     * <code>optional .SkillResultByBloodInfo skillResultByBloodInfo = 4;</code>
     *
     * <pre>
     *技能返回信息 - 加血技能
     * </pre>
     */
    public com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByBloodInfoOrBuilder getSkillResultByBloodInfoOrBuilder() {
      return skillResultByBloodInfo_;
    }

    public static final int SKILLRESULTBYBUFFINFO_FIELD_NUMBER = 5;
    private com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByBuffInfo skillResultByBuffInfo_;
    /**
     * <code>optional .SkillResultByBuffInfo skillResultByBuffInfo = 5;</code>
     *
     * <pre>
     *技能返回信息 - 触发BUFF技能
     * </pre>
     */
    public boolean hasSkillResultByBuffInfo() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .SkillResultByBuffInfo skillResultByBuffInfo = 5;</code>
     *
     * <pre>
     *技能返回信息 - 触发BUFF技能
     * </pre>
     */
    public com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByBuffInfo getSkillResultByBuffInfo() {
      return skillResultByBuffInfo_;
    }
    /**
     * <code>optional .SkillResultByBuffInfo skillResultByBuffInfo = 5;</code>
     *
     * <pre>
     *技能返回信息 - 触发BUFF技能
     * </pre>
     */
    public com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByBuffInfoOrBuilder getSkillResultByBuffInfoOrBuilder() {
      return skillResultByBuffInfo_;
    }

    public static final int SKILLRESULTBYCALLUPINFO_FIELD_NUMBER = 6;
    private com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByCallupInfo skillResultByCallupInfo_;
    /**
     * <code>optional .SkillResultByCallupInfo skillResultByCallupInfo = 6;</code>
     *
     * <pre>
     *技能返回信息 - 召唤技能
     * </pre>
     */
    public boolean hasSkillResultByCallupInfo() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional .SkillResultByCallupInfo skillResultByCallupInfo = 6;</code>
     *
     * <pre>
     *技能返回信息 - 召唤技能
     * </pre>
     */
    public com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByCallupInfo getSkillResultByCallupInfo() {
      return skillResultByCallupInfo_;
    }
    /**
     * <code>optional .SkillResultByCallupInfo skillResultByCallupInfo = 6;</code>
     *
     * <pre>
     *技能返回信息 - 召唤技能
     * </pre>
     */
    public com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByCallupInfoOrBuilder getSkillResultByCallupInfoOrBuilder() {
      return skillResultByCallupInfo_;
    }

    private void initFields() {
      attackerEid_ = 0;
      skillId_ = 0;
      skillResultByAttackInfo_ = com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByAttackInfo.getDefaultInstance();
      skillResultByBloodInfo_ = com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByBloodInfo.getDefaultInstance();
      skillResultByBuffInfo_ = com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByBuffInfo.getDefaultInstance();
      skillResultByCallupInfo_ = com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByCallupInfo.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (hasSkillResultByAttackInfo()) {
        if (!getSkillResultByAttackInfo().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasSkillResultByBloodInfo()) {
        if (!getSkillResultByBloodInfo().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasSkillResultByBuffInfo()) {
        if (!getSkillResultByBuffInfo().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, attackerEid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, skillId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, skillResultByAttackInfo_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, skillResultByBloodInfo_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(5, skillResultByBuffInfo_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeMessage(6, skillResultByCallupInfo_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, attackerEid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, skillId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, skillResultByAttackInfo_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, skillResultByBloodInfo_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, skillResultByBuffInfo_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, skillResultByCallupInfo_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code SkillResultInfo}
     *
     * <pre>
     *技能返回信息
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:SkillResultInfo)
        com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.ninelook.wecard.protocol.beans.BeanFightMessage.internal_static_SkillResultInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.ninelook.wecard.protocol.beans.BeanFightMessage.internal_static_SkillResultInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultInfo.class, com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultInfo.Builder.class);
      }

      // Construct using com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getSkillResultByAttackInfoFieldBuilder();
          getSkillResultByBloodInfoFieldBuilder();
          getSkillResultByBuffInfoFieldBuilder();
          getSkillResultByCallupInfoFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        attackerEid_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        skillId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (skillResultByAttackInfoBuilder_ == null) {
          skillResultByAttackInfo_ = com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByAttackInfo.getDefaultInstance();
        } else {
          skillResultByAttackInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        if (skillResultByBloodInfoBuilder_ == null) {
          skillResultByBloodInfo_ = com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByBloodInfo.getDefaultInstance();
        } else {
          skillResultByBloodInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        if (skillResultByBuffInfoBuilder_ == null) {
          skillResultByBuffInfo_ = com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByBuffInfo.getDefaultInstance();
        } else {
          skillResultByBuffInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        if (skillResultByCallupInfoBuilder_ == null) {
          skillResultByCallupInfo_ = com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByCallupInfo.getDefaultInstance();
        } else {
          skillResultByCallupInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.ninelook.wecard.protocol.beans.BeanFightMessage.internal_static_SkillResultInfo_descriptor;
      }

      public com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultInfo getDefaultInstanceForType() {
        return com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultInfo.getDefaultInstance();
      }

      public com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultInfo build() {
        com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultInfo buildPartial() {
        com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultInfo result = new com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.attackerEid_ = attackerEid_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.skillId_ = skillId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (skillResultByAttackInfoBuilder_ == null) {
          result.skillResultByAttackInfo_ = skillResultByAttackInfo_;
        } else {
          result.skillResultByAttackInfo_ = skillResultByAttackInfoBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (skillResultByBloodInfoBuilder_ == null) {
          result.skillResultByBloodInfo_ = skillResultByBloodInfo_;
        } else {
          result.skillResultByBloodInfo_ = skillResultByBloodInfoBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        if (skillResultByBuffInfoBuilder_ == null) {
          result.skillResultByBuffInfo_ = skillResultByBuffInfo_;
        } else {
          result.skillResultByBuffInfo_ = skillResultByBuffInfoBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        if (skillResultByCallupInfoBuilder_ == null) {
          result.skillResultByCallupInfo_ = skillResultByCallupInfo_;
        } else {
          result.skillResultByCallupInfo_ = skillResultByCallupInfoBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultInfo) {
          return mergeFrom((com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultInfo other) {
        if (other == com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultInfo.getDefaultInstance()) return this;
        if (other.hasAttackerEid()) {
          setAttackerEid(other.getAttackerEid());
        }
        if (other.hasSkillId()) {
          setSkillId(other.getSkillId());
        }
        if (other.hasSkillResultByAttackInfo()) {
          mergeSkillResultByAttackInfo(other.getSkillResultByAttackInfo());
        }
        if (other.hasSkillResultByBloodInfo()) {
          mergeSkillResultByBloodInfo(other.getSkillResultByBloodInfo());
        }
        if (other.hasSkillResultByBuffInfo()) {
          mergeSkillResultByBuffInfo(other.getSkillResultByBuffInfo());
        }
        if (other.hasSkillResultByCallupInfo()) {
          mergeSkillResultByCallupInfo(other.getSkillResultByCallupInfo());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (hasSkillResultByAttackInfo()) {
          if (!getSkillResultByAttackInfo().isInitialized()) {
            
            return false;
          }
        }
        if (hasSkillResultByBloodInfo()) {
          if (!getSkillResultByBloodInfo().isInitialized()) {
            
            return false;
          }
        }
        if (hasSkillResultByBuffInfo()) {
          if (!getSkillResultByBuffInfo().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int attackerEid_ ;
      /**
       * <code>optional int32 attackerEid = 1;</code>
       *
       * <pre>
       *攻击者eid
       * </pre>
       */
      public boolean hasAttackerEid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 attackerEid = 1;</code>
       *
       * <pre>
       *攻击者eid
       * </pre>
       */
      public int getAttackerEid() {
        return attackerEid_;
      }
      /**
       * <code>optional int32 attackerEid = 1;</code>
       *
       * <pre>
       *攻击者eid
       * </pre>
       */
      public Builder setAttackerEid(int value) {
        bitField0_ |= 0x00000001;
        attackerEid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 attackerEid = 1;</code>
       *
       * <pre>
       *攻击者eid
       * </pre>
       */
      public Builder clearAttackerEid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        attackerEid_ = 0;
        onChanged();
        return this;
      }

      private int skillId_ ;
      /**
       * <code>optional int32 skillId = 2;</code>
       *
       * <pre>
       *如果是技能攻击, 需提供技能ID
       * </pre>
       */
      public boolean hasSkillId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 skillId = 2;</code>
       *
       * <pre>
       *如果是技能攻击, 需提供技能ID
       * </pre>
       */
      public int getSkillId() {
        return skillId_;
      }
      /**
       * <code>optional int32 skillId = 2;</code>
       *
       * <pre>
       *如果是技能攻击, 需提供技能ID
       * </pre>
       */
      public Builder setSkillId(int value) {
        bitField0_ |= 0x00000002;
        skillId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 skillId = 2;</code>
       *
       * <pre>
       *如果是技能攻击, 需提供技能ID
       * </pre>
       */
      public Builder clearSkillId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        skillId_ = 0;
        onChanged();
        return this;
      }

      private com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByAttackInfo skillResultByAttackInfo_ = com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByAttackInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByAttackInfo, com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByAttackInfo.Builder, com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByAttackInfoOrBuilder> skillResultByAttackInfoBuilder_;
      /**
       * <code>optional .SkillResultByAttackInfo skillResultByAttackInfo = 3;</code>
       *
       * <pre>
       *技能返回信息 - 攻击性技能
       * </pre>
       */
      public boolean hasSkillResultByAttackInfo() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .SkillResultByAttackInfo skillResultByAttackInfo = 3;</code>
       *
       * <pre>
       *技能返回信息 - 攻击性技能
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByAttackInfo getSkillResultByAttackInfo() {
        if (skillResultByAttackInfoBuilder_ == null) {
          return skillResultByAttackInfo_;
        } else {
          return skillResultByAttackInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .SkillResultByAttackInfo skillResultByAttackInfo = 3;</code>
       *
       * <pre>
       *技能返回信息 - 攻击性技能
       * </pre>
       */
      public Builder setSkillResultByAttackInfo(com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByAttackInfo value) {
        if (skillResultByAttackInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          skillResultByAttackInfo_ = value;
          onChanged();
        } else {
          skillResultByAttackInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .SkillResultByAttackInfo skillResultByAttackInfo = 3;</code>
       *
       * <pre>
       *技能返回信息 - 攻击性技能
       * </pre>
       */
      public Builder setSkillResultByAttackInfo(
          com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByAttackInfo.Builder builderForValue) {
        if (skillResultByAttackInfoBuilder_ == null) {
          skillResultByAttackInfo_ = builderForValue.build();
          onChanged();
        } else {
          skillResultByAttackInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .SkillResultByAttackInfo skillResultByAttackInfo = 3;</code>
       *
       * <pre>
       *技能返回信息 - 攻击性技能
       * </pre>
       */
      public Builder mergeSkillResultByAttackInfo(com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByAttackInfo value) {
        if (skillResultByAttackInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              skillResultByAttackInfo_ != com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByAttackInfo.getDefaultInstance()) {
            skillResultByAttackInfo_ =
              com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByAttackInfo.newBuilder(skillResultByAttackInfo_).mergeFrom(value).buildPartial();
          } else {
            skillResultByAttackInfo_ = value;
          }
          onChanged();
        } else {
          skillResultByAttackInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .SkillResultByAttackInfo skillResultByAttackInfo = 3;</code>
       *
       * <pre>
       *技能返回信息 - 攻击性技能
       * </pre>
       */
      public Builder clearSkillResultByAttackInfo() {
        if (skillResultByAttackInfoBuilder_ == null) {
          skillResultByAttackInfo_ = com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByAttackInfo.getDefaultInstance();
          onChanged();
        } else {
          skillResultByAttackInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .SkillResultByAttackInfo skillResultByAttackInfo = 3;</code>
       *
       * <pre>
       *技能返回信息 - 攻击性技能
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByAttackInfo.Builder getSkillResultByAttackInfoBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getSkillResultByAttackInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .SkillResultByAttackInfo skillResultByAttackInfo = 3;</code>
       *
       * <pre>
       *技能返回信息 - 攻击性技能
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByAttackInfoOrBuilder getSkillResultByAttackInfoOrBuilder() {
        if (skillResultByAttackInfoBuilder_ != null) {
          return skillResultByAttackInfoBuilder_.getMessageOrBuilder();
        } else {
          return skillResultByAttackInfo_;
        }
      }
      /**
       * <code>optional .SkillResultByAttackInfo skillResultByAttackInfo = 3;</code>
       *
       * <pre>
       *技能返回信息 - 攻击性技能
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByAttackInfo, com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByAttackInfo.Builder, com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByAttackInfoOrBuilder> 
          getSkillResultByAttackInfoFieldBuilder() {
        if (skillResultByAttackInfoBuilder_ == null) {
          skillResultByAttackInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByAttackInfo, com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByAttackInfo.Builder, com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByAttackInfoOrBuilder>(
                  getSkillResultByAttackInfo(),
                  getParentForChildren(),
                  isClean());
          skillResultByAttackInfo_ = null;
        }
        return skillResultByAttackInfoBuilder_;
      }

      private com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByBloodInfo skillResultByBloodInfo_ = com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByBloodInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByBloodInfo, com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByBloodInfo.Builder, com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByBloodInfoOrBuilder> skillResultByBloodInfoBuilder_;
      /**
       * <code>optional .SkillResultByBloodInfo skillResultByBloodInfo = 4;</code>
       *
       * <pre>
       *技能返回信息 - 加血技能
       * </pre>
       */
      public boolean hasSkillResultByBloodInfo() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .SkillResultByBloodInfo skillResultByBloodInfo = 4;</code>
       *
       * <pre>
       *技能返回信息 - 加血技能
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByBloodInfo getSkillResultByBloodInfo() {
        if (skillResultByBloodInfoBuilder_ == null) {
          return skillResultByBloodInfo_;
        } else {
          return skillResultByBloodInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .SkillResultByBloodInfo skillResultByBloodInfo = 4;</code>
       *
       * <pre>
       *技能返回信息 - 加血技能
       * </pre>
       */
      public Builder setSkillResultByBloodInfo(com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByBloodInfo value) {
        if (skillResultByBloodInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          skillResultByBloodInfo_ = value;
          onChanged();
        } else {
          skillResultByBloodInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .SkillResultByBloodInfo skillResultByBloodInfo = 4;</code>
       *
       * <pre>
       *技能返回信息 - 加血技能
       * </pre>
       */
      public Builder setSkillResultByBloodInfo(
          com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByBloodInfo.Builder builderForValue) {
        if (skillResultByBloodInfoBuilder_ == null) {
          skillResultByBloodInfo_ = builderForValue.build();
          onChanged();
        } else {
          skillResultByBloodInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .SkillResultByBloodInfo skillResultByBloodInfo = 4;</code>
       *
       * <pre>
       *技能返回信息 - 加血技能
       * </pre>
       */
      public Builder mergeSkillResultByBloodInfo(com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByBloodInfo value) {
        if (skillResultByBloodInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              skillResultByBloodInfo_ != com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByBloodInfo.getDefaultInstance()) {
            skillResultByBloodInfo_ =
              com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByBloodInfo.newBuilder(skillResultByBloodInfo_).mergeFrom(value).buildPartial();
          } else {
            skillResultByBloodInfo_ = value;
          }
          onChanged();
        } else {
          skillResultByBloodInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .SkillResultByBloodInfo skillResultByBloodInfo = 4;</code>
       *
       * <pre>
       *技能返回信息 - 加血技能
       * </pre>
       */
      public Builder clearSkillResultByBloodInfo() {
        if (skillResultByBloodInfoBuilder_ == null) {
          skillResultByBloodInfo_ = com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByBloodInfo.getDefaultInstance();
          onChanged();
        } else {
          skillResultByBloodInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <code>optional .SkillResultByBloodInfo skillResultByBloodInfo = 4;</code>
       *
       * <pre>
       *技能返回信息 - 加血技能
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByBloodInfo.Builder getSkillResultByBloodInfoBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getSkillResultByBloodInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .SkillResultByBloodInfo skillResultByBloodInfo = 4;</code>
       *
       * <pre>
       *技能返回信息 - 加血技能
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByBloodInfoOrBuilder getSkillResultByBloodInfoOrBuilder() {
        if (skillResultByBloodInfoBuilder_ != null) {
          return skillResultByBloodInfoBuilder_.getMessageOrBuilder();
        } else {
          return skillResultByBloodInfo_;
        }
      }
      /**
       * <code>optional .SkillResultByBloodInfo skillResultByBloodInfo = 4;</code>
       *
       * <pre>
       *技能返回信息 - 加血技能
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByBloodInfo, com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByBloodInfo.Builder, com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByBloodInfoOrBuilder> 
          getSkillResultByBloodInfoFieldBuilder() {
        if (skillResultByBloodInfoBuilder_ == null) {
          skillResultByBloodInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByBloodInfo, com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByBloodInfo.Builder, com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByBloodInfoOrBuilder>(
                  getSkillResultByBloodInfo(),
                  getParentForChildren(),
                  isClean());
          skillResultByBloodInfo_ = null;
        }
        return skillResultByBloodInfoBuilder_;
      }

      private com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByBuffInfo skillResultByBuffInfo_ = com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByBuffInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByBuffInfo, com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByBuffInfo.Builder, com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByBuffInfoOrBuilder> skillResultByBuffInfoBuilder_;
      /**
       * <code>optional .SkillResultByBuffInfo skillResultByBuffInfo = 5;</code>
       *
       * <pre>
       *技能返回信息 - 触发BUFF技能
       * </pre>
       */
      public boolean hasSkillResultByBuffInfo() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .SkillResultByBuffInfo skillResultByBuffInfo = 5;</code>
       *
       * <pre>
       *技能返回信息 - 触发BUFF技能
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByBuffInfo getSkillResultByBuffInfo() {
        if (skillResultByBuffInfoBuilder_ == null) {
          return skillResultByBuffInfo_;
        } else {
          return skillResultByBuffInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .SkillResultByBuffInfo skillResultByBuffInfo = 5;</code>
       *
       * <pre>
       *技能返回信息 - 触发BUFF技能
       * </pre>
       */
      public Builder setSkillResultByBuffInfo(com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByBuffInfo value) {
        if (skillResultByBuffInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          skillResultByBuffInfo_ = value;
          onChanged();
        } else {
          skillResultByBuffInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .SkillResultByBuffInfo skillResultByBuffInfo = 5;</code>
       *
       * <pre>
       *技能返回信息 - 触发BUFF技能
       * </pre>
       */
      public Builder setSkillResultByBuffInfo(
          com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByBuffInfo.Builder builderForValue) {
        if (skillResultByBuffInfoBuilder_ == null) {
          skillResultByBuffInfo_ = builderForValue.build();
          onChanged();
        } else {
          skillResultByBuffInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .SkillResultByBuffInfo skillResultByBuffInfo = 5;</code>
       *
       * <pre>
       *技能返回信息 - 触发BUFF技能
       * </pre>
       */
      public Builder mergeSkillResultByBuffInfo(com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByBuffInfo value) {
        if (skillResultByBuffInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010) &&
              skillResultByBuffInfo_ != com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByBuffInfo.getDefaultInstance()) {
            skillResultByBuffInfo_ =
              com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByBuffInfo.newBuilder(skillResultByBuffInfo_).mergeFrom(value).buildPartial();
          } else {
            skillResultByBuffInfo_ = value;
          }
          onChanged();
        } else {
          skillResultByBuffInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .SkillResultByBuffInfo skillResultByBuffInfo = 5;</code>
       *
       * <pre>
       *技能返回信息 - 触发BUFF技能
       * </pre>
       */
      public Builder clearSkillResultByBuffInfo() {
        if (skillResultByBuffInfoBuilder_ == null) {
          skillResultByBuffInfo_ = com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByBuffInfo.getDefaultInstance();
          onChanged();
        } else {
          skillResultByBuffInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      /**
       * <code>optional .SkillResultByBuffInfo skillResultByBuffInfo = 5;</code>
       *
       * <pre>
       *技能返回信息 - 触发BUFF技能
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByBuffInfo.Builder getSkillResultByBuffInfoBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getSkillResultByBuffInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .SkillResultByBuffInfo skillResultByBuffInfo = 5;</code>
       *
       * <pre>
       *技能返回信息 - 触发BUFF技能
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByBuffInfoOrBuilder getSkillResultByBuffInfoOrBuilder() {
        if (skillResultByBuffInfoBuilder_ != null) {
          return skillResultByBuffInfoBuilder_.getMessageOrBuilder();
        } else {
          return skillResultByBuffInfo_;
        }
      }
      /**
       * <code>optional .SkillResultByBuffInfo skillResultByBuffInfo = 5;</code>
       *
       * <pre>
       *技能返回信息 - 触发BUFF技能
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByBuffInfo, com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByBuffInfo.Builder, com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByBuffInfoOrBuilder> 
          getSkillResultByBuffInfoFieldBuilder() {
        if (skillResultByBuffInfoBuilder_ == null) {
          skillResultByBuffInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByBuffInfo, com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByBuffInfo.Builder, com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByBuffInfoOrBuilder>(
                  getSkillResultByBuffInfo(),
                  getParentForChildren(),
                  isClean());
          skillResultByBuffInfo_ = null;
        }
        return skillResultByBuffInfoBuilder_;
      }

      private com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByCallupInfo skillResultByCallupInfo_ = com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByCallupInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByCallupInfo, com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByCallupInfo.Builder, com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByCallupInfoOrBuilder> skillResultByCallupInfoBuilder_;
      /**
       * <code>optional .SkillResultByCallupInfo skillResultByCallupInfo = 6;</code>
       *
       * <pre>
       *技能返回信息 - 召唤技能
       * </pre>
       */
      public boolean hasSkillResultByCallupInfo() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional .SkillResultByCallupInfo skillResultByCallupInfo = 6;</code>
       *
       * <pre>
       *技能返回信息 - 召唤技能
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByCallupInfo getSkillResultByCallupInfo() {
        if (skillResultByCallupInfoBuilder_ == null) {
          return skillResultByCallupInfo_;
        } else {
          return skillResultByCallupInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .SkillResultByCallupInfo skillResultByCallupInfo = 6;</code>
       *
       * <pre>
       *技能返回信息 - 召唤技能
       * </pre>
       */
      public Builder setSkillResultByCallupInfo(com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByCallupInfo value) {
        if (skillResultByCallupInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          skillResultByCallupInfo_ = value;
          onChanged();
        } else {
          skillResultByCallupInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .SkillResultByCallupInfo skillResultByCallupInfo = 6;</code>
       *
       * <pre>
       *技能返回信息 - 召唤技能
       * </pre>
       */
      public Builder setSkillResultByCallupInfo(
          com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByCallupInfo.Builder builderForValue) {
        if (skillResultByCallupInfoBuilder_ == null) {
          skillResultByCallupInfo_ = builderForValue.build();
          onChanged();
        } else {
          skillResultByCallupInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .SkillResultByCallupInfo skillResultByCallupInfo = 6;</code>
       *
       * <pre>
       *技能返回信息 - 召唤技能
       * </pre>
       */
      public Builder mergeSkillResultByCallupInfo(com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByCallupInfo value) {
        if (skillResultByCallupInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020) &&
              skillResultByCallupInfo_ != com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByCallupInfo.getDefaultInstance()) {
            skillResultByCallupInfo_ =
              com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByCallupInfo.newBuilder(skillResultByCallupInfo_).mergeFrom(value).buildPartial();
          } else {
            skillResultByCallupInfo_ = value;
          }
          onChanged();
        } else {
          skillResultByCallupInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .SkillResultByCallupInfo skillResultByCallupInfo = 6;</code>
       *
       * <pre>
       *技能返回信息 - 召唤技能
       * </pre>
       */
      public Builder clearSkillResultByCallupInfo() {
        if (skillResultByCallupInfoBuilder_ == null) {
          skillResultByCallupInfo_ = com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByCallupInfo.getDefaultInstance();
          onChanged();
        } else {
          skillResultByCallupInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }
      /**
       * <code>optional .SkillResultByCallupInfo skillResultByCallupInfo = 6;</code>
       *
       * <pre>
       *技能返回信息 - 召唤技能
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByCallupInfo.Builder getSkillResultByCallupInfoBuilder() {
        bitField0_ |= 0x00000020;
        onChanged();
        return getSkillResultByCallupInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .SkillResultByCallupInfo skillResultByCallupInfo = 6;</code>
       *
       * <pre>
       *技能返回信息 - 召唤技能
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByCallupInfoOrBuilder getSkillResultByCallupInfoOrBuilder() {
        if (skillResultByCallupInfoBuilder_ != null) {
          return skillResultByCallupInfoBuilder_.getMessageOrBuilder();
        } else {
          return skillResultByCallupInfo_;
        }
      }
      /**
       * <code>optional .SkillResultByCallupInfo skillResultByCallupInfo = 6;</code>
       *
       * <pre>
       *技能返回信息 - 召唤技能
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByCallupInfo, com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByCallupInfo.Builder, com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByCallupInfoOrBuilder> 
          getSkillResultByCallupInfoFieldBuilder() {
        if (skillResultByCallupInfoBuilder_ == null) {
          skillResultByCallupInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByCallupInfo, com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByCallupInfo.Builder, com.ninelook.wecard.protocol.beans.BeanFightMessage.SkillResultByCallupInfoOrBuilder>(
                  getSkillResultByCallupInfo(),
                  getParentForChildren(),
                  isClean());
          skillResultByCallupInfo_ = null;
        }
        return skillResultByCallupInfoBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:SkillResultInfo)
    }

    static {
      defaultInstance = new SkillResultInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:SkillResultInfo)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_FighterInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_FighterInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_AttackFeatureInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_AttackFeatureInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_DefenceFeatureInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_DefenceFeatureInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_FightSerialInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_FightSerialInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_FightAttackResultInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_FightAttackResultInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_BuffEntityInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_BuffEntityInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_SkillResultByAttackInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_SkillResultByAttackInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_SkillResultByBloodInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_SkillResultByBloodInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_SkillResultByBuffInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_SkillResultByBuffInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_SkillResultByCallupInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_SkillResultByCallupInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_SkillResultInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_SkillResultInfo_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\034beans/BeanFightMessage.proto\032\034beans/Be" +
      "anSceneMessage.proto\032\035beans/BeanEntityMe" +
      "ssage.proto\032\035beans/BeanCommonMessage.pro" +
      "to\"\032\n\013FighterInfo\022\013\n\003eid\030\001 \002(\005\"6\n\021Attack" +
      "FeatureInfo\022\021\n\tattackNum\030\001 \002(\005\022\016\n\006effect" +
      "\030\002 \003(\005\"[\n\022DefenceFeatureInfo\022\013\n\003eid\030\001 \001(" +
      "\005\022\017\n\007lossNum\030\002 \002(\005\022\027\n\017currentBloodNum\030\003 " +
      "\001(\005\022\016\n\006effect\030\004 \003(\005\"\201\001\n\017FightSerialInfo\022" +
      "\016\n\006serial\030\001 \002(\005\022-\n\021attackFeatureInfo\030\002 \002" +
      "(\0132\022.AttackFeatureInfo\022/\n\022defenceFeature",
      "Info\030\003 \003(\0132\023.DefenceFeatureInfo\"\\\n\025Fight" +
      "AttackResultInfo\022\013\n\003eid\030\001 \002(\005\022\013\n\003sid\030\002 \001" +
      "(\005\022)\n\017fightSerialInfo\030\003 \003(\0132\020.FightSeria" +
      "lInfo\"Q\n\016BuffEntityInfo\022\016\n\006buffId\030\001 \002(\005\022" +
      "\016\n\006status\030\002 \002(\005\022\037\n\nentityInfo\030\003 \002(\0132\013.En" +
      "tityInfo\"P\n\027SkillResultByAttackInfo\0225\n\025f" +
      "ightAttackResultInfo\030\001 \002(\0132\026.FightAttack" +
      "ResultInfo\"5\n\026SkillResultByBloodInfo\022\033\n\004" +
      "item\030\001 \003(\0132\r.ItemByIntInt\"@\n\025SkillResult" +
      "ByBuffInfo\022\'\n\016buffEntityInfo\030\003 \003(\0132\017.Buf",
      "fEntityInfo\"\031\n\027SkillResultByCallupInfo\"\235" +
      "\002\n\017SkillResultInfo\022\023\n\013attackerEid\030\001 \001(\005\022" +
      "\017\n\007skillId\030\002 \001(\005\0229\n\027skillResultByAttackI" +
      "nfo\030\003 \001(\0132\030.SkillResultByAttackInfo\0227\n\026s" +
      "killResultByBloodInfo\030\004 \001(\0132\027.SkillResul" +
      "tByBloodInfo\0225\n\025skillResultByBuffInfo\030\005 " +
      "\001(\0132\026.SkillResultByBuffInfo\0229\n\027skillResu" +
      "ltByCallupInfo\030\006 \001(\0132\030.SkillResultByCall" +
      "upInfoB$\n\"com.ninelook.wecard.protocol.b" +
      "eans"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.ninelook.wecard.protocol.beans.BeanSceneMessage.getDescriptor(),
          com.ninelook.wecard.protocol.beans.BeanEntityMessage.getDescriptor(),
          com.ninelook.wecard.protocol.beans.BeanCommonMessage.getDescriptor(),
        }, assigner);
    internal_static_FighterInfo_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_FighterInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_FighterInfo_descriptor,
        new java.lang.String[] { "Eid", });
    internal_static_AttackFeatureInfo_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_AttackFeatureInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_AttackFeatureInfo_descriptor,
        new java.lang.String[] { "AttackNum", "Effect", });
    internal_static_DefenceFeatureInfo_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_DefenceFeatureInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_DefenceFeatureInfo_descriptor,
        new java.lang.String[] { "Eid", "LossNum", "CurrentBloodNum", "Effect", });
    internal_static_FightSerialInfo_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_FightSerialInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_FightSerialInfo_descriptor,
        new java.lang.String[] { "Serial", "AttackFeatureInfo", "DefenceFeatureInfo", });
    internal_static_FightAttackResultInfo_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_FightAttackResultInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_FightAttackResultInfo_descriptor,
        new java.lang.String[] { "Eid", "Sid", "FightSerialInfo", });
    internal_static_BuffEntityInfo_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_BuffEntityInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_BuffEntityInfo_descriptor,
        new java.lang.String[] { "BuffId", "Status", "EntityInfo", });
    internal_static_SkillResultByAttackInfo_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_SkillResultByAttackInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_SkillResultByAttackInfo_descriptor,
        new java.lang.String[] { "FightAttackResultInfo", });
    internal_static_SkillResultByBloodInfo_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_SkillResultByBloodInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_SkillResultByBloodInfo_descriptor,
        new java.lang.String[] { "Item", });
    internal_static_SkillResultByBuffInfo_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_SkillResultByBuffInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_SkillResultByBuffInfo_descriptor,
        new java.lang.String[] { "BuffEntityInfo", });
    internal_static_SkillResultByCallupInfo_descriptor =
      getDescriptor().getMessageTypes().get(9);
    internal_static_SkillResultByCallupInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_SkillResultByCallupInfo_descriptor,
        new java.lang.String[] { });
    internal_static_SkillResultInfo_descriptor =
      getDescriptor().getMessageTypes().get(10);
    internal_static_SkillResultInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_SkillResultInfo_descriptor,
        new java.lang.String[] { "AttackerEid", "SkillId", "SkillResultByAttackInfo", "SkillResultByBloodInfo", "SkillResultByBuffInfo", "SkillResultByCallupInfo", });
    com.ninelook.wecard.protocol.beans.BeanSceneMessage.getDescriptor();
    com.ninelook.wecard.protocol.beans.BeanEntityMessage.getDescriptor();
    com.ninelook.wecard.protocol.beans.BeanCommonMessage.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}

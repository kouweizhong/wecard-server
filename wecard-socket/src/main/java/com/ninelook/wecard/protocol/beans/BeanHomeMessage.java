// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: beans/BeanHomeMessage.proto

package com.ninelook.wecard.protocol.beans;

public final class BeanHomeMessage {
  private BeanHomeMessage() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface HomeInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 homeId = 1;
    /**
     * <code>required int32 homeId = 1;</code>
     *
     * <pre>
     *房间ID
     * </pre>
     */
    boolean hasHomeId();
    /**
     * <code>required int32 homeId = 1;</code>
     *
     * <pre>
     *房间ID
     * </pre>
     */
    int getHomeId();

    // required int64 ownerUid = 2;
    /**
     * <code>required int64 ownerUid = 2;</code>
     *
     * <pre>
     *房间所属用户ID
     * </pre>
     */
    boolean hasOwnerUid();
    /**
     * <code>required int64 ownerUid = 2;</code>
     *
     * <pre>
     *房间所属用户ID
     * </pre>
     */
    long getOwnerUid();

    // required int32 status = 3;
    /**
     * <code>required int32 status = 3;</code>
     *
     * <pre>
     *房间状态
     * </pre>
     */
    boolean hasStatus();
    /**
     * <code>required int32 status = 3;</code>
     *
     * <pre>
     *房间状态
     * </pre>
     */
    int getStatus();

    // repeated .PlayerInfo joinPlayerList = 4;
    /**
     * <code>repeated .PlayerInfo joinPlayerList = 4;</code>
     *
     * <pre>
     *已经加入的玩家列表(TODO:最好搞成单独的)
     * </pre>
     */
    java.util.List<com.ninelook.wecard.protocol.beans.BeanSceneMessage.PlayerInfo>
        getJoinPlayerListList();
    /**
     * <code>repeated .PlayerInfo joinPlayerList = 4;</code>
     *
     * <pre>
     *已经加入的玩家列表(TODO:最好搞成单独的)
     * </pre>
     */
    com.ninelook.wecard.protocol.beans.BeanSceneMessage.PlayerInfo getJoinPlayerList(int index);
    /**
     * <code>repeated .PlayerInfo joinPlayerList = 4;</code>
     *
     * <pre>
     *已经加入的玩家列表(TODO:最好搞成单独的)
     * </pre>
     */
    int getJoinPlayerListCount();
    /**
     * <code>repeated .PlayerInfo joinPlayerList = 4;</code>
     *
     * <pre>
     *已经加入的玩家列表(TODO:最好搞成单独的)
     * </pre>
     */
    java.util.List<? extends com.ninelook.wecard.protocol.beans.BeanSceneMessage.PlayerInfoOrBuilder>
        getJoinPlayerListOrBuilderList();
    /**
     * <code>repeated .PlayerInfo joinPlayerList = 4;</code>
     *
     * <pre>
     *已经加入的玩家列表(TODO:最好搞成单独的)
     * </pre>
     */
    com.ninelook.wecard.protocol.beans.BeanSceneMessage.PlayerInfoOrBuilder getJoinPlayerListOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code HomeInfo}
   *
   * <pre>
   *用户信息
   * </pre>
   */
  public static final class HomeInfo extends
      com.google.protobuf.GeneratedMessage
      implements HomeInfoOrBuilder {
    // Use HomeInfo.newBuilder() to construct.
    private HomeInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private HomeInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final HomeInfo defaultInstance;
    public static HomeInfo getDefaultInstance() {
      return defaultInstance;
    }

    public HomeInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private HomeInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              homeId_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              ownerUid_ = input.readInt64();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              status_ = input.readInt32();
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                joinPlayerList_ = new java.util.ArrayList<com.ninelook.wecard.protocol.beans.BeanSceneMessage.PlayerInfo>();
                mutable_bitField0_ |= 0x00000008;
              }
              joinPlayerList_.add(input.readMessage(com.ninelook.wecard.protocol.beans.BeanSceneMessage.PlayerInfo.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          joinPlayerList_ = java.util.Collections.unmodifiableList(joinPlayerList_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.ninelook.wecard.protocol.beans.BeanHomeMessage.internal_static_HomeInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.ninelook.wecard.protocol.beans.BeanHomeMessage.internal_static_HomeInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeInfo.class, com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<HomeInfo> PARSER =
        new com.google.protobuf.AbstractParser<HomeInfo>() {
      public HomeInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new HomeInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<HomeInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 homeId = 1;
    public static final int HOMEID_FIELD_NUMBER = 1;
    private int homeId_;
    /**
     * <code>required int32 homeId = 1;</code>
     *
     * <pre>
     *房间ID
     * </pre>
     */
    public boolean hasHomeId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 homeId = 1;</code>
     *
     * <pre>
     *房间ID
     * </pre>
     */
    public int getHomeId() {
      return homeId_;
    }

    // required int64 ownerUid = 2;
    public static final int OWNERUID_FIELD_NUMBER = 2;
    private long ownerUid_;
    /**
     * <code>required int64 ownerUid = 2;</code>
     *
     * <pre>
     *房间所属用户ID
     * </pre>
     */
    public boolean hasOwnerUid() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int64 ownerUid = 2;</code>
     *
     * <pre>
     *房间所属用户ID
     * </pre>
     */
    public long getOwnerUid() {
      return ownerUid_;
    }

    // required int32 status = 3;
    public static final int STATUS_FIELD_NUMBER = 3;
    private int status_;
    /**
     * <code>required int32 status = 3;</code>
     *
     * <pre>
     *房间状态
     * </pre>
     */
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 status = 3;</code>
     *
     * <pre>
     *房间状态
     * </pre>
     */
    public int getStatus() {
      return status_;
    }

    // repeated .PlayerInfo joinPlayerList = 4;
    public static final int JOINPLAYERLIST_FIELD_NUMBER = 4;
    private java.util.List<com.ninelook.wecard.protocol.beans.BeanSceneMessage.PlayerInfo> joinPlayerList_;
    /**
     * <code>repeated .PlayerInfo joinPlayerList = 4;</code>
     *
     * <pre>
     *已经加入的玩家列表(TODO:最好搞成单独的)
     * </pre>
     */
    public java.util.List<com.ninelook.wecard.protocol.beans.BeanSceneMessage.PlayerInfo> getJoinPlayerListList() {
      return joinPlayerList_;
    }
    /**
     * <code>repeated .PlayerInfo joinPlayerList = 4;</code>
     *
     * <pre>
     *已经加入的玩家列表(TODO:最好搞成单独的)
     * </pre>
     */
    public java.util.List<? extends com.ninelook.wecard.protocol.beans.BeanSceneMessage.PlayerInfoOrBuilder>
        getJoinPlayerListOrBuilderList() {
      return joinPlayerList_;
    }
    /**
     * <code>repeated .PlayerInfo joinPlayerList = 4;</code>
     *
     * <pre>
     *已经加入的玩家列表(TODO:最好搞成单独的)
     * </pre>
     */
    public int getJoinPlayerListCount() {
      return joinPlayerList_.size();
    }
    /**
     * <code>repeated .PlayerInfo joinPlayerList = 4;</code>
     *
     * <pre>
     *已经加入的玩家列表(TODO:最好搞成单独的)
     * </pre>
     */
    public com.ninelook.wecard.protocol.beans.BeanSceneMessage.PlayerInfo getJoinPlayerList(int index) {
      return joinPlayerList_.get(index);
    }
    /**
     * <code>repeated .PlayerInfo joinPlayerList = 4;</code>
     *
     * <pre>
     *已经加入的玩家列表(TODO:最好搞成单独的)
     * </pre>
     */
    public com.ninelook.wecard.protocol.beans.BeanSceneMessage.PlayerInfoOrBuilder getJoinPlayerListOrBuilder(
        int index) {
      return joinPlayerList_.get(index);
    }

    private void initFields() {
      homeId_ = 0;
      ownerUid_ = 0L;
      status_ = 0;
      joinPlayerList_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasHomeId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasOwnerUid()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasStatus()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getJoinPlayerListCount(); i++) {
        if (!getJoinPlayerList(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, homeId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, ownerUid_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, status_);
      }
      for (int i = 0; i < joinPlayerList_.size(); i++) {
        output.writeMessage(4, joinPlayerList_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, homeId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, ownerUid_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, status_);
      }
      for (int i = 0; i < joinPlayerList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, joinPlayerList_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code HomeInfo}
     *
     * <pre>
     *用户信息
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.ninelook.wecard.protocol.beans.BeanHomeMessage.internal_static_HomeInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.ninelook.wecard.protocol.beans.BeanHomeMessage.internal_static_HomeInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeInfo.class, com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeInfo.Builder.class);
      }

      // Construct using com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getJoinPlayerListFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        homeId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        ownerUid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        status_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        if (joinPlayerListBuilder_ == null) {
          joinPlayerList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          joinPlayerListBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.ninelook.wecard.protocol.beans.BeanHomeMessage.internal_static_HomeInfo_descriptor;
      }

      public com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeInfo getDefaultInstanceForType() {
        return com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeInfo.getDefaultInstance();
      }

      public com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeInfo build() {
        com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeInfo buildPartial() {
        com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeInfo result = new com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.homeId_ = homeId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.ownerUid_ = ownerUid_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.status_ = status_;
        if (joinPlayerListBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            joinPlayerList_ = java.util.Collections.unmodifiableList(joinPlayerList_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.joinPlayerList_ = joinPlayerList_;
        } else {
          result.joinPlayerList_ = joinPlayerListBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeInfo) {
          return mergeFrom((com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeInfo other) {
        if (other == com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeInfo.getDefaultInstance()) return this;
        if (other.hasHomeId()) {
          setHomeId(other.getHomeId());
        }
        if (other.hasOwnerUid()) {
          setOwnerUid(other.getOwnerUid());
        }
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        if (joinPlayerListBuilder_ == null) {
          if (!other.joinPlayerList_.isEmpty()) {
            if (joinPlayerList_.isEmpty()) {
              joinPlayerList_ = other.joinPlayerList_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureJoinPlayerListIsMutable();
              joinPlayerList_.addAll(other.joinPlayerList_);
            }
            onChanged();
          }
        } else {
          if (!other.joinPlayerList_.isEmpty()) {
            if (joinPlayerListBuilder_.isEmpty()) {
              joinPlayerListBuilder_.dispose();
              joinPlayerListBuilder_ = null;
              joinPlayerList_ = other.joinPlayerList_;
              bitField0_ = (bitField0_ & ~0x00000008);
              joinPlayerListBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getJoinPlayerListFieldBuilder() : null;
            } else {
              joinPlayerListBuilder_.addAllMessages(other.joinPlayerList_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasHomeId()) {
          
          return false;
        }
        if (!hasOwnerUid()) {
          
          return false;
        }
        if (!hasStatus()) {
          
          return false;
        }
        for (int i = 0; i < getJoinPlayerListCount(); i++) {
          if (!getJoinPlayerList(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 homeId = 1;
      private int homeId_ ;
      /**
       * <code>required int32 homeId = 1;</code>
       *
       * <pre>
       *房间ID
       * </pre>
       */
      public boolean hasHomeId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 homeId = 1;</code>
       *
       * <pre>
       *房间ID
       * </pre>
       */
      public int getHomeId() {
        return homeId_;
      }
      /**
       * <code>required int32 homeId = 1;</code>
       *
       * <pre>
       *房间ID
       * </pre>
       */
      public Builder setHomeId(int value) {
        bitField0_ |= 0x00000001;
        homeId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 homeId = 1;</code>
       *
       * <pre>
       *房间ID
       * </pre>
       */
      public Builder clearHomeId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        homeId_ = 0;
        onChanged();
        return this;
      }

      // required int64 ownerUid = 2;
      private long ownerUid_ ;
      /**
       * <code>required int64 ownerUid = 2;</code>
       *
       * <pre>
       *房间所属用户ID
       * </pre>
       */
      public boolean hasOwnerUid() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int64 ownerUid = 2;</code>
       *
       * <pre>
       *房间所属用户ID
       * </pre>
       */
      public long getOwnerUid() {
        return ownerUid_;
      }
      /**
       * <code>required int64 ownerUid = 2;</code>
       *
       * <pre>
       *房间所属用户ID
       * </pre>
       */
      public Builder setOwnerUid(long value) {
        bitField0_ |= 0x00000002;
        ownerUid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 ownerUid = 2;</code>
       *
       * <pre>
       *房间所属用户ID
       * </pre>
       */
      public Builder clearOwnerUid() {
        bitField0_ = (bitField0_ & ~0x00000002);
        ownerUid_ = 0L;
        onChanged();
        return this;
      }

      // required int32 status = 3;
      private int status_ ;
      /**
       * <code>required int32 status = 3;</code>
       *
       * <pre>
       *房间状态
       * </pre>
       */
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 status = 3;</code>
       *
       * <pre>
       *房间状态
       * </pre>
       */
      public int getStatus() {
        return status_;
      }
      /**
       * <code>required int32 status = 3;</code>
       *
       * <pre>
       *房间状态
       * </pre>
       */
      public Builder setStatus(int value) {
        bitField0_ |= 0x00000004;
        status_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 status = 3;</code>
       *
       * <pre>
       *房间状态
       * </pre>
       */
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00000004);
        status_ = 0;
        onChanged();
        return this;
      }

      // repeated .PlayerInfo joinPlayerList = 4;
      private java.util.List<com.ninelook.wecard.protocol.beans.BeanSceneMessage.PlayerInfo> joinPlayerList_ =
        java.util.Collections.emptyList();
      private void ensureJoinPlayerListIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          joinPlayerList_ = new java.util.ArrayList<com.ninelook.wecard.protocol.beans.BeanSceneMessage.PlayerInfo>(joinPlayerList_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.ninelook.wecard.protocol.beans.BeanSceneMessage.PlayerInfo, com.ninelook.wecard.protocol.beans.BeanSceneMessage.PlayerInfo.Builder, com.ninelook.wecard.protocol.beans.BeanSceneMessage.PlayerInfoOrBuilder> joinPlayerListBuilder_;

      /**
       * <code>repeated .PlayerInfo joinPlayerList = 4;</code>
       *
       * <pre>
       *已经加入的玩家列表(TODO:最好搞成单独的)
       * </pre>
       */
      public java.util.List<com.ninelook.wecard.protocol.beans.BeanSceneMessage.PlayerInfo> getJoinPlayerListList() {
        if (joinPlayerListBuilder_ == null) {
          return java.util.Collections.unmodifiableList(joinPlayerList_);
        } else {
          return joinPlayerListBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .PlayerInfo joinPlayerList = 4;</code>
       *
       * <pre>
       *已经加入的玩家列表(TODO:最好搞成单独的)
       * </pre>
       */
      public int getJoinPlayerListCount() {
        if (joinPlayerListBuilder_ == null) {
          return joinPlayerList_.size();
        } else {
          return joinPlayerListBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .PlayerInfo joinPlayerList = 4;</code>
       *
       * <pre>
       *已经加入的玩家列表(TODO:最好搞成单独的)
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanSceneMessage.PlayerInfo getJoinPlayerList(int index) {
        if (joinPlayerListBuilder_ == null) {
          return joinPlayerList_.get(index);
        } else {
          return joinPlayerListBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .PlayerInfo joinPlayerList = 4;</code>
       *
       * <pre>
       *已经加入的玩家列表(TODO:最好搞成单独的)
       * </pre>
       */
      public Builder setJoinPlayerList(
          int index, com.ninelook.wecard.protocol.beans.BeanSceneMessage.PlayerInfo value) {
        if (joinPlayerListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureJoinPlayerListIsMutable();
          joinPlayerList_.set(index, value);
          onChanged();
        } else {
          joinPlayerListBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .PlayerInfo joinPlayerList = 4;</code>
       *
       * <pre>
       *已经加入的玩家列表(TODO:最好搞成单独的)
       * </pre>
       */
      public Builder setJoinPlayerList(
          int index, com.ninelook.wecard.protocol.beans.BeanSceneMessage.PlayerInfo.Builder builderForValue) {
        if (joinPlayerListBuilder_ == null) {
          ensureJoinPlayerListIsMutable();
          joinPlayerList_.set(index, builderForValue.build());
          onChanged();
        } else {
          joinPlayerListBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .PlayerInfo joinPlayerList = 4;</code>
       *
       * <pre>
       *已经加入的玩家列表(TODO:最好搞成单独的)
       * </pre>
       */
      public Builder addJoinPlayerList(com.ninelook.wecard.protocol.beans.BeanSceneMessage.PlayerInfo value) {
        if (joinPlayerListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureJoinPlayerListIsMutable();
          joinPlayerList_.add(value);
          onChanged();
        } else {
          joinPlayerListBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .PlayerInfo joinPlayerList = 4;</code>
       *
       * <pre>
       *已经加入的玩家列表(TODO:最好搞成单独的)
       * </pre>
       */
      public Builder addJoinPlayerList(
          int index, com.ninelook.wecard.protocol.beans.BeanSceneMessage.PlayerInfo value) {
        if (joinPlayerListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureJoinPlayerListIsMutable();
          joinPlayerList_.add(index, value);
          onChanged();
        } else {
          joinPlayerListBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .PlayerInfo joinPlayerList = 4;</code>
       *
       * <pre>
       *已经加入的玩家列表(TODO:最好搞成单独的)
       * </pre>
       */
      public Builder addJoinPlayerList(
          com.ninelook.wecard.protocol.beans.BeanSceneMessage.PlayerInfo.Builder builderForValue) {
        if (joinPlayerListBuilder_ == null) {
          ensureJoinPlayerListIsMutable();
          joinPlayerList_.add(builderForValue.build());
          onChanged();
        } else {
          joinPlayerListBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .PlayerInfo joinPlayerList = 4;</code>
       *
       * <pre>
       *已经加入的玩家列表(TODO:最好搞成单独的)
       * </pre>
       */
      public Builder addJoinPlayerList(
          int index, com.ninelook.wecard.protocol.beans.BeanSceneMessage.PlayerInfo.Builder builderForValue) {
        if (joinPlayerListBuilder_ == null) {
          ensureJoinPlayerListIsMutable();
          joinPlayerList_.add(index, builderForValue.build());
          onChanged();
        } else {
          joinPlayerListBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .PlayerInfo joinPlayerList = 4;</code>
       *
       * <pre>
       *已经加入的玩家列表(TODO:最好搞成单独的)
       * </pre>
       */
      public Builder addAllJoinPlayerList(
          java.lang.Iterable<? extends com.ninelook.wecard.protocol.beans.BeanSceneMessage.PlayerInfo> values) {
        if (joinPlayerListBuilder_ == null) {
          ensureJoinPlayerListIsMutable();
          super.addAll(values, joinPlayerList_);
          onChanged();
        } else {
          joinPlayerListBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .PlayerInfo joinPlayerList = 4;</code>
       *
       * <pre>
       *已经加入的玩家列表(TODO:最好搞成单独的)
       * </pre>
       */
      public Builder clearJoinPlayerList() {
        if (joinPlayerListBuilder_ == null) {
          joinPlayerList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          joinPlayerListBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .PlayerInfo joinPlayerList = 4;</code>
       *
       * <pre>
       *已经加入的玩家列表(TODO:最好搞成单独的)
       * </pre>
       */
      public Builder removeJoinPlayerList(int index) {
        if (joinPlayerListBuilder_ == null) {
          ensureJoinPlayerListIsMutable();
          joinPlayerList_.remove(index);
          onChanged();
        } else {
          joinPlayerListBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .PlayerInfo joinPlayerList = 4;</code>
       *
       * <pre>
       *已经加入的玩家列表(TODO:最好搞成单独的)
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanSceneMessage.PlayerInfo.Builder getJoinPlayerListBuilder(
          int index) {
        return getJoinPlayerListFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .PlayerInfo joinPlayerList = 4;</code>
       *
       * <pre>
       *已经加入的玩家列表(TODO:最好搞成单独的)
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanSceneMessage.PlayerInfoOrBuilder getJoinPlayerListOrBuilder(
          int index) {
        if (joinPlayerListBuilder_ == null) {
          return joinPlayerList_.get(index);  } else {
          return joinPlayerListBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .PlayerInfo joinPlayerList = 4;</code>
       *
       * <pre>
       *已经加入的玩家列表(TODO:最好搞成单独的)
       * </pre>
       */
      public java.util.List<? extends com.ninelook.wecard.protocol.beans.BeanSceneMessage.PlayerInfoOrBuilder>
           getJoinPlayerListOrBuilderList() {
        if (joinPlayerListBuilder_ != null) {
          return joinPlayerListBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(joinPlayerList_);
        }
      }
      /**
       * <code>repeated .PlayerInfo joinPlayerList = 4;</code>
       *
       * <pre>
       *已经加入的玩家列表(TODO:最好搞成单独的)
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanSceneMessage.PlayerInfo.Builder addJoinPlayerListBuilder() {
        return getJoinPlayerListFieldBuilder().addBuilder(
            com.ninelook.wecard.protocol.beans.BeanSceneMessage.PlayerInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .PlayerInfo joinPlayerList = 4;</code>
       *
       * <pre>
       *已经加入的玩家列表(TODO:最好搞成单独的)
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanSceneMessage.PlayerInfo.Builder addJoinPlayerListBuilder(
          int index) {
        return getJoinPlayerListFieldBuilder().addBuilder(
            index, com.ninelook.wecard.protocol.beans.BeanSceneMessage.PlayerInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .PlayerInfo joinPlayerList = 4;</code>
       *
       * <pre>
       *已经加入的玩家列表(TODO:最好搞成单独的)
       * </pre>
       */
      public java.util.List<com.ninelook.wecard.protocol.beans.BeanSceneMessage.PlayerInfo.Builder>
           getJoinPlayerListBuilderList() {
        return getJoinPlayerListFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.ninelook.wecard.protocol.beans.BeanSceneMessage.PlayerInfo, com.ninelook.wecard.protocol.beans.BeanSceneMessage.PlayerInfo.Builder, com.ninelook.wecard.protocol.beans.BeanSceneMessage.PlayerInfoOrBuilder>
          getJoinPlayerListFieldBuilder() {
        if (joinPlayerListBuilder_ == null) {
          joinPlayerListBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.ninelook.wecard.protocol.beans.BeanSceneMessage.PlayerInfo, com.ninelook.wecard.protocol.beans.BeanSceneMessage.PlayerInfo.Builder, com.ninelook.wecard.protocol.beans.BeanSceneMessage.PlayerInfoOrBuilder>(
                  joinPlayerList_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          joinPlayerList_ = null;
        }
        return joinPlayerListBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:HomeInfo)
    }

    static {
      defaultInstance = new HomeInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:HomeInfo)
  }

  public interface MapInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 mapId = 1;
    /**
     * <code>required int32 mapId = 1;</code>
     *
     * <pre>
     *地图ID
     * </pre>
     */
    boolean hasMapId();
    /**
     * <code>required int32 mapId = 1;</code>
     *
     * <pre>
     *地图ID
     * </pre>
     */
    int getMapId();

    // required int32 width = 2;
    /**
     * <code>required int32 width = 2;</code>
     *
     * <pre>
     *地图宽度
     * </pre>
     */
    boolean hasWidth();
    /**
     * <code>required int32 width = 2;</code>
     *
     * <pre>
     *地图宽度
     * </pre>
     */
    int getWidth();
  }
  /**
   * Protobuf type {@code MapInfo}
   *
   * <pre>
   *地图信息
   * </pre>
   */
  public static final class MapInfo extends
      com.google.protobuf.GeneratedMessage
      implements MapInfoOrBuilder {
    // Use MapInfo.newBuilder() to construct.
    private MapInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private MapInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final MapInfo defaultInstance;
    public static MapInfo getDefaultInstance() {
      return defaultInstance;
    }

    public MapInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private MapInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              mapId_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              width_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.ninelook.wecard.protocol.beans.BeanHomeMessage.internal_static_MapInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.ninelook.wecard.protocol.beans.BeanHomeMessage.internal_static_MapInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapInfo.class, com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<MapInfo> PARSER =
        new com.google.protobuf.AbstractParser<MapInfo>() {
      public MapInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MapInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<MapInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 mapId = 1;
    public static final int MAPID_FIELD_NUMBER = 1;
    private int mapId_;
    /**
     * <code>required int32 mapId = 1;</code>
     *
     * <pre>
     *地图ID
     * </pre>
     */
    public boolean hasMapId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 mapId = 1;</code>
     *
     * <pre>
     *地图ID
     * </pre>
     */
    public int getMapId() {
      return mapId_;
    }

    // required int32 width = 2;
    public static final int WIDTH_FIELD_NUMBER = 2;
    private int width_;
    /**
     * <code>required int32 width = 2;</code>
     *
     * <pre>
     *地图宽度
     * </pre>
     */
    public boolean hasWidth() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 width = 2;</code>
     *
     * <pre>
     *地图宽度
     * </pre>
     */
    public int getWidth() {
      return width_;
    }

    private void initFields() {
      mapId_ = 0;
      width_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasMapId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasWidth()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, mapId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, width_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, mapId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, width_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code MapInfo}
     *
     * <pre>
     *地图信息
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.ninelook.wecard.protocol.beans.BeanHomeMessage.internal_static_MapInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.ninelook.wecard.protocol.beans.BeanHomeMessage.internal_static_MapInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapInfo.class, com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapInfo.Builder.class);
      }

      // Construct using com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        mapId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        width_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.ninelook.wecard.protocol.beans.BeanHomeMessage.internal_static_MapInfo_descriptor;
      }

      public com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapInfo getDefaultInstanceForType() {
        return com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapInfo.getDefaultInstance();
      }

      public com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapInfo build() {
        com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapInfo buildPartial() {
        com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapInfo result = new com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.mapId_ = mapId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.width_ = width_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapInfo) {
          return mergeFrom((com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapInfo other) {
        if (other == com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapInfo.getDefaultInstance()) return this;
        if (other.hasMapId()) {
          setMapId(other.getMapId());
        }
        if (other.hasWidth()) {
          setWidth(other.getWidth());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasMapId()) {
          
          return false;
        }
        if (!hasWidth()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 mapId = 1;
      private int mapId_ ;
      /**
       * <code>required int32 mapId = 1;</code>
       *
       * <pre>
       *地图ID
       * </pre>
       */
      public boolean hasMapId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 mapId = 1;</code>
       *
       * <pre>
       *地图ID
       * </pre>
       */
      public int getMapId() {
        return mapId_;
      }
      /**
       * <code>required int32 mapId = 1;</code>
       *
       * <pre>
       *地图ID
       * </pre>
       */
      public Builder setMapId(int value) {
        bitField0_ |= 0x00000001;
        mapId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 mapId = 1;</code>
       *
       * <pre>
       *地图ID
       * </pre>
       */
      public Builder clearMapId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        mapId_ = 0;
        onChanged();
        return this;
      }

      // required int32 width = 2;
      private int width_ ;
      /**
       * <code>required int32 width = 2;</code>
       *
       * <pre>
       *地图宽度
       * </pre>
       */
      public boolean hasWidth() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 width = 2;</code>
       *
       * <pre>
       *地图宽度
       * </pre>
       */
      public int getWidth() {
        return width_;
      }
      /**
       * <code>required int32 width = 2;</code>
       *
       * <pre>
       *地图宽度
       * </pre>
       */
      public Builder setWidth(int value) {
        bitField0_ |= 0x00000002;
        width_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 width = 2;</code>
       *
       * <pre>
       *地图宽度
       * </pre>
       */
      public Builder clearWidth() {
        bitField0_ = (bitField0_ & ~0x00000002);
        width_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:MapInfo)
    }

    static {
      defaultInstance = new MapInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:MapInfo)
  }

  public interface WarInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 homeId = 1;
    /**
     * <code>required int32 homeId = 1;</code>
     *
     * <pre>
     *房间ID
     * </pre>
     */
    boolean hasHomeId();
    /**
     * <code>required int32 homeId = 1;</code>
     *
     * <pre>
     *房间ID
     * </pre>
     */
    int getHomeId();

    // required .MapInfo mapInfo = 2;
    /**
     * <code>required .MapInfo mapInfo = 2;</code>
     *
     * <pre>
     *地图信息
     * </pre>
     */
    boolean hasMapInfo();
    /**
     * <code>required .MapInfo mapInfo = 2;</code>
     *
     * <pre>
     *地图信息
     * </pre>
     */
    com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapInfo getMapInfo();
    /**
     * <code>required .MapInfo mapInfo = 2;</code>
     *
     * <pre>
     *地图信息
     * </pre>
     */
    com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapInfoOrBuilder getMapInfoOrBuilder();

    // repeated .HeroInfo heroInfoList = 3;
    /**
     * <code>repeated .HeroInfo heroInfoList = 3;</code>
     *
     * <pre>
     *上场英雄
     * </pre>
     */
    java.util.List<com.ninelook.wecard.protocol.beans.BeanHeroMessage.HeroInfo>
        getHeroInfoListList();
    /**
     * <code>repeated .HeroInfo heroInfoList = 3;</code>
     *
     * <pre>
     *上场英雄
     * </pre>
     */
    com.ninelook.wecard.protocol.beans.BeanHeroMessage.HeroInfo getHeroInfoList(int index);
    /**
     * <code>repeated .HeroInfo heroInfoList = 3;</code>
     *
     * <pre>
     *上场英雄
     * </pre>
     */
    int getHeroInfoListCount();
    /**
     * <code>repeated .HeroInfo heroInfoList = 3;</code>
     *
     * <pre>
     *上场英雄
     * </pre>
     */
    java.util.List<? extends com.ninelook.wecard.protocol.beans.BeanHeroMessage.HeroInfoOrBuilder>
        getHeroInfoListOrBuilderList();
    /**
     * <code>repeated .HeroInfo heroInfoList = 3;</code>
     *
     * <pre>
     *上场英雄
     * </pre>
     */
    com.ninelook.wecard.protocol.beans.BeanHeroMessage.HeroInfoOrBuilder getHeroInfoListOrBuilder(
        int index);

    // repeated .CreatureInfo creatureInfoList = 4;
    /**
     * <code>repeated .CreatureInfo creatureInfoList = 4;</code>
     *
     * <pre>
     *上场野怪
     * </pre>
     */
    java.util.List<com.ninelook.wecard.protocol.beans.BeanCreatureMessage.CreatureInfo>
        getCreatureInfoListList();
    /**
     * <code>repeated .CreatureInfo creatureInfoList = 4;</code>
     *
     * <pre>
     *上场野怪
     * </pre>
     */
    com.ninelook.wecard.protocol.beans.BeanCreatureMessage.CreatureInfo getCreatureInfoList(int index);
    /**
     * <code>repeated .CreatureInfo creatureInfoList = 4;</code>
     *
     * <pre>
     *上场野怪
     * </pre>
     */
    int getCreatureInfoListCount();
    /**
     * <code>repeated .CreatureInfo creatureInfoList = 4;</code>
     *
     * <pre>
     *上场野怪
     * </pre>
     */
    java.util.List<? extends com.ninelook.wecard.protocol.beans.BeanCreatureMessage.CreatureInfoOrBuilder>
        getCreatureInfoListOrBuilderList();
    /**
     * <code>repeated .CreatureInfo creatureInfoList = 4;</code>
     *
     * <pre>
     *上场野怪
     * </pre>
     */
    com.ninelook.wecard.protocol.beans.BeanCreatureMessage.CreatureInfoOrBuilder getCreatureInfoListOrBuilder(
        int index);

    // repeated .BuildInfo buildInfoList = 5;
    /**
     * <code>repeated .BuildInfo buildInfoList = 5;</code>
     *
     * <pre>
     *上场建筑
     * </pre>
     */
    java.util.List<com.ninelook.wecard.protocol.beans.BeanBuildMessage.BuildInfo>
        getBuildInfoListList();
    /**
     * <code>repeated .BuildInfo buildInfoList = 5;</code>
     *
     * <pre>
     *上场建筑
     * </pre>
     */
    com.ninelook.wecard.protocol.beans.BeanBuildMessage.BuildInfo getBuildInfoList(int index);
    /**
     * <code>repeated .BuildInfo buildInfoList = 5;</code>
     *
     * <pre>
     *上场建筑
     * </pre>
     */
    int getBuildInfoListCount();
    /**
     * <code>repeated .BuildInfo buildInfoList = 5;</code>
     *
     * <pre>
     *上场建筑
     * </pre>
     */
    java.util.List<? extends com.ninelook.wecard.protocol.beans.BeanBuildMessage.BuildInfoOrBuilder>
        getBuildInfoListOrBuilderList();
    /**
     * <code>repeated .BuildInfo buildInfoList = 5;</code>
     *
     * <pre>
     *上场建筑
     * </pre>
     */
    com.ninelook.wecard.protocol.beans.BeanBuildMessage.BuildInfoOrBuilder getBuildInfoListOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code WarInfo}
   *
   * <pre>
   *战场信息
   * </pre>
   */
  public static final class WarInfo extends
      com.google.protobuf.GeneratedMessage
      implements WarInfoOrBuilder {
    // Use WarInfo.newBuilder() to construct.
    private WarInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private WarInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final WarInfo defaultInstance;
    public static WarInfo getDefaultInstance() {
      return defaultInstance;
    }

    public WarInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private WarInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              homeId_ = input.readInt32();
              break;
            }
            case 18: {
              com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = mapInfo_.toBuilder();
              }
              mapInfo_ = input.readMessage(com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(mapInfo_);
                mapInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                heroInfoList_ = new java.util.ArrayList<com.ninelook.wecard.protocol.beans.BeanHeroMessage.HeroInfo>();
                mutable_bitField0_ |= 0x00000004;
              }
              heroInfoList_.add(input.readMessage(com.ninelook.wecard.protocol.beans.BeanHeroMessage.HeroInfo.PARSER, extensionRegistry));
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                creatureInfoList_ = new java.util.ArrayList<com.ninelook.wecard.protocol.beans.BeanCreatureMessage.CreatureInfo>();
                mutable_bitField0_ |= 0x00000008;
              }
              creatureInfoList_.add(input.readMessage(com.ninelook.wecard.protocol.beans.BeanCreatureMessage.CreatureInfo.PARSER, extensionRegistry));
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                buildInfoList_ = new java.util.ArrayList<com.ninelook.wecard.protocol.beans.BeanBuildMessage.BuildInfo>();
                mutable_bitField0_ |= 0x00000010;
              }
              buildInfoList_.add(input.readMessage(com.ninelook.wecard.protocol.beans.BeanBuildMessage.BuildInfo.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          heroInfoList_ = java.util.Collections.unmodifiableList(heroInfoList_);
        }
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          creatureInfoList_ = java.util.Collections.unmodifiableList(creatureInfoList_);
        }
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          buildInfoList_ = java.util.Collections.unmodifiableList(buildInfoList_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.ninelook.wecard.protocol.beans.BeanHomeMessage.internal_static_WarInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.ninelook.wecard.protocol.beans.BeanHomeMessage.internal_static_WarInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarInfo.class, com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<WarInfo> PARSER =
        new com.google.protobuf.AbstractParser<WarInfo>() {
      public WarInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new WarInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<WarInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 homeId = 1;
    public static final int HOMEID_FIELD_NUMBER = 1;
    private int homeId_;
    /**
     * <code>required int32 homeId = 1;</code>
     *
     * <pre>
     *房间ID
     * </pre>
     */
    public boolean hasHomeId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 homeId = 1;</code>
     *
     * <pre>
     *房间ID
     * </pre>
     */
    public int getHomeId() {
      return homeId_;
    }

    // required .MapInfo mapInfo = 2;
    public static final int MAPINFO_FIELD_NUMBER = 2;
    private com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapInfo mapInfo_;
    /**
     * <code>required .MapInfo mapInfo = 2;</code>
     *
     * <pre>
     *地图信息
     * </pre>
     */
    public boolean hasMapInfo() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .MapInfo mapInfo = 2;</code>
     *
     * <pre>
     *地图信息
     * </pre>
     */
    public com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapInfo getMapInfo() {
      return mapInfo_;
    }
    /**
     * <code>required .MapInfo mapInfo = 2;</code>
     *
     * <pre>
     *地图信息
     * </pre>
     */
    public com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapInfoOrBuilder getMapInfoOrBuilder() {
      return mapInfo_;
    }

    // repeated .HeroInfo heroInfoList = 3;
    public static final int HEROINFOLIST_FIELD_NUMBER = 3;
    private java.util.List<com.ninelook.wecard.protocol.beans.BeanHeroMessage.HeroInfo> heroInfoList_;
    /**
     * <code>repeated .HeroInfo heroInfoList = 3;</code>
     *
     * <pre>
     *上场英雄
     * </pre>
     */
    public java.util.List<com.ninelook.wecard.protocol.beans.BeanHeroMessage.HeroInfo> getHeroInfoListList() {
      return heroInfoList_;
    }
    /**
     * <code>repeated .HeroInfo heroInfoList = 3;</code>
     *
     * <pre>
     *上场英雄
     * </pre>
     */
    public java.util.List<? extends com.ninelook.wecard.protocol.beans.BeanHeroMessage.HeroInfoOrBuilder>
        getHeroInfoListOrBuilderList() {
      return heroInfoList_;
    }
    /**
     * <code>repeated .HeroInfo heroInfoList = 3;</code>
     *
     * <pre>
     *上场英雄
     * </pre>
     */
    public int getHeroInfoListCount() {
      return heroInfoList_.size();
    }
    /**
     * <code>repeated .HeroInfo heroInfoList = 3;</code>
     *
     * <pre>
     *上场英雄
     * </pre>
     */
    public com.ninelook.wecard.protocol.beans.BeanHeroMessage.HeroInfo getHeroInfoList(int index) {
      return heroInfoList_.get(index);
    }
    /**
     * <code>repeated .HeroInfo heroInfoList = 3;</code>
     *
     * <pre>
     *上场英雄
     * </pre>
     */
    public com.ninelook.wecard.protocol.beans.BeanHeroMessage.HeroInfoOrBuilder getHeroInfoListOrBuilder(
        int index) {
      return heroInfoList_.get(index);
    }

    // repeated .CreatureInfo creatureInfoList = 4;
    public static final int CREATUREINFOLIST_FIELD_NUMBER = 4;
    private java.util.List<com.ninelook.wecard.protocol.beans.BeanCreatureMessage.CreatureInfo> creatureInfoList_;
    /**
     * <code>repeated .CreatureInfo creatureInfoList = 4;</code>
     *
     * <pre>
     *上场野怪
     * </pre>
     */
    public java.util.List<com.ninelook.wecard.protocol.beans.BeanCreatureMessage.CreatureInfo> getCreatureInfoListList() {
      return creatureInfoList_;
    }
    /**
     * <code>repeated .CreatureInfo creatureInfoList = 4;</code>
     *
     * <pre>
     *上场野怪
     * </pre>
     */
    public java.util.List<? extends com.ninelook.wecard.protocol.beans.BeanCreatureMessage.CreatureInfoOrBuilder>
        getCreatureInfoListOrBuilderList() {
      return creatureInfoList_;
    }
    /**
     * <code>repeated .CreatureInfo creatureInfoList = 4;</code>
     *
     * <pre>
     *上场野怪
     * </pre>
     */
    public int getCreatureInfoListCount() {
      return creatureInfoList_.size();
    }
    /**
     * <code>repeated .CreatureInfo creatureInfoList = 4;</code>
     *
     * <pre>
     *上场野怪
     * </pre>
     */
    public com.ninelook.wecard.protocol.beans.BeanCreatureMessage.CreatureInfo getCreatureInfoList(int index) {
      return creatureInfoList_.get(index);
    }
    /**
     * <code>repeated .CreatureInfo creatureInfoList = 4;</code>
     *
     * <pre>
     *上场野怪
     * </pre>
     */
    public com.ninelook.wecard.protocol.beans.BeanCreatureMessage.CreatureInfoOrBuilder getCreatureInfoListOrBuilder(
        int index) {
      return creatureInfoList_.get(index);
    }

    // repeated .BuildInfo buildInfoList = 5;
    public static final int BUILDINFOLIST_FIELD_NUMBER = 5;
    private java.util.List<com.ninelook.wecard.protocol.beans.BeanBuildMessage.BuildInfo> buildInfoList_;
    /**
     * <code>repeated .BuildInfo buildInfoList = 5;</code>
     *
     * <pre>
     *上场建筑
     * </pre>
     */
    public java.util.List<com.ninelook.wecard.protocol.beans.BeanBuildMessage.BuildInfo> getBuildInfoListList() {
      return buildInfoList_;
    }
    /**
     * <code>repeated .BuildInfo buildInfoList = 5;</code>
     *
     * <pre>
     *上场建筑
     * </pre>
     */
    public java.util.List<? extends com.ninelook.wecard.protocol.beans.BeanBuildMessage.BuildInfoOrBuilder>
        getBuildInfoListOrBuilderList() {
      return buildInfoList_;
    }
    /**
     * <code>repeated .BuildInfo buildInfoList = 5;</code>
     *
     * <pre>
     *上场建筑
     * </pre>
     */
    public int getBuildInfoListCount() {
      return buildInfoList_.size();
    }
    /**
     * <code>repeated .BuildInfo buildInfoList = 5;</code>
     *
     * <pre>
     *上场建筑
     * </pre>
     */
    public com.ninelook.wecard.protocol.beans.BeanBuildMessage.BuildInfo getBuildInfoList(int index) {
      return buildInfoList_.get(index);
    }
    /**
     * <code>repeated .BuildInfo buildInfoList = 5;</code>
     *
     * <pre>
     *上场建筑
     * </pre>
     */
    public com.ninelook.wecard.protocol.beans.BeanBuildMessage.BuildInfoOrBuilder getBuildInfoListOrBuilder(
        int index) {
      return buildInfoList_.get(index);
    }

    private void initFields() {
      homeId_ = 0;
      mapInfo_ = com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapInfo.getDefaultInstance();
      heroInfoList_ = java.util.Collections.emptyList();
      creatureInfoList_ = java.util.Collections.emptyList();
      buildInfoList_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasHomeId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMapInfo()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getMapInfo().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getHeroInfoListCount(); i++) {
        if (!getHeroInfoList(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getCreatureInfoListCount(); i++) {
        if (!getCreatureInfoList(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getBuildInfoListCount(); i++) {
        if (!getBuildInfoList(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, homeId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, mapInfo_);
      }
      for (int i = 0; i < heroInfoList_.size(); i++) {
        output.writeMessage(3, heroInfoList_.get(i));
      }
      for (int i = 0; i < creatureInfoList_.size(); i++) {
        output.writeMessage(4, creatureInfoList_.get(i));
      }
      for (int i = 0; i < buildInfoList_.size(); i++) {
        output.writeMessage(5, buildInfoList_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, homeId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, mapInfo_);
      }
      for (int i = 0; i < heroInfoList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, heroInfoList_.get(i));
      }
      for (int i = 0; i < creatureInfoList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, creatureInfoList_.get(i));
      }
      for (int i = 0; i < buildInfoList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, buildInfoList_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code WarInfo}
     *
     * <pre>
     *战场信息
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.ninelook.wecard.protocol.beans.BeanHomeMessage.internal_static_WarInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.ninelook.wecard.protocol.beans.BeanHomeMessage.internal_static_WarInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarInfo.class, com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarInfo.Builder.class);
      }

      // Construct using com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getMapInfoFieldBuilder();
          getHeroInfoListFieldBuilder();
          getCreatureInfoListFieldBuilder();
          getBuildInfoListFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        homeId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (mapInfoBuilder_ == null) {
          mapInfo_ = com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapInfo.getDefaultInstance();
        } else {
          mapInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (heroInfoListBuilder_ == null) {
          heroInfoList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          heroInfoListBuilder_.clear();
        }
        if (creatureInfoListBuilder_ == null) {
          creatureInfoList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          creatureInfoListBuilder_.clear();
        }
        if (buildInfoListBuilder_ == null) {
          buildInfoList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          buildInfoListBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.ninelook.wecard.protocol.beans.BeanHomeMessage.internal_static_WarInfo_descriptor;
      }

      public com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarInfo getDefaultInstanceForType() {
        return com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarInfo.getDefaultInstance();
      }

      public com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarInfo build() {
        com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarInfo buildPartial() {
        com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarInfo result = new com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.homeId_ = homeId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (mapInfoBuilder_ == null) {
          result.mapInfo_ = mapInfo_;
        } else {
          result.mapInfo_ = mapInfoBuilder_.build();
        }
        if (heroInfoListBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            heroInfoList_ = java.util.Collections.unmodifiableList(heroInfoList_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.heroInfoList_ = heroInfoList_;
        } else {
          result.heroInfoList_ = heroInfoListBuilder_.build();
        }
        if (creatureInfoListBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            creatureInfoList_ = java.util.Collections.unmodifiableList(creatureInfoList_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.creatureInfoList_ = creatureInfoList_;
        } else {
          result.creatureInfoList_ = creatureInfoListBuilder_.build();
        }
        if (buildInfoListBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            buildInfoList_ = java.util.Collections.unmodifiableList(buildInfoList_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.buildInfoList_ = buildInfoList_;
        } else {
          result.buildInfoList_ = buildInfoListBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarInfo) {
          return mergeFrom((com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarInfo other) {
        if (other == com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarInfo.getDefaultInstance()) return this;
        if (other.hasHomeId()) {
          setHomeId(other.getHomeId());
        }
        if (other.hasMapInfo()) {
          mergeMapInfo(other.getMapInfo());
        }
        if (heroInfoListBuilder_ == null) {
          if (!other.heroInfoList_.isEmpty()) {
            if (heroInfoList_.isEmpty()) {
              heroInfoList_ = other.heroInfoList_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureHeroInfoListIsMutable();
              heroInfoList_.addAll(other.heroInfoList_);
            }
            onChanged();
          }
        } else {
          if (!other.heroInfoList_.isEmpty()) {
            if (heroInfoListBuilder_.isEmpty()) {
              heroInfoListBuilder_.dispose();
              heroInfoListBuilder_ = null;
              heroInfoList_ = other.heroInfoList_;
              bitField0_ = (bitField0_ & ~0x00000004);
              heroInfoListBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getHeroInfoListFieldBuilder() : null;
            } else {
              heroInfoListBuilder_.addAllMessages(other.heroInfoList_);
            }
          }
        }
        if (creatureInfoListBuilder_ == null) {
          if (!other.creatureInfoList_.isEmpty()) {
            if (creatureInfoList_.isEmpty()) {
              creatureInfoList_ = other.creatureInfoList_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureCreatureInfoListIsMutable();
              creatureInfoList_.addAll(other.creatureInfoList_);
            }
            onChanged();
          }
        } else {
          if (!other.creatureInfoList_.isEmpty()) {
            if (creatureInfoListBuilder_.isEmpty()) {
              creatureInfoListBuilder_.dispose();
              creatureInfoListBuilder_ = null;
              creatureInfoList_ = other.creatureInfoList_;
              bitField0_ = (bitField0_ & ~0x00000008);
              creatureInfoListBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getCreatureInfoListFieldBuilder() : null;
            } else {
              creatureInfoListBuilder_.addAllMessages(other.creatureInfoList_);
            }
          }
        }
        if (buildInfoListBuilder_ == null) {
          if (!other.buildInfoList_.isEmpty()) {
            if (buildInfoList_.isEmpty()) {
              buildInfoList_ = other.buildInfoList_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureBuildInfoListIsMutable();
              buildInfoList_.addAll(other.buildInfoList_);
            }
            onChanged();
          }
        } else {
          if (!other.buildInfoList_.isEmpty()) {
            if (buildInfoListBuilder_.isEmpty()) {
              buildInfoListBuilder_.dispose();
              buildInfoListBuilder_ = null;
              buildInfoList_ = other.buildInfoList_;
              bitField0_ = (bitField0_ & ~0x00000010);
              buildInfoListBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getBuildInfoListFieldBuilder() : null;
            } else {
              buildInfoListBuilder_.addAllMessages(other.buildInfoList_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasHomeId()) {
          
          return false;
        }
        if (!hasMapInfo()) {
          
          return false;
        }
        if (!getMapInfo().isInitialized()) {
          
          return false;
        }
        for (int i = 0; i < getHeroInfoListCount(); i++) {
          if (!getHeroInfoList(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getCreatureInfoListCount(); i++) {
          if (!getCreatureInfoList(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getBuildInfoListCount(); i++) {
          if (!getBuildInfoList(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 homeId = 1;
      private int homeId_ ;
      /**
       * <code>required int32 homeId = 1;</code>
       *
       * <pre>
       *房间ID
       * </pre>
       */
      public boolean hasHomeId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 homeId = 1;</code>
       *
       * <pre>
       *房间ID
       * </pre>
       */
      public int getHomeId() {
        return homeId_;
      }
      /**
       * <code>required int32 homeId = 1;</code>
       *
       * <pre>
       *房间ID
       * </pre>
       */
      public Builder setHomeId(int value) {
        bitField0_ |= 0x00000001;
        homeId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 homeId = 1;</code>
       *
       * <pre>
       *房间ID
       * </pre>
       */
      public Builder clearHomeId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        homeId_ = 0;
        onChanged();
        return this;
      }

      // required .MapInfo mapInfo = 2;
      private com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapInfo mapInfo_ = com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapInfo, com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapInfo.Builder, com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapInfoOrBuilder> mapInfoBuilder_;
      /**
       * <code>required .MapInfo mapInfo = 2;</code>
       *
       * <pre>
       *地图信息
       * </pre>
       */
      public boolean hasMapInfo() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .MapInfo mapInfo = 2;</code>
       *
       * <pre>
       *地图信息
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapInfo getMapInfo() {
        if (mapInfoBuilder_ == null) {
          return mapInfo_;
        } else {
          return mapInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>required .MapInfo mapInfo = 2;</code>
       *
       * <pre>
       *地图信息
       * </pre>
       */
      public Builder setMapInfo(com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapInfo value) {
        if (mapInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          mapInfo_ = value;
          onChanged();
        } else {
          mapInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .MapInfo mapInfo = 2;</code>
       *
       * <pre>
       *地图信息
       * </pre>
       */
      public Builder setMapInfo(
          com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapInfo.Builder builderForValue) {
        if (mapInfoBuilder_ == null) {
          mapInfo_ = builderForValue.build();
          onChanged();
        } else {
          mapInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .MapInfo mapInfo = 2;</code>
       *
       * <pre>
       *地图信息
       * </pre>
       */
      public Builder mergeMapInfo(com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapInfo value) {
        if (mapInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              mapInfo_ != com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapInfo.getDefaultInstance()) {
            mapInfo_ =
              com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapInfo.newBuilder(mapInfo_).mergeFrom(value).buildPartial();
          } else {
            mapInfo_ = value;
          }
          onChanged();
        } else {
          mapInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .MapInfo mapInfo = 2;</code>
       *
       * <pre>
       *地图信息
       * </pre>
       */
      public Builder clearMapInfo() {
        if (mapInfoBuilder_ == null) {
          mapInfo_ = com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapInfo.getDefaultInstance();
          onChanged();
        } else {
          mapInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>required .MapInfo mapInfo = 2;</code>
       *
       * <pre>
       *地图信息
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapInfo.Builder getMapInfoBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getMapInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>required .MapInfo mapInfo = 2;</code>
       *
       * <pre>
       *地图信息
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapInfoOrBuilder getMapInfoOrBuilder() {
        if (mapInfoBuilder_ != null) {
          return mapInfoBuilder_.getMessageOrBuilder();
        } else {
          return mapInfo_;
        }
      }
      /**
       * <code>required .MapInfo mapInfo = 2;</code>
       *
       * <pre>
       *地图信息
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapInfo, com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapInfo.Builder, com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapInfoOrBuilder>
          getMapInfoFieldBuilder() {
        if (mapInfoBuilder_ == null) {
          mapInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapInfo, com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapInfo.Builder, com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapInfoOrBuilder>(
                  mapInfo_,
                  getParentForChildren(),
                  isClean());
          mapInfo_ = null;
        }
        return mapInfoBuilder_;
      }

      // repeated .HeroInfo heroInfoList = 3;
      private java.util.List<com.ninelook.wecard.protocol.beans.BeanHeroMessage.HeroInfo> heroInfoList_ =
        java.util.Collections.emptyList();
      private void ensureHeroInfoListIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          heroInfoList_ = new java.util.ArrayList<com.ninelook.wecard.protocol.beans.BeanHeroMessage.HeroInfo>(heroInfoList_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.ninelook.wecard.protocol.beans.BeanHeroMessage.HeroInfo, com.ninelook.wecard.protocol.beans.BeanHeroMessage.HeroInfo.Builder, com.ninelook.wecard.protocol.beans.BeanHeroMessage.HeroInfoOrBuilder> heroInfoListBuilder_;

      /**
       * <code>repeated .HeroInfo heroInfoList = 3;</code>
       *
       * <pre>
       *上场英雄
       * </pre>
       */
      public java.util.List<com.ninelook.wecard.protocol.beans.BeanHeroMessage.HeroInfo> getHeroInfoListList() {
        if (heroInfoListBuilder_ == null) {
          return java.util.Collections.unmodifiableList(heroInfoList_);
        } else {
          return heroInfoListBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .HeroInfo heroInfoList = 3;</code>
       *
       * <pre>
       *上场英雄
       * </pre>
       */
      public int getHeroInfoListCount() {
        if (heroInfoListBuilder_ == null) {
          return heroInfoList_.size();
        } else {
          return heroInfoListBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .HeroInfo heroInfoList = 3;</code>
       *
       * <pre>
       *上场英雄
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanHeroMessage.HeroInfo getHeroInfoList(int index) {
        if (heroInfoListBuilder_ == null) {
          return heroInfoList_.get(index);
        } else {
          return heroInfoListBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .HeroInfo heroInfoList = 3;</code>
       *
       * <pre>
       *上场英雄
       * </pre>
       */
      public Builder setHeroInfoList(
          int index, com.ninelook.wecard.protocol.beans.BeanHeroMessage.HeroInfo value) {
        if (heroInfoListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHeroInfoListIsMutable();
          heroInfoList_.set(index, value);
          onChanged();
        } else {
          heroInfoListBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .HeroInfo heroInfoList = 3;</code>
       *
       * <pre>
       *上场英雄
       * </pre>
       */
      public Builder setHeroInfoList(
          int index, com.ninelook.wecard.protocol.beans.BeanHeroMessage.HeroInfo.Builder builderForValue) {
        if (heroInfoListBuilder_ == null) {
          ensureHeroInfoListIsMutable();
          heroInfoList_.set(index, builderForValue.build());
          onChanged();
        } else {
          heroInfoListBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .HeroInfo heroInfoList = 3;</code>
       *
       * <pre>
       *上场英雄
       * </pre>
       */
      public Builder addHeroInfoList(com.ninelook.wecard.protocol.beans.BeanHeroMessage.HeroInfo value) {
        if (heroInfoListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHeroInfoListIsMutable();
          heroInfoList_.add(value);
          onChanged();
        } else {
          heroInfoListBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .HeroInfo heroInfoList = 3;</code>
       *
       * <pre>
       *上场英雄
       * </pre>
       */
      public Builder addHeroInfoList(
          int index, com.ninelook.wecard.protocol.beans.BeanHeroMessage.HeroInfo value) {
        if (heroInfoListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHeroInfoListIsMutable();
          heroInfoList_.add(index, value);
          onChanged();
        } else {
          heroInfoListBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .HeroInfo heroInfoList = 3;</code>
       *
       * <pre>
       *上场英雄
       * </pre>
       */
      public Builder addHeroInfoList(
          com.ninelook.wecard.protocol.beans.BeanHeroMessage.HeroInfo.Builder builderForValue) {
        if (heroInfoListBuilder_ == null) {
          ensureHeroInfoListIsMutable();
          heroInfoList_.add(builderForValue.build());
          onChanged();
        } else {
          heroInfoListBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .HeroInfo heroInfoList = 3;</code>
       *
       * <pre>
       *上场英雄
       * </pre>
       */
      public Builder addHeroInfoList(
          int index, com.ninelook.wecard.protocol.beans.BeanHeroMessage.HeroInfo.Builder builderForValue) {
        if (heroInfoListBuilder_ == null) {
          ensureHeroInfoListIsMutable();
          heroInfoList_.add(index, builderForValue.build());
          onChanged();
        } else {
          heroInfoListBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .HeroInfo heroInfoList = 3;</code>
       *
       * <pre>
       *上场英雄
       * </pre>
       */
      public Builder addAllHeroInfoList(
          java.lang.Iterable<? extends com.ninelook.wecard.protocol.beans.BeanHeroMessage.HeroInfo> values) {
        if (heroInfoListBuilder_ == null) {
          ensureHeroInfoListIsMutable();
          super.addAll(values, heroInfoList_);
          onChanged();
        } else {
          heroInfoListBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .HeroInfo heroInfoList = 3;</code>
       *
       * <pre>
       *上场英雄
       * </pre>
       */
      public Builder clearHeroInfoList() {
        if (heroInfoListBuilder_ == null) {
          heroInfoList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          heroInfoListBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .HeroInfo heroInfoList = 3;</code>
       *
       * <pre>
       *上场英雄
       * </pre>
       */
      public Builder removeHeroInfoList(int index) {
        if (heroInfoListBuilder_ == null) {
          ensureHeroInfoListIsMutable();
          heroInfoList_.remove(index);
          onChanged();
        } else {
          heroInfoListBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .HeroInfo heroInfoList = 3;</code>
       *
       * <pre>
       *上场英雄
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanHeroMessage.HeroInfo.Builder getHeroInfoListBuilder(
          int index) {
        return getHeroInfoListFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .HeroInfo heroInfoList = 3;</code>
       *
       * <pre>
       *上场英雄
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanHeroMessage.HeroInfoOrBuilder getHeroInfoListOrBuilder(
          int index) {
        if (heroInfoListBuilder_ == null) {
          return heroInfoList_.get(index);  } else {
          return heroInfoListBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .HeroInfo heroInfoList = 3;</code>
       *
       * <pre>
       *上场英雄
       * </pre>
       */
      public java.util.List<? extends com.ninelook.wecard.protocol.beans.BeanHeroMessage.HeroInfoOrBuilder>
           getHeroInfoListOrBuilderList() {
        if (heroInfoListBuilder_ != null) {
          return heroInfoListBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(heroInfoList_);
        }
      }
      /**
       * <code>repeated .HeroInfo heroInfoList = 3;</code>
       *
       * <pre>
       *上场英雄
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanHeroMessage.HeroInfo.Builder addHeroInfoListBuilder() {
        return getHeroInfoListFieldBuilder().addBuilder(
            com.ninelook.wecard.protocol.beans.BeanHeroMessage.HeroInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .HeroInfo heroInfoList = 3;</code>
       *
       * <pre>
       *上场英雄
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanHeroMessage.HeroInfo.Builder addHeroInfoListBuilder(
          int index) {
        return getHeroInfoListFieldBuilder().addBuilder(
            index, com.ninelook.wecard.protocol.beans.BeanHeroMessage.HeroInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .HeroInfo heroInfoList = 3;</code>
       *
       * <pre>
       *上场英雄
       * </pre>
       */
      public java.util.List<com.ninelook.wecard.protocol.beans.BeanHeroMessage.HeroInfo.Builder>
           getHeroInfoListBuilderList() {
        return getHeroInfoListFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.ninelook.wecard.protocol.beans.BeanHeroMessage.HeroInfo, com.ninelook.wecard.protocol.beans.BeanHeroMessage.HeroInfo.Builder, com.ninelook.wecard.protocol.beans.BeanHeroMessage.HeroInfoOrBuilder>
          getHeroInfoListFieldBuilder() {
        if (heroInfoListBuilder_ == null) {
          heroInfoListBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.ninelook.wecard.protocol.beans.BeanHeroMessage.HeroInfo, com.ninelook.wecard.protocol.beans.BeanHeroMessage.HeroInfo.Builder, com.ninelook.wecard.protocol.beans.BeanHeroMessage.HeroInfoOrBuilder>(
                  heroInfoList_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          heroInfoList_ = null;
        }
        return heroInfoListBuilder_;
      }

      // repeated .CreatureInfo creatureInfoList = 4;
      private java.util.List<com.ninelook.wecard.protocol.beans.BeanCreatureMessage.CreatureInfo> creatureInfoList_ =
        java.util.Collections.emptyList();
      private void ensureCreatureInfoListIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          creatureInfoList_ = new java.util.ArrayList<com.ninelook.wecard.protocol.beans.BeanCreatureMessage.CreatureInfo>(creatureInfoList_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.ninelook.wecard.protocol.beans.BeanCreatureMessage.CreatureInfo, com.ninelook.wecard.protocol.beans.BeanCreatureMessage.CreatureInfo.Builder, com.ninelook.wecard.protocol.beans.BeanCreatureMessage.CreatureInfoOrBuilder> creatureInfoListBuilder_;

      /**
       * <code>repeated .CreatureInfo creatureInfoList = 4;</code>
       *
       * <pre>
       *上场野怪
       * </pre>
       */
      public java.util.List<com.ninelook.wecard.protocol.beans.BeanCreatureMessage.CreatureInfo> getCreatureInfoListList() {
        if (creatureInfoListBuilder_ == null) {
          return java.util.Collections.unmodifiableList(creatureInfoList_);
        } else {
          return creatureInfoListBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CreatureInfo creatureInfoList = 4;</code>
       *
       * <pre>
       *上场野怪
       * </pre>
       */
      public int getCreatureInfoListCount() {
        if (creatureInfoListBuilder_ == null) {
          return creatureInfoList_.size();
        } else {
          return creatureInfoListBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CreatureInfo creatureInfoList = 4;</code>
       *
       * <pre>
       *上场野怪
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanCreatureMessage.CreatureInfo getCreatureInfoList(int index) {
        if (creatureInfoListBuilder_ == null) {
          return creatureInfoList_.get(index);
        } else {
          return creatureInfoListBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CreatureInfo creatureInfoList = 4;</code>
       *
       * <pre>
       *上场野怪
       * </pre>
       */
      public Builder setCreatureInfoList(
          int index, com.ninelook.wecard.protocol.beans.BeanCreatureMessage.CreatureInfo value) {
        if (creatureInfoListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCreatureInfoListIsMutable();
          creatureInfoList_.set(index, value);
          onChanged();
        } else {
          creatureInfoListBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CreatureInfo creatureInfoList = 4;</code>
       *
       * <pre>
       *上场野怪
       * </pre>
       */
      public Builder setCreatureInfoList(
          int index, com.ninelook.wecard.protocol.beans.BeanCreatureMessage.CreatureInfo.Builder builderForValue) {
        if (creatureInfoListBuilder_ == null) {
          ensureCreatureInfoListIsMutable();
          creatureInfoList_.set(index, builderForValue.build());
          onChanged();
        } else {
          creatureInfoListBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CreatureInfo creatureInfoList = 4;</code>
       *
       * <pre>
       *上场野怪
       * </pre>
       */
      public Builder addCreatureInfoList(com.ninelook.wecard.protocol.beans.BeanCreatureMessage.CreatureInfo value) {
        if (creatureInfoListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCreatureInfoListIsMutable();
          creatureInfoList_.add(value);
          onChanged();
        } else {
          creatureInfoListBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CreatureInfo creatureInfoList = 4;</code>
       *
       * <pre>
       *上场野怪
       * </pre>
       */
      public Builder addCreatureInfoList(
          int index, com.ninelook.wecard.protocol.beans.BeanCreatureMessage.CreatureInfo value) {
        if (creatureInfoListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCreatureInfoListIsMutable();
          creatureInfoList_.add(index, value);
          onChanged();
        } else {
          creatureInfoListBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CreatureInfo creatureInfoList = 4;</code>
       *
       * <pre>
       *上场野怪
       * </pre>
       */
      public Builder addCreatureInfoList(
          com.ninelook.wecard.protocol.beans.BeanCreatureMessage.CreatureInfo.Builder builderForValue) {
        if (creatureInfoListBuilder_ == null) {
          ensureCreatureInfoListIsMutable();
          creatureInfoList_.add(builderForValue.build());
          onChanged();
        } else {
          creatureInfoListBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CreatureInfo creatureInfoList = 4;</code>
       *
       * <pre>
       *上场野怪
       * </pre>
       */
      public Builder addCreatureInfoList(
          int index, com.ninelook.wecard.protocol.beans.BeanCreatureMessage.CreatureInfo.Builder builderForValue) {
        if (creatureInfoListBuilder_ == null) {
          ensureCreatureInfoListIsMutable();
          creatureInfoList_.add(index, builderForValue.build());
          onChanged();
        } else {
          creatureInfoListBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CreatureInfo creatureInfoList = 4;</code>
       *
       * <pre>
       *上场野怪
       * </pre>
       */
      public Builder addAllCreatureInfoList(
          java.lang.Iterable<? extends com.ninelook.wecard.protocol.beans.BeanCreatureMessage.CreatureInfo> values) {
        if (creatureInfoListBuilder_ == null) {
          ensureCreatureInfoListIsMutable();
          super.addAll(values, creatureInfoList_);
          onChanged();
        } else {
          creatureInfoListBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CreatureInfo creatureInfoList = 4;</code>
       *
       * <pre>
       *上场野怪
       * </pre>
       */
      public Builder clearCreatureInfoList() {
        if (creatureInfoListBuilder_ == null) {
          creatureInfoList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          creatureInfoListBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CreatureInfo creatureInfoList = 4;</code>
       *
       * <pre>
       *上场野怪
       * </pre>
       */
      public Builder removeCreatureInfoList(int index) {
        if (creatureInfoListBuilder_ == null) {
          ensureCreatureInfoListIsMutable();
          creatureInfoList_.remove(index);
          onChanged();
        } else {
          creatureInfoListBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CreatureInfo creatureInfoList = 4;</code>
       *
       * <pre>
       *上场野怪
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanCreatureMessage.CreatureInfo.Builder getCreatureInfoListBuilder(
          int index) {
        return getCreatureInfoListFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CreatureInfo creatureInfoList = 4;</code>
       *
       * <pre>
       *上场野怪
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanCreatureMessage.CreatureInfoOrBuilder getCreatureInfoListOrBuilder(
          int index) {
        if (creatureInfoListBuilder_ == null) {
          return creatureInfoList_.get(index);  } else {
          return creatureInfoListBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CreatureInfo creatureInfoList = 4;</code>
       *
       * <pre>
       *上场野怪
       * </pre>
       */
      public java.util.List<? extends com.ninelook.wecard.protocol.beans.BeanCreatureMessage.CreatureInfoOrBuilder>
           getCreatureInfoListOrBuilderList() {
        if (creatureInfoListBuilder_ != null) {
          return creatureInfoListBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(creatureInfoList_);
        }
      }
      /**
       * <code>repeated .CreatureInfo creatureInfoList = 4;</code>
       *
       * <pre>
       *上场野怪
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanCreatureMessage.CreatureInfo.Builder addCreatureInfoListBuilder() {
        return getCreatureInfoListFieldBuilder().addBuilder(
            com.ninelook.wecard.protocol.beans.BeanCreatureMessage.CreatureInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .CreatureInfo creatureInfoList = 4;</code>
       *
       * <pre>
       *上场野怪
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanCreatureMessage.CreatureInfo.Builder addCreatureInfoListBuilder(
          int index) {
        return getCreatureInfoListFieldBuilder().addBuilder(
            index, com.ninelook.wecard.protocol.beans.BeanCreatureMessage.CreatureInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .CreatureInfo creatureInfoList = 4;</code>
       *
       * <pre>
       *上场野怪
       * </pre>
       */
      public java.util.List<com.ninelook.wecard.protocol.beans.BeanCreatureMessage.CreatureInfo.Builder>
           getCreatureInfoListBuilderList() {
        return getCreatureInfoListFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.ninelook.wecard.protocol.beans.BeanCreatureMessage.CreatureInfo, com.ninelook.wecard.protocol.beans.BeanCreatureMessage.CreatureInfo.Builder, com.ninelook.wecard.protocol.beans.BeanCreatureMessage.CreatureInfoOrBuilder>
          getCreatureInfoListFieldBuilder() {
        if (creatureInfoListBuilder_ == null) {
          creatureInfoListBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.ninelook.wecard.protocol.beans.BeanCreatureMessage.CreatureInfo, com.ninelook.wecard.protocol.beans.BeanCreatureMessage.CreatureInfo.Builder, com.ninelook.wecard.protocol.beans.BeanCreatureMessage.CreatureInfoOrBuilder>(
                  creatureInfoList_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          creatureInfoList_ = null;
        }
        return creatureInfoListBuilder_;
      }

      // repeated .BuildInfo buildInfoList = 5;
      private java.util.List<com.ninelook.wecard.protocol.beans.BeanBuildMessage.BuildInfo> buildInfoList_ =
        java.util.Collections.emptyList();
      private void ensureBuildInfoListIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          buildInfoList_ = new java.util.ArrayList<com.ninelook.wecard.protocol.beans.BeanBuildMessage.BuildInfo>(buildInfoList_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.ninelook.wecard.protocol.beans.BeanBuildMessage.BuildInfo, com.ninelook.wecard.protocol.beans.BeanBuildMessage.BuildInfo.Builder, com.ninelook.wecard.protocol.beans.BeanBuildMessage.BuildInfoOrBuilder> buildInfoListBuilder_;

      /**
       * <code>repeated .BuildInfo buildInfoList = 5;</code>
       *
       * <pre>
       *上场建筑
       * </pre>
       */
      public java.util.List<com.ninelook.wecard.protocol.beans.BeanBuildMessage.BuildInfo> getBuildInfoListList() {
        if (buildInfoListBuilder_ == null) {
          return java.util.Collections.unmodifiableList(buildInfoList_);
        } else {
          return buildInfoListBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .BuildInfo buildInfoList = 5;</code>
       *
       * <pre>
       *上场建筑
       * </pre>
       */
      public int getBuildInfoListCount() {
        if (buildInfoListBuilder_ == null) {
          return buildInfoList_.size();
        } else {
          return buildInfoListBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .BuildInfo buildInfoList = 5;</code>
       *
       * <pre>
       *上场建筑
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanBuildMessage.BuildInfo getBuildInfoList(int index) {
        if (buildInfoListBuilder_ == null) {
          return buildInfoList_.get(index);
        } else {
          return buildInfoListBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .BuildInfo buildInfoList = 5;</code>
       *
       * <pre>
       *上场建筑
       * </pre>
       */
      public Builder setBuildInfoList(
          int index, com.ninelook.wecard.protocol.beans.BeanBuildMessage.BuildInfo value) {
        if (buildInfoListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBuildInfoListIsMutable();
          buildInfoList_.set(index, value);
          onChanged();
        } else {
          buildInfoListBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .BuildInfo buildInfoList = 5;</code>
       *
       * <pre>
       *上场建筑
       * </pre>
       */
      public Builder setBuildInfoList(
          int index, com.ninelook.wecard.protocol.beans.BeanBuildMessage.BuildInfo.Builder builderForValue) {
        if (buildInfoListBuilder_ == null) {
          ensureBuildInfoListIsMutable();
          buildInfoList_.set(index, builderForValue.build());
          onChanged();
        } else {
          buildInfoListBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .BuildInfo buildInfoList = 5;</code>
       *
       * <pre>
       *上场建筑
       * </pre>
       */
      public Builder addBuildInfoList(com.ninelook.wecard.protocol.beans.BeanBuildMessage.BuildInfo value) {
        if (buildInfoListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBuildInfoListIsMutable();
          buildInfoList_.add(value);
          onChanged();
        } else {
          buildInfoListBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .BuildInfo buildInfoList = 5;</code>
       *
       * <pre>
       *上场建筑
       * </pre>
       */
      public Builder addBuildInfoList(
          int index, com.ninelook.wecard.protocol.beans.BeanBuildMessage.BuildInfo value) {
        if (buildInfoListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBuildInfoListIsMutable();
          buildInfoList_.add(index, value);
          onChanged();
        } else {
          buildInfoListBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .BuildInfo buildInfoList = 5;</code>
       *
       * <pre>
       *上场建筑
       * </pre>
       */
      public Builder addBuildInfoList(
          com.ninelook.wecard.protocol.beans.BeanBuildMessage.BuildInfo.Builder builderForValue) {
        if (buildInfoListBuilder_ == null) {
          ensureBuildInfoListIsMutable();
          buildInfoList_.add(builderForValue.build());
          onChanged();
        } else {
          buildInfoListBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .BuildInfo buildInfoList = 5;</code>
       *
       * <pre>
       *上场建筑
       * </pre>
       */
      public Builder addBuildInfoList(
          int index, com.ninelook.wecard.protocol.beans.BeanBuildMessage.BuildInfo.Builder builderForValue) {
        if (buildInfoListBuilder_ == null) {
          ensureBuildInfoListIsMutable();
          buildInfoList_.add(index, builderForValue.build());
          onChanged();
        } else {
          buildInfoListBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .BuildInfo buildInfoList = 5;</code>
       *
       * <pre>
       *上场建筑
       * </pre>
       */
      public Builder addAllBuildInfoList(
          java.lang.Iterable<? extends com.ninelook.wecard.protocol.beans.BeanBuildMessage.BuildInfo> values) {
        if (buildInfoListBuilder_ == null) {
          ensureBuildInfoListIsMutable();
          super.addAll(values, buildInfoList_);
          onChanged();
        } else {
          buildInfoListBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .BuildInfo buildInfoList = 5;</code>
       *
       * <pre>
       *上场建筑
       * </pre>
       */
      public Builder clearBuildInfoList() {
        if (buildInfoListBuilder_ == null) {
          buildInfoList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          buildInfoListBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .BuildInfo buildInfoList = 5;</code>
       *
       * <pre>
       *上场建筑
       * </pre>
       */
      public Builder removeBuildInfoList(int index) {
        if (buildInfoListBuilder_ == null) {
          ensureBuildInfoListIsMutable();
          buildInfoList_.remove(index);
          onChanged();
        } else {
          buildInfoListBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .BuildInfo buildInfoList = 5;</code>
       *
       * <pre>
       *上场建筑
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanBuildMessage.BuildInfo.Builder getBuildInfoListBuilder(
          int index) {
        return getBuildInfoListFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .BuildInfo buildInfoList = 5;</code>
       *
       * <pre>
       *上场建筑
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanBuildMessage.BuildInfoOrBuilder getBuildInfoListOrBuilder(
          int index) {
        if (buildInfoListBuilder_ == null) {
          return buildInfoList_.get(index);  } else {
          return buildInfoListBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .BuildInfo buildInfoList = 5;</code>
       *
       * <pre>
       *上场建筑
       * </pre>
       */
      public java.util.List<? extends com.ninelook.wecard.protocol.beans.BeanBuildMessage.BuildInfoOrBuilder>
           getBuildInfoListOrBuilderList() {
        if (buildInfoListBuilder_ != null) {
          return buildInfoListBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(buildInfoList_);
        }
      }
      /**
       * <code>repeated .BuildInfo buildInfoList = 5;</code>
       *
       * <pre>
       *上场建筑
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanBuildMessage.BuildInfo.Builder addBuildInfoListBuilder() {
        return getBuildInfoListFieldBuilder().addBuilder(
            com.ninelook.wecard.protocol.beans.BeanBuildMessage.BuildInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .BuildInfo buildInfoList = 5;</code>
       *
       * <pre>
       *上场建筑
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanBuildMessage.BuildInfo.Builder addBuildInfoListBuilder(
          int index) {
        return getBuildInfoListFieldBuilder().addBuilder(
            index, com.ninelook.wecard.protocol.beans.BeanBuildMessage.BuildInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .BuildInfo buildInfoList = 5;</code>
       *
       * <pre>
       *上场建筑
       * </pre>
       */
      public java.util.List<com.ninelook.wecard.protocol.beans.BeanBuildMessage.BuildInfo.Builder>
           getBuildInfoListBuilderList() {
        return getBuildInfoListFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.ninelook.wecard.protocol.beans.BeanBuildMessage.BuildInfo, com.ninelook.wecard.protocol.beans.BeanBuildMessage.BuildInfo.Builder, com.ninelook.wecard.protocol.beans.BeanBuildMessage.BuildInfoOrBuilder>
          getBuildInfoListFieldBuilder() {
        if (buildInfoListBuilder_ == null) {
          buildInfoListBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.ninelook.wecard.protocol.beans.BeanBuildMessage.BuildInfo, com.ninelook.wecard.protocol.beans.BeanBuildMessage.BuildInfo.Builder, com.ninelook.wecard.protocol.beans.BeanBuildMessage.BuildInfoOrBuilder>(
                  buildInfoList_,
                  ((bitField0_ & 0x00000010) == 0x00000010),
                  getParentForChildren(),
                  isClean());
          buildInfoList_ = null;
        }
        return buildInfoListBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:WarInfo)
    }

    static {
      defaultInstance = new WarInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:WarInfo)
  }

  public interface LoadedInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 homeId = 1;
    /**
     * <code>required int32 homeId = 1;</code>
     *
     * <pre>
     *房间ID
     * </pre>
     */
    boolean hasHomeId();
    /**
     * <code>required int32 homeId = 1;</code>
     *
     * <pre>
     *房间ID
     * </pre>
     */
    int getHomeId();

    // repeated int64 lUid = 2;
    /**
     * <code>repeated int64 lUid = 2;</code>
     *
     * <pre>
     *完成加载的用户ID
     * </pre>
     */
    java.util.List<java.lang.Long> getLUidList();
    /**
     * <code>repeated int64 lUid = 2;</code>
     *
     * <pre>
     *完成加载的用户ID
     * </pre>
     */
    int getLUidCount();
    /**
     * <code>repeated int64 lUid = 2;</code>
     *
     * <pre>
     *完成加载的用户ID
     * </pre>
     */
    long getLUid(int index);
  }
  /**
   * Protobuf type {@code LoadedInfo}
   *
   * <pre>
   *资源加载完成通知信息
   * </pre>
   */
  public static final class LoadedInfo extends
      com.google.protobuf.GeneratedMessage
      implements LoadedInfoOrBuilder {
    // Use LoadedInfo.newBuilder() to construct.
    private LoadedInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private LoadedInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final LoadedInfo defaultInstance;
    public static LoadedInfo getDefaultInstance() {
      return defaultInstance;
    }

    public LoadedInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private LoadedInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              homeId_ = input.readInt32();
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                lUid_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000002;
              }
              lUid_.add(input.readInt64());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                lUid_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                lUid_.add(input.readInt64());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          lUid_ = java.util.Collections.unmodifiableList(lUid_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.ninelook.wecard.protocol.beans.BeanHomeMessage.internal_static_LoadedInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.ninelook.wecard.protocol.beans.BeanHomeMessage.internal_static_LoadedInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.ninelook.wecard.protocol.beans.BeanHomeMessage.LoadedInfo.class, com.ninelook.wecard.protocol.beans.BeanHomeMessage.LoadedInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<LoadedInfo> PARSER =
        new com.google.protobuf.AbstractParser<LoadedInfo>() {
      public LoadedInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new LoadedInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<LoadedInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 homeId = 1;
    public static final int HOMEID_FIELD_NUMBER = 1;
    private int homeId_;
    /**
     * <code>required int32 homeId = 1;</code>
     *
     * <pre>
     *房间ID
     * </pre>
     */
    public boolean hasHomeId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 homeId = 1;</code>
     *
     * <pre>
     *房间ID
     * </pre>
     */
    public int getHomeId() {
      return homeId_;
    }

    // repeated int64 lUid = 2;
    public static final int LUID_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Long> lUid_;
    /**
     * <code>repeated int64 lUid = 2;</code>
     *
     * <pre>
     *完成加载的用户ID
     * </pre>
     */
    public java.util.List<java.lang.Long>
        getLUidList() {
      return lUid_;
    }
    /**
     * <code>repeated int64 lUid = 2;</code>
     *
     * <pre>
     *完成加载的用户ID
     * </pre>
     */
    public int getLUidCount() {
      return lUid_.size();
    }
    /**
     * <code>repeated int64 lUid = 2;</code>
     *
     * <pre>
     *完成加载的用户ID
     * </pre>
     */
    public long getLUid(int index) {
      return lUid_.get(index);
    }

    private void initFields() {
      homeId_ = 0;
      lUid_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasHomeId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, homeId_);
      }
      for (int i = 0; i < lUid_.size(); i++) {
        output.writeInt64(2, lUid_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, homeId_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < lUid_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(lUid_.get(i));
        }
        size += dataSize;
        size += 1 * getLUidList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ninelook.wecard.protocol.beans.BeanHomeMessage.LoadedInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ninelook.wecard.protocol.beans.BeanHomeMessage.LoadedInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ninelook.wecard.protocol.beans.BeanHomeMessage.LoadedInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ninelook.wecard.protocol.beans.BeanHomeMessage.LoadedInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ninelook.wecard.protocol.beans.BeanHomeMessage.LoadedInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ninelook.wecard.protocol.beans.BeanHomeMessage.LoadedInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ninelook.wecard.protocol.beans.BeanHomeMessage.LoadedInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ninelook.wecard.protocol.beans.BeanHomeMessage.LoadedInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ninelook.wecard.protocol.beans.BeanHomeMessage.LoadedInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ninelook.wecard.protocol.beans.BeanHomeMessage.LoadedInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ninelook.wecard.protocol.beans.BeanHomeMessage.LoadedInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code LoadedInfo}
     *
     * <pre>
     *资源加载完成通知信息
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.ninelook.wecard.protocol.beans.BeanHomeMessage.LoadedInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.ninelook.wecard.protocol.beans.BeanHomeMessage.internal_static_LoadedInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.ninelook.wecard.protocol.beans.BeanHomeMessage.internal_static_LoadedInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.ninelook.wecard.protocol.beans.BeanHomeMessage.LoadedInfo.class, com.ninelook.wecard.protocol.beans.BeanHomeMessage.LoadedInfo.Builder.class);
      }

      // Construct using com.ninelook.wecard.protocol.beans.BeanHomeMessage.LoadedInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        homeId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        lUid_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.ninelook.wecard.protocol.beans.BeanHomeMessage.internal_static_LoadedInfo_descriptor;
      }

      public com.ninelook.wecard.protocol.beans.BeanHomeMessage.LoadedInfo getDefaultInstanceForType() {
        return com.ninelook.wecard.protocol.beans.BeanHomeMessage.LoadedInfo.getDefaultInstance();
      }

      public com.ninelook.wecard.protocol.beans.BeanHomeMessage.LoadedInfo build() {
        com.ninelook.wecard.protocol.beans.BeanHomeMessage.LoadedInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ninelook.wecard.protocol.beans.BeanHomeMessage.LoadedInfo buildPartial() {
        com.ninelook.wecard.protocol.beans.BeanHomeMessage.LoadedInfo result = new com.ninelook.wecard.protocol.beans.BeanHomeMessage.LoadedInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.homeId_ = homeId_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          lUid_ = java.util.Collections.unmodifiableList(lUid_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.lUid_ = lUid_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.ninelook.wecard.protocol.beans.BeanHomeMessage.LoadedInfo) {
          return mergeFrom((com.ninelook.wecard.protocol.beans.BeanHomeMessage.LoadedInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.ninelook.wecard.protocol.beans.BeanHomeMessage.LoadedInfo other) {
        if (other == com.ninelook.wecard.protocol.beans.BeanHomeMessage.LoadedInfo.getDefaultInstance()) return this;
        if (other.hasHomeId()) {
          setHomeId(other.getHomeId());
        }
        if (!other.lUid_.isEmpty()) {
          if (lUid_.isEmpty()) {
            lUid_ = other.lUid_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureLUidIsMutable();
            lUid_.addAll(other.lUid_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasHomeId()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ninelook.wecard.protocol.beans.BeanHomeMessage.LoadedInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ninelook.wecard.protocol.beans.BeanHomeMessage.LoadedInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 homeId = 1;
      private int homeId_ ;
      /**
       * <code>required int32 homeId = 1;</code>
       *
       * <pre>
       *房间ID
       * </pre>
       */
      public boolean hasHomeId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 homeId = 1;</code>
       *
       * <pre>
       *房间ID
       * </pre>
       */
      public int getHomeId() {
        return homeId_;
      }
      /**
       * <code>required int32 homeId = 1;</code>
       *
       * <pre>
       *房间ID
       * </pre>
       */
      public Builder setHomeId(int value) {
        bitField0_ |= 0x00000001;
        homeId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 homeId = 1;</code>
       *
       * <pre>
       *房间ID
       * </pre>
       */
      public Builder clearHomeId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        homeId_ = 0;
        onChanged();
        return this;
      }

      // repeated int64 lUid = 2;
      private java.util.List<java.lang.Long> lUid_ = java.util.Collections.emptyList();
      private void ensureLUidIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          lUid_ = new java.util.ArrayList<java.lang.Long>(lUid_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated int64 lUid = 2;</code>
       *
       * <pre>
       *完成加载的用户ID
       * </pre>
       */
      public java.util.List<java.lang.Long>
          getLUidList() {
        return java.util.Collections.unmodifiableList(lUid_);
      }
      /**
       * <code>repeated int64 lUid = 2;</code>
       *
       * <pre>
       *完成加载的用户ID
       * </pre>
       */
      public int getLUidCount() {
        return lUid_.size();
      }
      /**
       * <code>repeated int64 lUid = 2;</code>
       *
       * <pre>
       *完成加载的用户ID
       * </pre>
       */
      public long getLUid(int index) {
        return lUid_.get(index);
      }
      /**
       * <code>repeated int64 lUid = 2;</code>
       *
       * <pre>
       *完成加载的用户ID
       * </pre>
       */
      public Builder setLUid(
          int index, long value) {
        ensureLUidIsMutable();
        lUid_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 lUid = 2;</code>
       *
       * <pre>
       *完成加载的用户ID
       * </pre>
       */
      public Builder addLUid(long value) {
        ensureLUidIsMutable();
        lUid_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 lUid = 2;</code>
       *
       * <pre>
       *完成加载的用户ID
       * </pre>
       */
      public Builder addAllLUid(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureLUidIsMutable();
        super.addAll(values, lUid_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 lUid = 2;</code>
       *
       * <pre>
       *完成加载的用户ID
       * </pre>
       */
      public Builder clearLUid() {
        lUid_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:LoadedInfo)
    }

    static {
      defaultInstance = new LoadedInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:LoadedInfo)
  }

  public interface HomeGoInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated .PlayerInfo lPlayerInfo = 1;
    /**
     * <code>repeated .PlayerInfo lPlayerInfo = 1;</code>
     *
     * <pre>
     *房间用户信息
     * </pre>
     */
    java.util.List<com.ninelook.wecard.protocol.beans.BeanSceneMessage.PlayerInfo>
        getLPlayerInfoList();
    /**
     * <code>repeated .PlayerInfo lPlayerInfo = 1;</code>
     *
     * <pre>
     *房间用户信息
     * </pre>
     */
    com.ninelook.wecard.protocol.beans.BeanSceneMessage.PlayerInfo getLPlayerInfo(int index);
    /**
     * <code>repeated .PlayerInfo lPlayerInfo = 1;</code>
     *
     * <pre>
     *房间用户信息
     * </pre>
     */
    int getLPlayerInfoCount();
    /**
     * <code>repeated .PlayerInfo lPlayerInfo = 1;</code>
     *
     * <pre>
     *房间用户信息
     * </pre>
     */
    java.util.List<? extends com.ninelook.wecard.protocol.beans.BeanSceneMessage.PlayerInfoOrBuilder>
        getLPlayerInfoOrBuilderList();
    /**
     * <code>repeated .PlayerInfo lPlayerInfo = 1;</code>
     *
     * <pre>
     *房间用户信息
     * </pre>
     */
    com.ninelook.wecard.protocol.beans.BeanSceneMessage.PlayerInfoOrBuilder getLPlayerInfoOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code HomeGoInfo}
   *
   * <pre>
   *开始游戏通知信息
   * </pre>
   */
  public static final class HomeGoInfo extends
      com.google.protobuf.GeneratedMessage
      implements HomeGoInfoOrBuilder {
    // Use HomeGoInfo.newBuilder() to construct.
    private HomeGoInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private HomeGoInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final HomeGoInfo defaultInstance;
    public static HomeGoInfo getDefaultInstance() {
      return defaultInstance;
    }

    public HomeGoInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private HomeGoInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                lPlayerInfo_ = new java.util.ArrayList<com.ninelook.wecard.protocol.beans.BeanSceneMessage.PlayerInfo>();
                mutable_bitField0_ |= 0x00000001;
              }
              lPlayerInfo_.add(input.readMessage(com.ninelook.wecard.protocol.beans.BeanSceneMessage.PlayerInfo.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          lPlayerInfo_ = java.util.Collections.unmodifiableList(lPlayerInfo_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.ninelook.wecard.protocol.beans.BeanHomeMessage.internal_static_HomeGoInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.ninelook.wecard.protocol.beans.BeanHomeMessage.internal_static_HomeGoInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeGoInfo.class, com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeGoInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<HomeGoInfo> PARSER =
        new com.google.protobuf.AbstractParser<HomeGoInfo>() {
      public HomeGoInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new HomeGoInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<HomeGoInfo> getParserForType() {
      return PARSER;
    }

    // repeated .PlayerInfo lPlayerInfo = 1;
    public static final int LPLAYERINFO_FIELD_NUMBER = 1;
    private java.util.List<com.ninelook.wecard.protocol.beans.BeanSceneMessage.PlayerInfo> lPlayerInfo_;
    /**
     * <code>repeated .PlayerInfo lPlayerInfo = 1;</code>
     *
     * <pre>
     *房间用户信息
     * </pre>
     */
    public java.util.List<com.ninelook.wecard.protocol.beans.BeanSceneMessage.PlayerInfo> getLPlayerInfoList() {
      return lPlayerInfo_;
    }
    /**
     * <code>repeated .PlayerInfo lPlayerInfo = 1;</code>
     *
     * <pre>
     *房间用户信息
     * </pre>
     */
    public java.util.List<? extends com.ninelook.wecard.protocol.beans.BeanSceneMessage.PlayerInfoOrBuilder>
        getLPlayerInfoOrBuilderList() {
      return lPlayerInfo_;
    }
    /**
     * <code>repeated .PlayerInfo lPlayerInfo = 1;</code>
     *
     * <pre>
     *房间用户信息
     * </pre>
     */
    public int getLPlayerInfoCount() {
      return lPlayerInfo_.size();
    }
    /**
     * <code>repeated .PlayerInfo lPlayerInfo = 1;</code>
     *
     * <pre>
     *房间用户信息
     * </pre>
     */
    public com.ninelook.wecard.protocol.beans.BeanSceneMessage.PlayerInfo getLPlayerInfo(int index) {
      return lPlayerInfo_.get(index);
    }
    /**
     * <code>repeated .PlayerInfo lPlayerInfo = 1;</code>
     *
     * <pre>
     *房间用户信息
     * </pre>
     */
    public com.ninelook.wecard.protocol.beans.BeanSceneMessage.PlayerInfoOrBuilder getLPlayerInfoOrBuilder(
        int index) {
      return lPlayerInfo_.get(index);
    }

    private void initFields() {
      lPlayerInfo_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      for (int i = 0; i < getLPlayerInfoCount(); i++) {
        if (!getLPlayerInfo(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < lPlayerInfo_.size(); i++) {
        output.writeMessage(1, lPlayerInfo_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < lPlayerInfo_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, lPlayerInfo_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeGoInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeGoInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeGoInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeGoInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeGoInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeGoInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeGoInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeGoInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeGoInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeGoInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeGoInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code HomeGoInfo}
     *
     * <pre>
     *开始游戏通知信息
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeGoInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.ninelook.wecard.protocol.beans.BeanHomeMessage.internal_static_HomeGoInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.ninelook.wecard.protocol.beans.BeanHomeMessage.internal_static_HomeGoInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeGoInfo.class, com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeGoInfo.Builder.class);
      }

      // Construct using com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeGoInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getLPlayerInfoFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (lPlayerInfoBuilder_ == null) {
          lPlayerInfo_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          lPlayerInfoBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.ninelook.wecard.protocol.beans.BeanHomeMessage.internal_static_HomeGoInfo_descriptor;
      }

      public com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeGoInfo getDefaultInstanceForType() {
        return com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeGoInfo.getDefaultInstance();
      }

      public com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeGoInfo build() {
        com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeGoInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeGoInfo buildPartial() {
        com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeGoInfo result = new com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeGoInfo(this);
        int from_bitField0_ = bitField0_;
        if (lPlayerInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            lPlayerInfo_ = java.util.Collections.unmodifiableList(lPlayerInfo_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.lPlayerInfo_ = lPlayerInfo_;
        } else {
          result.lPlayerInfo_ = lPlayerInfoBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeGoInfo) {
          return mergeFrom((com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeGoInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeGoInfo other) {
        if (other == com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeGoInfo.getDefaultInstance()) return this;
        if (lPlayerInfoBuilder_ == null) {
          if (!other.lPlayerInfo_.isEmpty()) {
            if (lPlayerInfo_.isEmpty()) {
              lPlayerInfo_ = other.lPlayerInfo_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureLPlayerInfoIsMutable();
              lPlayerInfo_.addAll(other.lPlayerInfo_);
            }
            onChanged();
          }
        } else {
          if (!other.lPlayerInfo_.isEmpty()) {
            if (lPlayerInfoBuilder_.isEmpty()) {
              lPlayerInfoBuilder_.dispose();
              lPlayerInfoBuilder_ = null;
              lPlayerInfo_ = other.lPlayerInfo_;
              bitField0_ = (bitField0_ & ~0x00000001);
              lPlayerInfoBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getLPlayerInfoFieldBuilder() : null;
            } else {
              lPlayerInfoBuilder_.addAllMessages(other.lPlayerInfo_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getLPlayerInfoCount(); i++) {
          if (!getLPlayerInfo(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeGoInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeGoInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .PlayerInfo lPlayerInfo = 1;
      private java.util.List<com.ninelook.wecard.protocol.beans.BeanSceneMessage.PlayerInfo> lPlayerInfo_ =
        java.util.Collections.emptyList();
      private void ensureLPlayerInfoIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          lPlayerInfo_ = new java.util.ArrayList<com.ninelook.wecard.protocol.beans.BeanSceneMessage.PlayerInfo>(lPlayerInfo_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.ninelook.wecard.protocol.beans.BeanSceneMessage.PlayerInfo, com.ninelook.wecard.protocol.beans.BeanSceneMessage.PlayerInfo.Builder, com.ninelook.wecard.protocol.beans.BeanSceneMessage.PlayerInfoOrBuilder> lPlayerInfoBuilder_;

      /**
       * <code>repeated .PlayerInfo lPlayerInfo = 1;</code>
       *
       * <pre>
       *房间用户信息
       * </pre>
       */
      public java.util.List<com.ninelook.wecard.protocol.beans.BeanSceneMessage.PlayerInfo> getLPlayerInfoList() {
        if (lPlayerInfoBuilder_ == null) {
          return java.util.Collections.unmodifiableList(lPlayerInfo_);
        } else {
          return lPlayerInfoBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .PlayerInfo lPlayerInfo = 1;</code>
       *
       * <pre>
       *房间用户信息
       * </pre>
       */
      public int getLPlayerInfoCount() {
        if (lPlayerInfoBuilder_ == null) {
          return lPlayerInfo_.size();
        } else {
          return lPlayerInfoBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .PlayerInfo lPlayerInfo = 1;</code>
       *
       * <pre>
       *房间用户信息
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanSceneMessage.PlayerInfo getLPlayerInfo(int index) {
        if (lPlayerInfoBuilder_ == null) {
          return lPlayerInfo_.get(index);
        } else {
          return lPlayerInfoBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .PlayerInfo lPlayerInfo = 1;</code>
       *
       * <pre>
       *房间用户信息
       * </pre>
       */
      public Builder setLPlayerInfo(
          int index, com.ninelook.wecard.protocol.beans.BeanSceneMessage.PlayerInfo value) {
        if (lPlayerInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLPlayerInfoIsMutable();
          lPlayerInfo_.set(index, value);
          onChanged();
        } else {
          lPlayerInfoBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .PlayerInfo lPlayerInfo = 1;</code>
       *
       * <pre>
       *房间用户信息
       * </pre>
       */
      public Builder setLPlayerInfo(
          int index, com.ninelook.wecard.protocol.beans.BeanSceneMessage.PlayerInfo.Builder builderForValue) {
        if (lPlayerInfoBuilder_ == null) {
          ensureLPlayerInfoIsMutable();
          lPlayerInfo_.set(index, builderForValue.build());
          onChanged();
        } else {
          lPlayerInfoBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .PlayerInfo lPlayerInfo = 1;</code>
       *
       * <pre>
       *房间用户信息
       * </pre>
       */
      public Builder addLPlayerInfo(com.ninelook.wecard.protocol.beans.BeanSceneMessage.PlayerInfo value) {
        if (lPlayerInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLPlayerInfoIsMutable();
          lPlayerInfo_.add(value);
          onChanged();
        } else {
          lPlayerInfoBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .PlayerInfo lPlayerInfo = 1;</code>
       *
       * <pre>
       *房间用户信息
       * </pre>
       */
      public Builder addLPlayerInfo(
          int index, com.ninelook.wecard.protocol.beans.BeanSceneMessage.PlayerInfo value) {
        if (lPlayerInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLPlayerInfoIsMutable();
          lPlayerInfo_.add(index, value);
          onChanged();
        } else {
          lPlayerInfoBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .PlayerInfo lPlayerInfo = 1;</code>
       *
       * <pre>
       *房间用户信息
       * </pre>
       */
      public Builder addLPlayerInfo(
          com.ninelook.wecard.protocol.beans.BeanSceneMessage.PlayerInfo.Builder builderForValue) {
        if (lPlayerInfoBuilder_ == null) {
          ensureLPlayerInfoIsMutable();
          lPlayerInfo_.add(builderForValue.build());
          onChanged();
        } else {
          lPlayerInfoBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .PlayerInfo lPlayerInfo = 1;</code>
       *
       * <pre>
       *房间用户信息
       * </pre>
       */
      public Builder addLPlayerInfo(
          int index, com.ninelook.wecard.protocol.beans.BeanSceneMessage.PlayerInfo.Builder builderForValue) {
        if (lPlayerInfoBuilder_ == null) {
          ensureLPlayerInfoIsMutable();
          lPlayerInfo_.add(index, builderForValue.build());
          onChanged();
        } else {
          lPlayerInfoBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .PlayerInfo lPlayerInfo = 1;</code>
       *
       * <pre>
       *房间用户信息
       * </pre>
       */
      public Builder addAllLPlayerInfo(
          java.lang.Iterable<? extends com.ninelook.wecard.protocol.beans.BeanSceneMessage.PlayerInfo> values) {
        if (lPlayerInfoBuilder_ == null) {
          ensureLPlayerInfoIsMutable();
          super.addAll(values, lPlayerInfo_);
          onChanged();
        } else {
          lPlayerInfoBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .PlayerInfo lPlayerInfo = 1;</code>
       *
       * <pre>
       *房间用户信息
       * </pre>
       */
      public Builder clearLPlayerInfo() {
        if (lPlayerInfoBuilder_ == null) {
          lPlayerInfo_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          lPlayerInfoBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .PlayerInfo lPlayerInfo = 1;</code>
       *
       * <pre>
       *房间用户信息
       * </pre>
       */
      public Builder removeLPlayerInfo(int index) {
        if (lPlayerInfoBuilder_ == null) {
          ensureLPlayerInfoIsMutable();
          lPlayerInfo_.remove(index);
          onChanged();
        } else {
          lPlayerInfoBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .PlayerInfo lPlayerInfo = 1;</code>
       *
       * <pre>
       *房间用户信息
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanSceneMessage.PlayerInfo.Builder getLPlayerInfoBuilder(
          int index) {
        return getLPlayerInfoFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .PlayerInfo lPlayerInfo = 1;</code>
       *
       * <pre>
       *房间用户信息
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanSceneMessage.PlayerInfoOrBuilder getLPlayerInfoOrBuilder(
          int index) {
        if (lPlayerInfoBuilder_ == null) {
          return lPlayerInfo_.get(index);  } else {
          return lPlayerInfoBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .PlayerInfo lPlayerInfo = 1;</code>
       *
       * <pre>
       *房间用户信息
       * </pre>
       */
      public java.util.List<? extends com.ninelook.wecard.protocol.beans.BeanSceneMessage.PlayerInfoOrBuilder>
           getLPlayerInfoOrBuilderList() {
        if (lPlayerInfoBuilder_ != null) {
          return lPlayerInfoBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(lPlayerInfo_);
        }
      }
      /**
       * <code>repeated .PlayerInfo lPlayerInfo = 1;</code>
       *
       * <pre>
       *房间用户信息
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanSceneMessage.PlayerInfo.Builder addLPlayerInfoBuilder() {
        return getLPlayerInfoFieldBuilder().addBuilder(
            com.ninelook.wecard.protocol.beans.BeanSceneMessage.PlayerInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .PlayerInfo lPlayerInfo = 1;</code>
       *
       * <pre>
       *房间用户信息
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanSceneMessage.PlayerInfo.Builder addLPlayerInfoBuilder(
          int index) {
        return getLPlayerInfoFieldBuilder().addBuilder(
            index, com.ninelook.wecard.protocol.beans.BeanSceneMessage.PlayerInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .PlayerInfo lPlayerInfo = 1;</code>
       *
       * <pre>
       *房间用户信息
       * </pre>
       */
      public java.util.List<com.ninelook.wecard.protocol.beans.BeanSceneMessage.PlayerInfo.Builder>
           getLPlayerInfoBuilderList() {
        return getLPlayerInfoFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.ninelook.wecard.protocol.beans.BeanSceneMessage.PlayerInfo, com.ninelook.wecard.protocol.beans.BeanSceneMessage.PlayerInfo.Builder, com.ninelook.wecard.protocol.beans.BeanSceneMessage.PlayerInfoOrBuilder>
          getLPlayerInfoFieldBuilder() {
        if (lPlayerInfoBuilder_ == null) {
          lPlayerInfoBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.ninelook.wecard.protocol.beans.BeanSceneMessage.PlayerInfo, com.ninelook.wecard.protocol.beans.BeanSceneMessage.PlayerInfo.Builder, com.ninelook.wecard.protocol.beans.BeanSceneMessage.PlayerInfoOrBuilder>(
                  lPlayerInfo_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          lPlayerInfo_ = null;
        }
        return lPlayerInfoBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:HomeGoInfo)
    }

    static {
      defaultInstance = new HomeGoInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:HomeGoInfo)
  }

  public interface WarAwardInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int64 uid = 1;
    /**
     * <code>required int64 uid = 1;</code>
     *
     * <pre>
     *用户ID
     * </pre>
     */
    boolean hasUid();
    /**
     * <code>required int64 uid = 1;</code>
     *
     * <pre>
     *用户ID
     * </pre>
     */
    long getUid();

    // required int32 awardType = 2;
    /**
     * <code>required int32 awardType = 2;</code>
     *
     * <pre>
     *奖励类型
     * </pre>
     */
    boolean hasAwardType();
    /**
     * <code>required int32 awardType = 2;</code>
     *
     * <pre>
     *奖励类型
     * </pre>
     */
    int getAwardType();

    // repeated .ItemByIntInt awardList = 3;
    /**
     * <code>repeated .ItemByIntInt awardList = 3;</code>
     *
     * <pre>
     *奖励列表(道具ID:道具数量)
     * </pre>
     */
    java.util.List<com.ninelook.wecard.protocol.beans.BeanCommonMessage.ItemByIntInt>
        getAwardListList();
    /**
     * <code>repeated .ItemByIntInt awardList = 3;</code>
     *
     * <pre>
     *奖励列表(道具ID:道具数量)
     * </pre>
     */
    com.ninelook.wecard.protocol.beans.BeanCommonMessage.ItemByIntInt getAwardList(int index);
    /**
     * <code>repeated .ItemByIntInt awardList = 3;</code>
     *
     * <pre>
     *奖励列表(道具ID:道具数量)
     * </pre>
     */
    int getAwardListCount();
    /**
     * <code>repeated .ItemByIntInt awardList = 3;</code>
     *
     * <pre>
     *奖励列表(道具ID:道具数量)
     * </pre>
     */
    java.util.List<? extends com.ninelook.wecard.protocol.beans.BeanCommonMessage.ItemByIntIntOrBuilder>
        getAwardListOrBuilderList();
    /**
     * <code>repeated .ItemByIntInt awardList = 3;</code>
     *
     * <pre>
     *奖励列表(道具ID:道具数量)
     * </pre>
     */
    com.ninelook.wecard.protocol.beans.BeanCommonMessage.ItemByIntIntOrBuilder getAwardListOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code WarAwardInfo}
   *
   * <pre>
   *战斗奖励信息
   * </pre>
   */
  public static final class WarAwardInfo extends
      com.google.protobuf.GeneratedMessage
      implements WarAwardInfoOrBuilder {
    // Use WarAwardInfo.newBuilder() to construct.
    private WarAwardInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private WarAwardInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final WarAwardInfo defaultInstance;
    public static WarAwardInfo getDefaultInstance() {
      return defaultInstance;
    }

    public WarAwardInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private WarAwardInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              uid_ = input.readInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              awardType_ = input.readInt32();
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                awardList_ = new java.util.ArrayList<com.ninelook.wecard.protocol.beans.BeanCommonMessage.ItemByIntInt>();
                mutable_bitField0_ |= 0x00000004;
              }
              awardList_.add(input.readMessage(com.ninelook.wecard.protocol.beans.BeanCommonMessage.ItemByIntInt.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          awardList_ = java.util.Collections.unmodifiableList(awardList_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.ninelook.wecard.protocol.beans.BeanHomeMessage.internal_static_WarAwardInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.ninelook.wecard.protocol.beans.BeanHomeMessage.internal_static_WarAwardInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarAwardInfo.class, com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarAwardInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<WarAwardInfo> PARSER =
        new com.google.protobuf.AbstractParser<WarAwardInfo>() {
      public WarAwardInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new WarAwardInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<WarAwardInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int64 uid = 1;
    public static final int UID_FIELD_NUMBER = 1;
    private long uid_;
    /**
     * <code>required int64 uid = 1;</code>
     *
     * <pre>
     *用户ID
     * </pre>
     */
    public boolean hasUid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int64 uid = 1;</code>
     *
     * <pre>
     *用户ID
     * </pre>
     */
    public long getUid() {
      return uid_;
    }

    // required int32 awardType = 2;
    public static final int AWARDTYPE_FIELD_NUMBER = 2;
    private int awardType_;
    /**
     * <code>required int32 awardType = 2;</code>
     *
     * <pre>
     *奖励类型
     * </pre>
     */
    public boolean hasAwardType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 awardType = 2;</code>
     *
     * <pre>
     *奖励类型
     * </pre>
     */
    public int getAwardType() {
      return awardType_;
    }

    // repeated .ItemByIntInt awardList = 3;
    public static final int AWARDLIST_FIELD_NUMBER = 3;
    private java.util.List<com.ninelook.wecard.protocol.beans.BeanCommonMessage.ItemByIntInt> awardList_;
    /**
     * <code>repeated .ItemByIntInt awardList = 3;</code>
     *
     * <pre>
     *奖励列表(道具ID:道具数量)
     * </pre>
     */
    public java.util.List<com.ninelook.wecard.protocol.beans.BeanCommonMessage.ItemByIntInt> getAwardListList() {
      return awardList_;
    }
    /**
     * <code>repeated .ItemByIntInt awardList = 3;</code>
     *
     * <pre>
     *奖励列表(道具ID:道具数量)
     * </pre>
     */
    public java.util.List<? extends com.ninelook.wecard.protocol.beans.BeanCommonMessage.ItemByIntIntOrBuilder>
        getAwardListOrBuilderList() {
      return awardList_;
    }
    /**
     * <code>repeated .ItemByIntInt awardList = 3;</code>
     *
     * <pre>
     *奖励列表(道具ID:道具数量)
     * </pre>
     */
    public int getAwardListCount() {
      return awardList_.size();
    }
    /**
     * <code>repeated .ItemByIntInt awardList = 3;</code>
     *
     * <pre>
     *奖励列表(道具ID:道具数量)
     * </pre>
     */
    public com.ninelook.wecard.protocol.beans.BeanCommonMessage.ItemByIntInt getAwardList(int index) {
      return awardList_.get(index);
    }
    /**
     * <code>repeated .ItemByIntInt awardList = 3;</code>
     *
     * <pre>
     *奖励列表(道具ID:道具数量)
     * </pre>
     */
    public com.ninelook.wecard.protocol.beans.BeanCommonMessage.ItemByIntIntOrBuilder getAwardListOrBuilder(
        int index) {
      return awardList_.get(index);
    }

    private void initFields() {
      uid_ = 0L;
      awardType_ = 0;
      awardList_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasUid()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAwardType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getAwardListCount(); i++) {
        if (!getAwardList(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, uid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, awardType_);
      }
      for (int i = 0; i < awardList_.size(); i++) {
        output.writeMessage(3, awardList_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, uid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, awardType_);
      }
      for (int i = 0; i < awardList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, awardList_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarAwardInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarAwardInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarAwardInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarAwardInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarAwardInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarAwardInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarAwardInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarAwardInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarAwardInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarAwardInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarAwardInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code WarAwardInfo}
     *
     * <pre>
     *战斗奖励信息
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarAwardInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.ninelook.wecard.protocol.beans.BeanHomeMessage.internal_static_WarAwardInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.ninelook.wecard.protocol.beans.BeanHomeMessage.internal_static_WarAwardInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarAwardInfo.class, com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarAwardInfo.Builder.class);
      }

      // Construct using com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarAwardInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getAwardListFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        uid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        awardType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (awardListBuilder_ == null) {
          awardList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          awardListBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.ninelook.wecard.protocol.beans.BeanHomeMessage.internal_static_WarAwardInfo_descriptor;
      }

      public com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarAwardInfo getDefaultInstanceForType() {
        return com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarAwardInfo.getDefaultInstance();
      }

      public com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarAwardInfo build() {
        com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarAwardInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarAwardInfo buildPartial() {
        com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarAwardInfo result = new com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarAwardInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.uid_ = uid_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.awardType_ = awardType_;
        if (awardListBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            awardList_ = java.util.Collections.unmodifiableList(awardList_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.awardList_ = awardList_;
        } else {
          result.awardList_ = awardListBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarAwardInfo) {
          return mergeFrom((com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarAwardInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarAwardInfo other) {
        if (other == com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarAwardInfo.getDefaultInstance()) return this;
        if (other.hasUid()) {
          setUid(other.getUid());
        }
        if (other.hasAwardType()) {
          setAwardType(other.getAwardType());
        }
        if (awardListBuilder_ == null) {
          if (!other.awardList_.isEmpty()) {
            if (awardList_.isEmpty()) {
              awardList_ = other.awardList_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureAwardListIsMutable();
              awardList_.addAll(other.awardList_);
            }
            onChanged();
          }
        } else {
          if (!other.awardList_.isEmpty()) {
            if (awardListBuilder_.isEmpty()) {
              awardListBuilder_.dispose();
              awardListBuilder_ = null;
              awardList_ = other.awardList_;
              bitField0_ = (bitField0_ & ~0x00000004);
              awardListBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getAwardListFieldBuilder() : null;
            } else {
              awardListBuilder_.addAllMessages(other.awardList_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasUid()) {
          
          return false;
        }
        if (!hasAwardType()) {
          
          return false;
        }
        for (int i = 0; i < getAwardListCount(); i++) {
          if (!getAwardList(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarAwardInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarAwardInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int64 uid = 1;
      private long uid_ ;
      /**
       * <code>required int64 uid = 1;</code>
       *
       * <pre>
       *用户ID
       * </pre>
       */
      public boolean hasUid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int64 uid = 1;</code>
       *
       * <pre>
       *用户ID
       * </pre>
       */
      public long getUid() {
        return uid_;
      }
      /**
       * <code>required int64 uid = 1;</code>
       *
       * <pre>
       *用户ID
       * </pre>
       */
      public Builder setUid(long value) {
        bitField0_ |= 0x00000001;
        uid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 uid = 1;</code>
       *
       * <pre>
       *用户ID
       * </pre>
       */
      public Builder clearUid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        uid_ = 0L;
        onChanged();
        return this;
      }

      // required int32 awardType = 2;
      private int awardType_ ;
      /**
       * <code>required int32 awardType = 2;</code>
       *
       * <pre>
       *奖励类型
       * </pre>
       */
      public boolean hasAwardType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 awardType = 2;</code>
       *
       * <pre>
       *奖励类型
       * </pre>
       */
      public int getAwardType() {
        return awardType_;
      }
      /**
       * <code>required int32 awardType = 2;</code>
       *
       * <pre>
       *奖励类型
       * </pre>
       */
      public Builder setAwardType(int value) {
        bitField0_ |= 0x00000002;
        awardType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 awardType = 2;</code>
       *
       * <pre>
       *奖励类型
       * </pre>
       */
      public Builder clearAwardType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        awardType_ = 0;
        onChanged();
        return this;
      }

      // repeated .ItemByIntInt awardList = 3;
      private java.util.List<com.ninelook.wecard.protocol.beans.BeanCommonMessage.ItemByIntInt> awardList_ =
        java.util.Collections.emptyList();
      private void ensureAwardListIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          awardList_ = new java.util.ArrayList<com.ninelook.wecard.protocol.beans.BeanCommonMessage.ItemByIntInt>(awardList_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.ninelook.wecard.protocol.beans.BeanCommonMessage.ItemByIntInt, com.ninelook.wecard.protocol.beans.BeanCommonMessage.ItemByIntInt.Builder, com.ninelook.wecard.protocol.beans.BeanCommonMessage.ItemByIntIntOrBuilder> awardListBuilder_;

      /**
       * <code>repeated .ItemByIntInt awardList = 3;</code>
       *
       * <pre>
       *奖励列表(道具ID:道具数量)
       * </pre>
       */
      public java.util.List<com.ninelook.wecard.protocol.beans.BeanCommonMessage.ItemByIntInt> getAwardListList() {
        if (awardListBuilder_ == null) {
          return java.util.Collections.unmodifiableList(awardList_);
        } else {
          return awardListBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .ItemByIntInt awardList = 3;</code>
       *
       * <pre>
       *奖励列表(道具ID:道具数量)
       * </pre>
       */
      public int getAwardListCount() {
        if (awardListBuilder_ == null) {
          return awardList_.size();
        } else {
          return awardListBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .ItemByIntInt awardList = 3;</code>
       *
       * <pre>
       *奖励列表(道具ID:道具数量)
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanCommonMessage.ItemByIntInt getAwardList(int index) {
        if (awardListBuilder_ == null) {
          return awardList_.get(index);
        } else {
          return awardListBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .ItemByIntInt awardList = 3;</code>
       *
       * <pre>
       *奖励列表(道具ID:道具数量)
       * </pre>
       */
      public Builder setAwardList(
          int index, com.ninelook.wecard.protocol.beans.BeanCommonMessage.ItemByIntInt value) {
        if (awardListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAwardListIsMutable();
          awardList_.set(index, value);
          onChanged();
        } else {
          awardListBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .ItemByIntInt awardList = 3;</code>
       *
       * <pre>
       *奖励列表(道具ID:道具数量)
       * </pre>
       */
      public Builder setAwardList(
          int index, com.ninelook.wecard.protocol.beans.BeanCommonMessage.ItemByIntInt.Builder builderForValue) {
        if (awardListBuilder_ == null) {
          ensureAwardListIsMutable();
          awardList_.set(index, builderForValue.build());
          onChanged();
        } else {
          awardListBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ItemByIntInt awardList = 3;</code>
       *
       * <pre>
       *奖励列表(道具ID:道具数量)
       * </pre>
       */
      public Builder addAwardList(com.ninelook.wecard.protocol.beans.BeanCommonMessage.ItemByIntInt value) {
        if (awardListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAwardListIsMutable();
          awardList_.add(value);
          onChanged();
        } else {
          awardListBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .ItemByIntInt awardList = 3;</code>
       *
       * <pre>
       *奖励列表(道具ID:道具数量)
       * </pre>
       */
      public Builder addAwardList(
          int index, com.ninelook.wecard.protocol.beans.BeanCommonMessage.ItemByIntInt value) {
        if (awardListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAwardListIsMutable();
          awardList_.add(index, value);
          onChanged();
        } else {
          awardListBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .ItemByIntInt awardList = 3;</code>
       *
       * <pre>
       *奖励列表(道具ID:道具数量)
       * </pre>
       */
      public Builder addAwardList(
          com.ninelook.wecard.protocol.beans.BeanCommonMessage.ItemByIntInt.Builder builderForValue) {
        if (awardListBuilder_ == null) {
          ensureAwardListIsMutable();
          awardList_.add(builderForValue.build());
          onChanged();
        } else {
          awardListBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ItemByIntInt awardList = 3;</code>
       *
       * <pre>
       *奖励列表(道具ID:道具数量)
       * </pre>
       */
      public Builder addAwardList(
          int index, com.ninelook.wecard.protocol.beans.BeanCommonMessage.ItemByIntInt.Builder builderForValue) {
        if (awardListBuilder_ == null) {
          ensureAwardListIsMutable();
          awardList_.add(index, builderForValue.build());
          onChanged();
        } else {
          awardListBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ItemByIntInt awardList = 3;</code>
       *
       * <pre>
       *奖励列表(道具ID:道具数量)
       * </pre>
       */
      public Builder addAllAwardList(
          java.lang.Iterable<? extends com.ninelook.wecard.protocol.beans.BeanCommonMessage.ItemByIntInt> values) {
        if (awardListBuilder_ == null) {
          ensureAwardListIsMutable();
          super.addAll(values, awardList_);
          onChanged();
        } else {
          awardListBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .ItemByIntInt awardList = 3;</code>
       *
       * <pre>
       *奖励列表(道具ID:道具数量)
       * </pre>
       */
      public Builder clearAwardList() {
        if (awardListBuilder_ == null) {
          awardList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          awardListBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .ItemByIntInt awardList = 3;</code>
       *
       * <pre>
       *奖励列表(道具ID:道具数量)
       * </pre>
       */
      public Builder removeAwardList(int index) {
        if (awardListBuilder_ == null) {
          ensureAwardListIsMutable();
          awardList_.remove(index);
          onChanged();
        } else {
          awardListBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .ItemByIntInt awardList = 3;</code>
       *
       * <pre>
       *奖励列表(道具ID:道具数量)
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanCommonMessage.ItemByIntInt.Builder getAwardListBuilder(
          int index) {
        return getAwardListFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .ItemByIntInt awardList = 3;</code>
       *
       * <pre>
       *奖励列表(道具ID:道具数量)
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanCommonMessage.ItemByIntIntOrBuilder getAwardListOrBuilder(
          int index) {
        if (awardListBuilder_ == null) {
          return awardList_.get(index);  } else {
          return awardListBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .ItemByIntInt awardList = 3;</code>
       *
       * <pre>
       *奖励列表(道具ID:道具数量)
       * </pre>
       */
      public java.util.List<? extends com.ninelook.wecard.protocol.beans.BeanCommonMessage.ItemByIntIntOrBuilder>
           getAwardListOrBuilderList() {
        if (awardListBuilder_ != null) {
          return awardListBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(awardList_);
        }
      }
      /**
       * <code>repeated .ItemByIntInt awardList = 3;</code>
       *
       * <pre>
       *奖励列表(道具ID:道具数量)
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanCommonMessage.ItemByIntInt.Builder addAwardListBuilder() {
        return getAwardListFieldBuilder().addBuilder(
            com.ninelook.wecard.protocol.beans.BeanCommonMessage.ItemByIntInt.getDefaultInstance());
      }
      /**
       * <code>repeated .ItemByIntInt awardList = 3;</code>
       *
       * <pre>
       *奖励列表(道具ID:道具数量)
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanCommonMessage.ItemByIntInt.Builder addAwardListBuilder(
          int index) {
        return getAwardListFieldBuilder().addBuilder(
            index, com.ninelook.wecard.protocol.beans.BeanCommonMessage.ItemByIntInt.getDefaultInstance());
      }
      /**
       * <code>repeated .ItemByIntInt awardList = 3;</code>
       *
       * <pre>
       *奖励列表(道具ID:道具数量)
       * </pre>
       */
      public java.util.List<com.ninelook.wecard.protocol.beans.BeanCommonMessage.ItemByIntInt.Builder>
           getAwardListBuilderList() {
        return getAwardListFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.ninelook.wecard.protocol.beans.BeanCommonMessage.ItemByIntInt, com.ninelook.wecard.protocol.beans.BeanCommonMessage.ItemByIntInt.Builder, com.ninelook.wecard.protocol.beans.BeanCommonMessage.ItemByIntIntOrBuilder>
          getAwardListFieldBuilder() {
        if (awardListBuilder_ == null) {
          awardListBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.ninelook.wecard.protocol.beans.BeanCommonMessage.ItemByIntInt, com.ninelook.wecard.protocol.beans.BeanCommonMessage.ItemByIntInt.Builder, com.ninelook.wecard.protocol.beans.BeanCommonMessage.ItemByIntIntOrBuilder>(
                  awardList_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          awardList_ = null;
        }
        return awardListBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:WarAwardInfo)
    }

    static {
      defaultInstance = new WarAwardInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:WarAwardInfo)
  }

  public interface WarFinishInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional bool win = 1;
    /**
     * <code>optional bool win = 1;</code>
     *
     * <pre>
     *是否胜利
     * </pre>
     */
    boolean hasWin();
    /**
     * <code>optional bool win = 1;</code>
     *
     * <pre>
     *是否胜利
     * </pre>
     */
    boolean getWin();

    // repeated int32 lAward = 2;
    /**
     * <code>repeated int32 lAward = 2;</code>
     *
     * <pre>
     *奖励(道具ID)
     * </pre>
     */
    java.util.List<java.lang.Integer> getLAwardList();
    /**
     * <code>repeated int32 lAward = 2;</code>
     *
     * <pre>
     *奖励(道具ID)
     * </pre>
     */
    int getLAwardCount();
    /**
     * <code>repeated int32 lAward = 2;</code>
     *
     * <pre>
     *奖励(道具ID)
     * </pre>
     */
    int getLAward(int index);

    // repeated .WarAwardInfo warAwardInfo = 3;
    /**
     * <code>repeated .WarAwardInfo warAwardInfo = 3;</code>
     *
     * <pre>
     *奖励信息
     * </pre>
     */
    java.util.List<com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarAwardInfo>
        getWarAwardInfoList();
    /**
     * <code>repeated .WarAwardInfo warAwardInfo = 3;</code>
     *
     * <pre>
     *奖励信息
     * </pre>
     */
    com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarAwardInfo getWarAwardInfo(int index);
    /**
     * <code>repeated .WarAwardInfo warAwardInfo = 3;</code>
     *
     * <pre>
     *奖励信息
     * </pre>
     */
    int getWarAwardInfoCount();
    /**
     * <code>repeated .WarAwardInfo warAwardInfo = 3;</code>
     *
     * <pre>
     *奖励信息
     * </pre>
     */
    java.util.List<? extends com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarAwardInfoOrBuilder>
        getWarAwardInfoOrBuilderList();
    /**
     * <code>repeated .WarAwardInfo warAwardInfo = 3;</code>
     *
     * <pre>
     *奖励信息
     * </pre>
     */
    com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarAwardInfoOrBuilder getWarAwardInfoOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code WarFinishInfo}
   *
   * <pre>
   *战斗结束信息
   * </pre>
   */
  public static final class WarFinishInfo extends
      com.google.protobuf.GeneratedMessage
      implements WarFinishInfoOrBuilder {
    // Use WarFinishInfo.newBuilder() to construct.
    private WarFinishInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private WarFinishInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final WarFinishInfo defaultInstance;
    public static WarFinishInfo getDefaultInstance() {
      return defaultInstance;
    }

    public WarFinishInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private WarFinishInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              win_ = input.readBool();
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                lAward_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              lAward_.add(input.readInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                lAward_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                lAward_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                warAwardInfo_ = new java.util.ArrayList<com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarAwardInfo>();
                mutable_bitField0_ |= 0x00000004;
              }
              warAwardInfo_.add(input.readMessage(com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarAwardInfo.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          lAward_ = java.util.Collections.unmodifiableList(lAward_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          warAwardInfo_ = java.util.Collections.unmodifiableList(warAwardInfo_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.ninelook.wecard.protocol.beans.BeanHomeMessage.internal_static_WarFinishInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.ninelook.wecard.protocol.beans.BeanHomeMessage.internal_static_WarFinishInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarFinishInfo.class, com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarFinishInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<WarFinishInfo> PARSER =
        new com.google.protobuf.AbstractParser<WarFinishInfo>() {
      public WarFinishInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new WarFinishInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<WarFinishInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional bool win = 1;
    public static final int WIN_FIELD_NUMBER = 1;
    private boolean win_;
    /**
     * <code>optional bool win = 1;</code>
     *
     * <pre>
     *是否胜利
     * </pre>
     */
    public boolean hasWin() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional bool win = 1;</code>
     *
     * <pre>
     *是否胜利
     * </pre>
     */
    public boolean getWin() {
      return win_;
    }

    // repeated int32 lAward = 2;
    public static final int LAWARD_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Integer> lAward_;
    /**
     * <code>repeated int32 lAward = 2;</code>
     *
     * <pre>
     *奖励(道具ID)
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getLAwardList() {
      return lAward_;
    }
    /**
     * <code>repeated int32 lAward = 2;</code>
     *
     * <pre>
     *奖励(道具ID)
     * </pre>
     */
    public int getLAwardCount() {
      return lAward_.size();
    }
    /**
     * <code>repeated int32 lAward = 2;</code>
     *
     * <pre>
     *奖励(道具ID)
     * </pre>
     */
    public int getLAward(int index) {
      return lAward_.get(index);
    }

    // repeated .WarAwardInfo warAwardInfo = 3;
    public static final int WARAWARDINFO_FIELD_NUMBER = 3;
    private java.util.List<com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarAwardInfo> warAwardInfo_;
    /**
     * <code>repeated .WarAwardInfo warAwardInfo = 3;</code>
     *
     * <pre>
     *奖励信息
     * </pre>
     */
    public java.util.List<com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarAwardInfo> getWarAwardInfoList() {
      return warAwardInfo_;
    }
    /**
     * <code>repeated .WarAwardInfo warAwardInfo = 3;</code>
     *
     * <pre>
     *奖励信息
     * </pre>
     */
    public java.util.List<? extends com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarAwardInfoOrBuilder>
        getWarAwardInfoOrBuilderList() {
      return warAwardInfo_;
    }
    /**
     * <code>repeated .WarAwardInfo warAwardInfo = 3;</code>
     *
     * <pre>
     *奖励信息
     * </pre>
     */
    public int getWarAwardInfoCount() {
      return warAwardInfo_.size();
    }
    /**
     * <code>repeated .WarAwardInfo warAwardInfo = 3;</code>
     *
     * <pre>
     *奖励信息
     * </pre>
     */
    public com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarAwardInfo getWarAwardInfo(int index) {
      return warAwardInfo_.get(index);
    }
    /**
     * <code>repeated .WarAwardInfo warAwardInfo = 3;</code>
     *
     * <pre>
     *奖励信息
     * </pre>
     */
    public com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarAwardInfoOrBuilder getWarAwardInfoOrBuilder(
        int index) {
      return warAwardInfo_.get(index);
    }

    private void initFields() {
      win_ = false;
      lAward_ = java.util.Collections.emptyList();
      warAwardInfo_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      for (int i = 0; i < getWarAwardInfoCount(); i++) {
        if (!getWarAwardInfo(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBool(1, win_);
      }
      for (int i = 0; i < lAward_.size(); i++) {
        output.writeInt32(2, lAward_.get(i));
      }
      for (int i = 0; i < warAwardInfo_.size(); i++) {
        output.writeMessage(3, warAwardInfo_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, win_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < lAward_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(lAward_.get(i));
        }
        size += dataSize;
        size += 1 * getLAwardList().size();
      }
      for (int i = 0; i < warAwardInfo_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, warAwardInfo_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarFinishInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarFinishInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarFinishInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarFinishInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarFinishInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarFinishInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarFinishInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarFinishInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarFinishInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarFinishInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarFinishInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code WarFinishInfo}
     *
     * <pre>
     *战斗结束信息
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarFinishInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.ninelook.wecard.protocol.beans.BeanHomeMessage.internal_static_WarFinishInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.ninelook.wecard.protocol.beans.BeanHomeMessage.internal_static_WarFinishInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarFinishInfo.class, com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarFinishInfo.Builder.class);
      }

      // Construct using com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarFinishInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getWarAwardInfoFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        win_ = false;
        bitField0_ = (bitField0_ & ~0x00000001);
        lAward_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        if (warAwardInfoBuilder_ == null) {
          warAwardInfo_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          warAwardInfoBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.ninelook.wecard.protocol.beans.BeanHomeMessage.internal_static_WarFinishInfo_descriptor;
      }

      public com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarFinishInfo getDefaultInstanceForType() {
        return com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarFinishInfo.getDefaultInstance();
      }

      public com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarFinishInfo build() {
        com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarFinishInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarFinishInfo buildPartial() {
        com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarFinishInfo result = new com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarFinishInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.win_ = win_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          lAward_ = java.util.Collections.unmodifiableList(lAward_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.lAward_ = lAward_;
        if (warAwardInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            warAwardInfo_ = java.util.Collections.unmodifiableList(warAwardInfo_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.warAwardInfo_ = warAwardInfo_;
        } else {
          result.warAwardInfo_ = warAwardInfoBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarFinishInfo) {
          return mergeFrom((com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarFinishInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarFinishInfo other) {
        if (other == com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarFinishInfo.getDefaultInstance()) return this;
        if (other.hasWin()) {
          setWin(other.getWin());
        }
        if (!other.lAward_.isEmpty()) {
          if (lAward_.isEmpty()) {
            lAward_ = other.lAward_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureLAwardIsMutable();
            lAward_.addAll(other.lAward_);
          }
          onChanged();
        }
        if (warAwardInfoBuilder_ == null) {
          if (!other.warAwardInfo_.isEmpty()) {
            if (warAwardInfo_.isEmpty()) {
              warAwardInfo_ = other.warAwardInfo_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureWarAwardInfoIsMutable();
              warAwardInfo_.addAll(other.warAwardInfo_);
            }
            onChanged();
          }
        } else {
          if (!other.warAwardInfo_.isEmpty()) {
            if (warAwardInfoBuilder_.isEmpty()) {
              warAwardInfoBuilder_.dispose();
              warAwardInfoBuilder_ = null;
              warAwardInfo_ = other.warAwardInfo_;
              bitField0_ = (bitField0_ & ~0x00000004);
              warAwardInfoBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getWarAwardInfoFieldBuilder() : null;
            } else {
              warAwardInfoBuilder_.addAllMessages(other.warAwardInfo_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getWarAwardInfoCount(); i++) {
          if (!getWarAwardInfo(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarFinishInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarFinishInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional bool win = 1;
      private boolean win_ ;
      /**
       * <code>optional bool win = 1;</code>
       *
       * <pre>
       *是否胜利
       * </pre>
       */
      public boolean hasWin() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional bool win = 1;</code>
       *
       * <pre>
       *是否胜利
       * </pre>
       */
      public boolean getWin() {
        return win_;
      }
      /**
       * <code>optional bool win = 1;</code>
       *
       * <pre>
       *是否胜利
       * </pre>
       */
      public Builder setWin(boolean value) {
        bitField0_ |= 0x00000001;
        win_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool win = 1;</code>
       *
       * <pre>
       *是否胜利
       * </pre>
       */
      public Builder clearWin() {
        bitField0_ = (bitField0_ & ~0x00000001);
        win_ = false;
        onChanged();
        return this;
      }

      // repeated int32 lAward = 2;
      private java.util.List<java.lang.Integer> lAward_ = java.util.Collections.emptyList();
      private void ensureLAwardIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          lAward_ = new java.util.ArrayList<java.lang.Integer>(lAward_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated int32 lAward = 2;</code>
       *
       * <pre>
       *奖励(道具ID)
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getLAwardList() {
        return java.util.Collections.unmodifiableList(lAward_);
      }
      /**
       * <code>repeated int32 lAward = 2;</code>
       *
       * <pre>
       *奖励(道具ID)
       * </pre>
       */
      public int getLAwardCount() {
        return lAward_.size();
      }
      /**
       * <code>repeated int32 lAward = 2;</code>
       *
       * <pre>
       *奖励(道具ID)
       * </pre>
       */
      public int getLAward(int index) {
        return lAward_.get(index);
      }
      /**
       * <code>repeated int32 lAward = 2;</code>
       *
       * <pre>
       *奖励(道具ID)
       * </pre>
       */
      public Builder setLAward(
          int index, int value) {
        ensureLAwardIsMutable();
        lAward_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 lAward = 2;</code>
       *
       * <pre>
       *奖励(道具ID)
       * </pre>
       */
      public Builder addLAward(int value) {
        ensureLAwardIsMutable();
        lAward_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 lAward = 2;</code>
       *
       * <pre>
       *奖励(道具ID)
       * </pre>
       */
      public Builder addAllLAward(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureLAwardIsMutable();
        super.addAll(values, lAward_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 lAward = 2;</code>
       *
       * <pre>
       *奖励(道具ID)
       * </pre>
       */
      public Builder clearLAward() {
        lAward_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      // repeated .WarAwardInfo warAwardInfo = 3;
      private java.util.List<com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarAwardInfo> warAwardInfo_ =
        java.util.Collections.emptyList();
      private void ensureWarAwardInfoIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          warAwardInfo_ = new java.util.ArrayList<com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarAwardInfo>(warAwardInfo_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarAwardInfo, com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarAwardInfo.Builder, com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarAwardInfoOrBuilder> warAwardInfoBuilder_;

      /**
       * <code>repeated .WarAwardInfo warAwardInfo = 3;</code>
       *
       * <pre>
       *奖励信息
       * </pre>
       */
      public java.util.List<com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarAwardInfo> getWarAwardInfoList() {
        if (warAwardInfoBuilder_ == null) {
          return java.util.Collections.unmodifiableList(warAwardInfo_);
        } else {
          return warAwardInfoBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .WarAwardInfo warAwardInfo = 3;</code>
       *
       * <pre>
       *奖励信息
       * </pre>
       */
      public int getWarAwardInfoCount() {
        if (warAwardInfoBuilder_ == null) {
          return warAwardInfo_.size();
        } else {
          return warAwardInfoBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .WarAwardInfo warAwardInfo = 3;</code>
       *
       * <pre>
       *奖励信息
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarAwardInfo getWarAwardInfo(int index) {
        if (warAwardInfoBuilder_ == null) {
          return warAwardInfo_.get(index);
        } else {
          return warAwardInfoBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .WarAwardInfo warAwardInfo = 3;</code>
       *
       * <pre>
       *奖励信息
       * </pre>
       */
      public Builder setWarAwardInfo(
          int index, com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarAwardInfo value) {
        if (warAwardInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureWarAwardInfoIsMutable();
          warAwardInfo_.set(index, value);
          onChanged();
        } else {
          warAwardInfoBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .WarAwardInfo warAwardInfo = 3;</code>
       *
       * <pre>
       *奖励信息
       * </pre>
       */
      public Builder setWarAwardInfo(
          int index, com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarAwardInfo.Builder builderForValue) {
        if (warAwardInfoBuilder_ == null) {
          ensureWarAwardInfoIsMutable();
          warAwardInfo_.set(index, builderForValue.build());
          onChanged();
        } else {
          warAwardInfoBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .WarAwardInfo warAwardInfo = 3;</code>
       *
       * <pre>
       *奖励信息
       * </pre>
       */
      public Builder addWarAwardInfo(com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarAwardInfo value) {
        if (warAwardInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureWarAwardInfoIsMutable();
          warAwardInfo_.add(value);
          onChanged();
        } else {
          warAwardInfoBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .WarAwardInfo warAwardInfo = 3;</code>
       *
       * <pre>
       *奖励信息
       * </pre>
       */
      public Builder addWarAwardInfo(
          int index, com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarAwardInfo value) {
        if (warAwardInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureWarAwardInfoIsMutable();
          warAwardInfo_.add(index, value);
          onChanged();
        } else {
          warAwardInfoBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .WarAwardInfo warAwardInfo = 3;</code>
       *
       * <pre>
       *奖励信息
       * </pre>
       */
      public Builder addWarAwardInfo(
          com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarAwardInfo.Builder builderForValue) {
        if (warAwardInfoBuilder_ == null) {
          ensureWarAwardInfoIsMutable();
          warAwardInfo_.add(builderForValue.build());
          onChanged();
        } else {
          warAwardInfoBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .WarAwardInfo warAwardInfo = 3;</code>
       *
       * <pre>
       *奖励信息
       * </pre>
       */
      public Builder addWarAwardInfo(
          int index, com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarAwardInfo.Builder builderForValue) {
        if (warAwardInfoBuilder_ == null) {
          ensureWarAwardInfoIsMutable();
          warAwardInfo_.add(index, builderForValue.build());
          onChanged();
        } else {
          warAwardInfoBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .WarAwardInfo warAwardInfo = 3;</code>
       *
       * <pre>
       *奖励信息
       * </pre>
       */
      public Builder addAllWarAwardInfo(
          java.lang.Iterable<? extends com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarAwardInfo> values) {
        if (warAwardInfoBuilder_ == null) {
          ensureWarAwardInfoIsMutable();
          super.addAll(values, warAwardInfo_);
          onChanged();
        } else {
          warAwardInfoBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .WarAwardInfo warAwardInfo = 3;</code>
       *
       * <pre>
       *奖励信息
       * </pre>
       */
      public Builder clearWarAwardInfo() {
        if (warAwardInfoBuilder_ == null) {
          warAwardInfo_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          warAwardInfoBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .WarAwardInfo warAwardInfo = 3;</code>
       *
       * <pre>
       *奖励信息
       * </pre>
       */
      public Builder removeWarAwardInfo(int index) {
        if (warAwardInfoBuilder_ == null) {
          ensureWarAwardInfoIsMutable();
          warAwardInfo_.remove(index);
          onChanged();
        } else {
          warAwardInfoBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .WarAwardInfo warAwardInfo = 3;</code>
       *
       * <pre>
       *奖励信息
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarAwardInfo.Builder getWarAwardInfoBuilder(
          int index) {
        return getWarAwardInfoFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .WarAwardInfo warAwardInfo = 3;</code>
       *
       * <pre>
       *奖励信息
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarAwardInfoOrBuilder getWarAwardInfoOrBuilder(
          int index) {
        if (warAwardInfoBuilder_ == null) {
          return warAwardInfo_.get(index);  } else {
          return warAwardInfoBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .WarAwardInfo warAwardInfo = 3;</code>
       *
       * <pre>
       *奖励信息
       * </pre>
       */
      public java.util.List<? extends com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarAwardInfoOrBuilder>
           getWarAwardInfoOrBuilderList() {
        if (warAwardInfoBuilder_ != null) {
          return warAwardInfoBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(warAwardInfo_);
        }
      }
      /**
       * <code>repeated .WarAwardInfo warAwardInfo = 3;</code>
       *
       * <pre>
       *奖励信息
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarAwardInfo.Builder addWarAwardInfoBuilder() {
        return getWarAwardInfoFieldBuilder().addBuilder(
            com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarAwardInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .WarAwardInfo warAwardInfo = 3;</code>
       *
       * <pre>
       *奖励信息
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarAwardInfo.Builder addWarAwardInfoBuilder(
          int index) {
        return getWarAwardInfoFieldBuilder().addBuilder(
            index, com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarAwardInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .WarAwardInfo warAwardInfo = 3;</code>
       *
       * <pre>
       *奖励信息
       * </pre>
       */
      public java.util.List<com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarAwardInfo.Builder>
           getWarAwardInfoBuilderList() {
        return getWarAwardInfoFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarAwardInfo, com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarAwardInfo.Builder, com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarAwardInfoOrBuilder>
          getWarAwardInfoFieldBuilder() {
        if (warAwardInfoBuilder_ == null) {
          warAwardInfoBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarAwardInfo, com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarAwardInfo.Builder, com.ninelook.wecard.protocol.beans.BeanHomeMessage.WarAwardInfoOrBuilder>(
                  warAwardInfo_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          warAwardInfo_ = null;
        }
        return warAwardInfoBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:WarFinishInfo)
    }

    static {
      defaultInstance = new WarFinishInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:WarFinishInfo)
  }

  public interface MapHomeInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 homeId = 1;
    /**
     * <code>required int32 homeId = 1;</code>
     *
     * <pre>
     *homeID
     * </pre>
     */
    boolean hasHomeId();
    /**
     * <code>required int32 homeId = 1;</code>
     *
     * <pre>
     *homeID
     * </pre>
     */
    int getHomeId();

    // required int64 ownerId = 2;
    /**
     * <code>required int64 ownerId = 2;</code>
     *
     * <pre>
     *房主ID
     * </pre>
     */
    boolean hasOwnerId();
    /**
     * <code>required int64 ownerId = 2;</code>
     *
     * <pre>
     *房主ID
     * </pre>
     */
    long getOwnerId();

    // required int32 mapId = 3;
    /**
     * <code>required int32 mapId = 3;</code>
     *
     * <pre>
     *地图ID
     * </pre>
     */
    boolean hasMapId();
    /**
     * <code>required int32 mapId = 3;</code>
     *
     * <pre>
     *地图ID
     * </pre>
     */
    int getMapId();

    // required int32 playerCount = 4;
    /**
     * <code>required int32 playerCount = 4;</code>
     *
     * <pre>
     *房间人数
     * </pre>
     */
    boolean hasPlayerCount();
    /**
     * <code>required int32 playerCount = 4;</code>
     *
     * <pre>
     *房间人数
     * </pre>
     */
    int getPlayerCount();

    // required int32 status = 5;
    /**
     * <code>required int32 status = 5;</code>
     *
     * <pre>
     *房间状态
     * </pre>
     */
    boolean hasStatus();
    /**
     * <code>required int32 status = 5;</code>
     *
     * <pre>
     *房间状态
     * </pre>
     */
    int getStatus();
  }
  /**
   * Protobuf type {@code MapHomeInfo}
   *
   * <pre>
   *指定地图的单个房间的信息
   * </pre>
   */
  public static final class MapHomeInfo extends
      com.google.protobuf.GeneratedMessage
      implements MapHomeInfoOrBuilder {
    // Use MapHomeInfo.newBuilder() to construct.
    private MapHomeInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private MapHomeInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final MapHomeInfo defaultInstance;
    public static MapHomeInfo getDefaultInstance() {
      return defaultInstance;
    }

    public MapHomeInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private MapHomeInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              homeId_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              ownerId_ = input.readInt64();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              mapId_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              playerCount_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              status_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.ninelook.wecard.protocol.beans.BeanHomeMessage.internal_static_MapHomeInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.ninelook.wecard.protocol.beans.BeanHomeMessage.internal_static_MapHomeInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapHomeInfo.class, com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapHomeInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<MapHomeInfo> PARSER =
        new com.google.protobuf.AbstractParser<MapHomeInfo>() {
      public MapHomeInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MapHomeInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<MapHomeInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 homeId = 1;
    public static final int HOMEID_FIELD_NUMBER = 1;
    private int homeId_;
    /**
     * <code>required int32 homeId = 1;</code>
     *
     * <pre>
     *homeID
     * </pre>
     */
    public boolean hasHomeId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 homeId = 1;</code>
     *
     * <pre>
     *homeID
     * </pre>
     */
    public int getHomeId() {
      return homeId_;
    }

    // required int64 ownerId = 2;
    public static final int OWNERID_FIELD_NUMBER = 2;
    private long ownerId_;
    /**
     * <code>required int64 ownerId = 2;</code>
     *
     * <pre>
     *房主ID
     * </pre>
     */
    public boolean hasOwnerId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int64 ownerId = 2;</code>
     *
     * <pre>
     *房主ID
     * </pre>
     */
    public long getOwnerId() {
      return ownerId_;
    }

    // required int32 mapId = 3;
    public static final int MAPID_FIELD_NUMBER = 3;
    private int mapId_;
    /**
     * <code>required int32 mapId = 3;</code>
     *
     * <pre>
     *地图ID
     * </pre>
     */
    public boolean hasMapId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 mapId = 3;</code>
     *
     * <pre>
     *地图ID
     * </pre>
     */
    public int getMapId() {
      return mapId_;
    }

    // required int32 playerCount = 4;
    public static final int PLAYERCOUNT_FIELD_NUMBER = 4;
    private int playerCount_;
    /**
     * <code>required int32 playerCount = 4;</code>
     *
     * <pre>
     *房间人数
     * </pre>
     */
    public boolean hasPlayerCount() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required int32 playerCount = 4;</code>
     *
     * <pre>
     *房间人数
     * </pre>
     */
    public int getPlayerCount() {
      return playerCount_;
    }

    // required int32 status = 5;
    public static final int STATUS_FIELD_NUMBER = 5;
    private int status_;
    /**
     * <code>required int32 status = 5;</code>
     *
     * <pre>
     *房间状态
     * </pre>
     */
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required int32 status = 5;</code>
     *
     * <pre>
     *房间状态
     * </pre>
     */
    public int getStatus() {
      return status_;
    }

    private void initFields() {
      homeId_ = 0;
      ownerId_ = 0L;
      mapId_ = 0;
      playerCount_ = 0;
      status_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasHomeId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasOwnerId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMapId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPlayerCount()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasStatus()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, homeId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, ownerId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, mapId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, playerCount_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, status_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, homeId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, ownerId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, mapId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, playerCount_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, status_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapHomeInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapHomeInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapHomeInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapHomeInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapHomeInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapHomeInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapHomeInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapHomeInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapHomeInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapHomeInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapHomeInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code MapHomeInfo}
     *
     * <pre>
     *指定地图的单个房间的信息
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapHomeInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.ninelook.wecard.protocol.beans.BeanHomeMessage.internal_static_MapHomeInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.ninelook.wecard.protocol.beans.BeanHomeMessage.internal_static_MapHomeInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapHomeInfo.class, com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapHomeInfo.Builder.class);
      }

      // Construct using com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapHomeInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        homeId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        ownerId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        mapId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        playerCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        status_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.ninelook.wecard.protocol.beans.BeanHomeMessage.internal_static_MapHomeInfo_descriptor;
      }

      public com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapHomeInfo getDefaultInstanceForType() {
        return com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapHomeInfo.getDefaultInstance();
      }

      public com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapHomeInfo build() {
        com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapHomeInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapHomeInfo buildPartial() {
        com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapHomeInfo result = new com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapHomeInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.homeId_ = homeId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.ownerId_ = ownerId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.mapId_ = mapId_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.playerCount_ = playerCount_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.status_ = status_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapHomeInfo) {
          return mergeFrom((com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapHomeInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapHomeInfo other) {
        if (other == com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapHomeInfo.getDefaultInstance()) return this;
        if (other.hasHomeId()) {
          setHomeId(other.getHomeId());
        }
        if (other.hasOwnerId()) {
          setOwnerId(other.getOwnerId());
        }
        if (other.hasMapId()) {
          setMapId(other.getMapId());
        }
        if (other.hasPlayerCount()) {
          setPlayerCount(other.getPlayerCount());
        }
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasHomeId()) {
          
          return false;
        }
        if (!hasOwnerId()) {
          
          return false;
        }
        if (!hasMapId()) {
          
          return false;
        }
        if (!hasPlayerCount()) {
          
          return false;
        }
        if (!hasStatus()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapHomeInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapHomeInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 homeId = 1;
      private int homeId_ ;
      /**
       * <code>required int32 homeId = 1;</code>
       *
       * <pre>
       *homeID
       * </pre>
       */
      public boolean hasHomeId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 homeId = 1;</code>
       *
       * <pre>
       *homeID
       * </pre>
       */
      public int getHomeId() {
        return homeId_;
      }
      /**
       * <code>required int32 homeId = 1;</code>
       *
       * <pre>
       *homeID
       * </pre>
       */
      public Builder setHomeId(int value) {
        bitField0_ |= 0x00000001;
        homeId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 homeId = 1;</code>
       *
       * <pre>
       *homeID
       * </pre>
       */
      public Builder clearHomeId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        homeId_ = 0;
        onChanged();
        return this;
      }

      // required int64 ownerId = 2;
      private long ownerId_ ;
      /**
       * <code>required int64 ownerId = 2;</code>
       *
       * <pre>
       *房主ID
       * </pre>
       */
      public boolean hasOwnerId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int64 ownerId = 2;</code>
       *
       * <pre>
       *房主ID
       * </pre>
       */
      public long getOwnerId() {
        return ownerId_;
      }
      /**
       * <code>required int64 ownerId = 2;</code>
       *
       * <pre>
       *房主ID
       * </pre>
       */
      public Builder setOwnerId(long value) {
        bitField0_ |= 0x00000002;
        ownerId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 ownerId = 2;</code>
       *
       * <pre>
       *房主ID
       * </pre>
       */
      public Builder clearOwnerId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        ownerId_ = 0L;
        onChanged();
        return this;
      }

      // required int32 mapId = 3;
      private int mapId_ ;
      /**
       * <code>required int32 mapId = 3;</code>
       *
       * <pre>
       *地图ID
       * </pre>
       */
      public boolean hasMapId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 mapId = 3;</code>
       *
       * <pre>
       *地图ID
       * </pre>
       */
      public int getMapId() {
        return mapId_;
      }
      /**
       * <code>required int32 mapId = 3;</code>
       *
       * <pre>
       *地图ID
       * </pre>
       */
      public Builder setMapId(int value) {
        bitField0_ |= 0x00000004;
        mapId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 mapId = 3;</code>
       *
       * <pre>
       *地图ID
       * </pre>
       */
      public Builder clearMapId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        mapId_ = 0;
        onChanged();
        return this;
      }

      // required int32 playerCount = 4;
      private int playerCount_ ;
      /**
       * <code>required int32 playerCount = 4;</code>
       *
       * <pre>
       *房间人数
       * </pre>
       */
      public boolean hasPlayerCount() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required int32 playerCount = 4;</code>
       *
       * <pre>
       *房间人数
       * </pre>
       */
      public int getPlayerCount() {
        return playerCount_;
      }
      /**
       * <code>required int32 playerCount = 4;</code>
       *
       * <pre>
       *房间人数
       * </pre>
       */
      public Builder setPlayerCount(int value) {
        bitField0_ |= 0x00000008;
        playerCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 playerCount = 4;</code>
       *
       * <pre>
       *房间人数
       * </pre>
       */
      public Builder clearPlayerCount() {
        bitField0_ = (bitField0_ & ~0x00000008);
        playerCount_ = 0;
        onChanged();
        return this;
      }

      // required int32 status = 5;
      private int status_ ;
      /**
       * <code>required int32 status = 5;</code>
       *
       * <pre>
       *房间状态
       * </pre>
       */
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required int32 status = 5;</code>
       *
       * <pre>
       *房间状态
       * </pre>
       */
      public int getStatus() {
        return status_;
      }
      /**
       * <code>required int32 status = 5;</code>
       *
       * <pre>
       *房间状态
       * </pre>
       */
      public Builder setStatus(int value) {
        bitField0_ |= 0x00000010;
        status_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 status = 5;</code>
       *
       * <pre>
       *房间状态
       * </pre>
       */
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00000010);
        status_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:MapHomeInfo)
    }

    static {
      defaultInstance = new MapHomeInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:MapHomeInfo)
  }

  public interface MapHomeListInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated .MapHomeInfo lMapHomeInfo = 1;
    /**
     * <code>repeated .MapHomeInfo lMapHomeInfo = 1;</code>
     *
     * <pre>
     *地图内的房间列表
     * </pre>
     */
    java.util.List<com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapHomeInfo>
        getLMapHomeInfoList();
    /**
     * <code>repeated .MapHomeInfo lMapHomeInfo = 1;</code>
     *
     * <pre>
     *地图内的房间列表
     * </pre>
     */
    com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapHomeInfo getLMapHomeInfo(int index);
    /**
     * <code>repeated .MapHomeInfo lMapHomeInfo = 1;</code>
     *
     * <pre>
     *地图内的房间列表
     * </pre>
     */
    int getLMapHomeInfoCount();
    /**
     * <code>repeated .MapHomeInfo lMapHomeInfo = 1;</code>
     *
     * <pre>
     *地图内的房间列表
     * </pre>
     */
    java.util.List<? extends com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapHomeInfoOrBuilder>
        getLMapHomeInfoOrBuilderList();
    /**
     * <code>repeated .MapHomeInfo lMapHomeInfo = 1;</code>
     *
     * <pre>
     *地图内的房间列表
     * </pre>
     */
    com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapHomeInfoOrBuilder getLMapHomeInfoOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code MapHomeListInfo}
   *
   * <pre>
   *指定地图的房间列表信息
   * </pre>
   */
  public static final class MapHomeListInfo extends
      com.google.protobuf.GeneratedMessage
      implements MapHomeListInfoOrBuilder {
    // Use MapHomeListInfo.newBuilder() to construct.
    private MapHomeListInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private MapHomeListInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final MapHomeListInfo defaultInstance;
    public static MapHomeListInfo getDefaultInstance() {
      return defaultInstance;
    }

    public MapHomeListInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private MapHomeListInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                lMapHomeInfo_ = new java.util.ArrayList<com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapHomeInfo>();
                mutable_bitField0_ |= 0x00000001;
              }
              lMapHomeInfo_.add(input.readMessage(com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapHomeInfo.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          lMapHomeInfo_ = java.util.Collections.unmodifiableList(lMapHomeInfo_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.ninelook.wecard.protocol.beans.BeanHomeMessage.internal_static_MapHomeListInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.ninelook.wecard.protocol.beans.BeanHomeMessage.internal_static_MapHomeListInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapHomeListInfo.class, com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapHomeListInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<MapHomeListInfo> PARSER =
        new com.google.protobuf.AbstractParser<MapHomeListInfo>() {
      public MapHomeListInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MapHomeListInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<MapHomeListInfo> getParserForType() {
      return PARSER;
    }

    // repeated .MapHomeInfo lMapHomeInfo = 1;
    public static final int LMAPHOMEINFO_FIELD_NUMBER = 1;
    private java.util.List<com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapHomeInfo> lMapHomeInfo_;
    /**
     * <code>repeated .MapHomeInfo lMapHomeInfo = 1;</code>
     *
     * <pre>
     *地图内的房间列表
     * </pre>
     */
    public java.util.List<com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapHomeInfo> getLMapHomeInfoList() {
      return lMapHomeInfo_;
    }
    /**
     * <code>repeated .MapHomeInfo lMapHomeInfo = 1;</code>
     *
     * <pre>
     *地图内的房间列表
     * </pre>
     */
    public java.util.List<? extends com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapHomeInfoOrBuilder>
        getLMapHomeInfoOrBuilderList() {
      return lMapHomeInfo_;
    }
    /**
     * <code>repeated .MapHomeInfo lMapHomeInfo = 1;</code>
     *
     * <pre>
     *地图内的房间列表
     * </pre>
     */
    public int getLMapHomeInfoCount() {
      return lMapHomeInfo_.size();
    }
    /**
     * <code>repeated .MapHomeInfo lMapHomeInfo = 1;</code>
     *
     * <pre>
     *地图内的房间列表
     * </pre>
     */
    public com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapHomeInfo getLMapHomeInfo(int index) {
      return lMapHomeInfo_.get(index);
    }
    /**
     * <code>repeated .MapHomeInfo lMapHomeInfo = 1;</code>
     *
     * <pre>
     *地图内的房间列表
     * </pre>
     */
    public com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapHomeInfoOrBuilder getLMapHomeInfoOrBuilder(
        int index) {
      return lMapHomeInfo_.get(index);
    }

    private void initFields() {
      lMapHomeInfo_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      for (int i = 0; i < getLMapHomeInfoCount(); i++) {
        if (!getLMapHomeInfo(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < lMapHomeInfo_.size(); i++) {
        output.writeMessage(1, lMapHomeInfo_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < lMapHomeInfo_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, lMapHomeInfo_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapHomeListInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapHomeListInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapHomeListInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapHomeListInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapHomeListInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapHomeListInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapHomeListInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapHomeListInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapHomeListInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapHomeListInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapHomeListInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code MapHomeListInfo}
     *
     * <pre>
     *指定地图的房间列表信息
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapHomeListInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.ninelook.wecard.protocol.beans.BeanHomeMessage.internal_static_MapHomeListInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.ninelook.wecard.protocol.beans.BeanHomeMessage.internal_static_MapHomeListInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapHomeListInfo.class, com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapHomeListInfo.Builder.class);
      }

      // Construct using com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapHomeListInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getLMapHomeInfoFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (lMapHomeInfoBuilder_ == null) {
          lMapHomeInfo_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          lMapHomeInfoBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.ninelook.wecard.protocol.beans.BeanHomeMessage.internal_static_MapHomeListInfo_descriptor;
      }

      public com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapHomeListInfo getDefaultInstanceForType() {
        return com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapHomeListInfo.getDefaultInstance();
      }

      public com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapHomeListInfo build() {
        com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapHomeListInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapHomeListInfo buildPartial() {
        com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapHomeListInfo result = new com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapHomeListInfo(this);
        int from_bitField0_ = bitField0_;
        if (lMapHomeInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            lMapHomeInfo_ = java.util.Collections.unmodifiableList(lMapHomeInfo_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.lMapHomeInfo_ = lMapHomeInfo_;
        } else {
          result.lMapHomeInfo_ = lMapHomeInfoBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapHomeListInfo) {
          return mergeFrom((com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapHomeListInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapHomeListInfo other) {
        if (other == com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapHomeListInfo.getDefaultInstance()) return this;
        if (lMapHomeInfoBuilder_ == null) {
          if (!other.lMapHomeInfo_.isEmpty()) {
            if (lMapHomeInfo_.isEmpty()) {
              lMapHomeInfo_ = other.lMapHomeInfo_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureLMapHomeInfoIsMutable();
              lMapHomeInfo_.addAll(other.lMapHomeInfo_);
            }
            onChanged();
          }
        } else {
          if (!other.lMapHomeInfo_.isEmpty()) {
            if (lMapHomeInfoBuilder_.isEmpty()) {
              lMapHomeInfoBuilder_.dispose();
              lMapHomeInfoBuilder_ = null;
              lMapHomeInfo_ = other.lMapHomeInfo_;
              bitField0_ = (bitField0_ & ~0x00000001);
              lMapHomeInfoBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getLMapHomeInfoFieldBuilder() : null;
            } else {
              lMapHomeInfoBuilder_.addAllMessages(other.lMapHomeInfo_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getLMapHomeInfoCount(); i++) {
          if (!getLMapHomeInfo(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapHomeListInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapHomeListInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .MapHomeInfo lMapHomeInfo = 1;
      private java.util.List<com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapHomeInfo> lMapHomeInfo_ =
        java.util.Collections.emptyList();
      private void ensureLMapHomeInfoIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          lMapHomeInfo_ = new java.util.ArrayList<com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapHomeInfo>(lMapHomeInfo_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapHomeInfo, com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapHomeInfo.Builder, com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapHomeInfoOrBuilder> lMapHomeInfoBuilder_;

      /**
       * <code>repeated .MapHomeInfo lMapHomeInfo = 1;</code>
       *
       * <pre>
       *地图内的房间列表
       * </pre>
       */
      public java.util.List<com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapHomeInfo> getLMapHomeInfoList() {
        if (lMapHomeInfoBuilder_ == null) {
          return java.util.Collections.unmodifiableList(lMapHomeInfo_);
        } else {
          return lMapHomeInfoBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .MapHomeInfo lMapHomeInfo = 1;</code>
       *
       * <pre>
       *地图内的房间列表
       * </pre>
       */
      public int getLMapHomeInfoCount() {
        if (lMapHomeInfoBuilder_ == null) {
          return lMapHomeInfo_.size();
        } else {
          return lMapHomeInfoBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .MapHomeInfo lMapHomeInfo = 1;</code>
       *
       * <pre>
       *地图内的房间列表
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapHomeInfo getLMapHomeInfo(int index) {
        if (lMapHomeInfoBuilder_ == null) {
          return lMapHomeInfo_.get(index);
        } else {
          return lMapHomeInfoBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .MapHomeInfo lMapHomeInfo = 1;</code>
       *
       * <pre>
       *地图内的房间列表
       * </pre>
       */
      public Builder setLMapHomeInfo(
          int index, com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapHomeInfo value) {
        if (lMapHomeInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLMapHomeInfoIsMutable();
          lMapHomeInfo_.set(index, value);
          onChanged();
        } else {
          lMapHomeInfoBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .MapHomeInfo lMapHomeInfo = 1;</code>
       *
       * <pre>
       *地图内的房间列表
       * </pre>
       */
      public Builder setLMapHomeInfo(
          int index, com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapHomeInfo.Builder builderForValue) {
        if (lMapHomeInfoBuilder_ == null) {
          ensureLMapHomeInfoIsMutable();
          lMapHomeInfo_.set(index, builderForValue.build());
          onChanged();
        } else {
          lMapHomeInfoBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MapHomeInfo lMapHomeInfo = 1;</code>
       *
       * <pre>
       *地图内的房间列表
       * </pre>
       */
      public Builder addLMapHomeInfo(com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapHomeInfo value) {
        if (lMapHomeInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLMapHomeInfoIsMutable();
          lMapHomeInfo_.add(value);
          onChanged();
        } else {
          lMapHomeInfoBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .MapHomeInfo lMapHomeInfo = 1;</code>
       *
       * <pre>
       *地图内的房间列表
       * </pre>
       */
      public Builder addLMapHomeInfo(
          int index, com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapHomeInfo value) {
        if (lMapHomeInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLMapHomeInfoIsMutable();
          lMapHomeInfo_.add(index, value);
          onChanged();
        } else {
          lMapHomeInfoBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .MapHomeInfo lMapHomeInfo = 1;</code>
       *
       * <pre>
       *地图内的房间列表
       * </pre>
       */
      public Builder addLMapHomeInfo(
          com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapHomeInfo.Builder builderForValue) {
        if (lMapHomeInfoBuilder_ == null) {
          ensureLMapHomeInfoIsMutable();
          lMapHomeInfo_.add(builderForValue.build());
          onChanged();
        } else {
          lMapHomeInfoBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MapHomeInfo lMapHomeInfo = 1;</code>
       *
       * <pre>
       *地图内的房间列表
       * </pre>
       */
      public Builder addLMapHomeInfo(
          int index, com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapHomeInfo.Builder builderForValue) {
        if (lMapHomeInfoBuilder_ == null) {
          ensureLMapHomeInfoIsMutable();
          lMapHomeInfo_.add(index, builderForValue.build());
          onChanged();
        } else {
          lMapHomeInfoBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MapHomeInfo lMapHomeInfo = 1;</code>
       *
       * <pre>
       *地图内的房间列表
       * </pre>
       */
      public Builder addAllLMapHomeInfo(
          java.lang.Iterable<? extends com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapHomeInfo> values) {
        if (lMapHomeInfoBuilder_ == null) {
          ensureLMapHomeInfoIsMutable();
          super.addAll(values, lMapHomeInfo_);
          onChanged();
        } else {
          lMapHomeInfoBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .MapHomeInfo lMapHomeInfo = 1;</code>
       *
       * <pre>
       *地图内的房间列表
       * </pre>
       */
      public Builder clearLMapHomeInfo() {
        if (lMapHomeInfoBuilder_ == null) {
          lMapHomeInfo_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          lMapHomeInfoBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .MapHomeInfo lMapHomeInfo = 1;</code>
       *
       * <pre>
       *地图内的房间列表
       * </pre>
       */
      public Builder removeLMapHomeInfo(int index) {
        if (lMapHomeInfoBuilder_ == null) {
          ensureLMapHomeInfoIsMutable();
          lMapHomeInfo_.remove(index);
          onChanged();
        } else {
          lMapHomeInfoBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .MapHomeInfo lMapHomeInfo = 1;</code>
       *
       * <pre>
       *地图内的房间列表
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapHomeInfo.Builder getLMapHomeInfoBuilder(
          int index) {
        return getLMapHomeInfoFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .MapHomeInfo lMapHomeInfo = 1;</code>
       *
       * <pre>
       *地图内的房间列表
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapHomeInfoOrBuilder getLMapHomeInfoOrBuilder(
          int index) {
        if (lMapHomeInfoBuilder_ == null) {
          return lMapHomeInfo_.get(index);  } else {
          return lMapHomeInfoBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .MapHomeInfo lMapHomeInfo = 1;</code>
       *
       * <pre>
       *地图内的房间列表
       * </pre>
       */
      public java.util.List<? extends com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapHomeInfoOrBuilder>
           getLMapHomeInfoOrBuilderList() {
        if (lMapHomeInfoBuilder_ != null) {
          return lMapHomeInfoBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(lMapHomeInfo_);
        }
      }
      /**
       * <code>repeated .MapHomeInfo lMapHomeInfo = 1;</code>
       *
       * <pre>
       *地图内的房间列表
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapHomeInfo.Builder addLMapHomeInfoBuilder() {
        return getLMapHomeInfoFieldBuilder().addBuilder(
            com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapHomeInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .MapHomeInfo lMapHomeInfo = 1;</code>
       *
       * <pre>
       *地图内的房间列表
       * </pre>
       */
      public com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapHomeInfo.Builder addLMapHomeInfoBuilder(
          int index) {
        return getLMapHomeInfoFieldBuilder().addBuilder(
            index, com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapHomeInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .MapHomeInfo lMapHomeInfo = 1;</code>
       *
       * <pre>
       *地图内的房间列表
       * </pre>
       */
      public java.util.List<com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapHomeInfo.Builder>
           getLMapHomeInfoBuilderList() {
        return getLMapHomeInfoFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapHomeInfo, com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapHomeInfo.Builder, com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapHomeInfoOrBuilder>
          getLMapHomeInfoFieldBuilder() {
        if (lMapHomeInfoBuilder_ == null) {
          lMapHomeInfoBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapHomeInfo, com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapHomeInfo.Builder, com.ninelook.wecard.protocol.beans.BeanHomeMessage.MapHomeInfoOrBuilder>(
                  lMapHomeInfo_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          lMapHomeInfo_ = null;
        }
        return lMapHomeInfoBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:MapHomeListInfo)
    }

    static {
      defaultInstance = new MapHomeListInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:MapHomeListInfo)
  }

  public interface HomeExitInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int64 exitUid = 1;
    /**
     * <code>required int64 exitUid = 1;</code>
     *
     * <pre>
     *退出房间的用户ID
     * </pre>
     */
    boolean hasExitUid();
    /**
     * <code>required int64 exitUid = 1;</code>
     *
     * <pre>
     *退出房间的用户ID
     * </pre>
     */
    long getExitUid();

    // optional int64 newHomeOnwerUid = 2;
    /**
     * <code>optional int64 newHomeOnwerUid = 2;</code>
     *
     * <pre>
     *房主退出后的房主
     * </pre>
     */
    boolean hasNewHomeOnwerUid();
    /**
     * <code>optional int64 newHomeOnwerUid = 2;</code>
     *
     * <pre>
     *房主退出后的房主
     * </pre>
     */
    long getNewHomeOnwerUid();

    // optional bool offline = 3;
    /**
     * <code>optional bool offline = 3;</code>
     *
     * <pre>
     *是否为离线退出
     * </pre>
     */
    boolean hasOffline();
    /**
     * <code>optional bool offline = 3;</code>
     *
     * <pre>
     *是否为离线退出
     * </pre>
     */
    boolean getOffline();
  }
  /**
   * Protobuf type {@code HomeExitInfo}
   *
   * <pre>
   *房间退出信息
   * </pre>
   */
  public static final class HomeExitInfo extends
      com.google.protobuf.GeneratedMessage
      implements HomeExitInfoOrBuilder {
    // Use HomeExitInfo.newBuilder() to construct.
    private HomeExitInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private HomeExitInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final HomeExitInfo defaultInstance;
    public static HomeExitInfo getDefaultInstance() {
      return defaultInstance;
    }

    public HomeExitInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private HomeExitInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              exitUid_ = input.readInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              newHomeOnwerUid_ = input.readInt64();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              offline_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.ninelook.wecard.protocol.beans.BeanHomeMessage.internal_static_HomeExitInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.ninelook.wecard.protocol.beans.BeanHomeMessage.internal_static_HomeExitInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeExitInfo.class, com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeExitInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<HomeExitInfo> PARSER =
        new com.google.protobuf.AbstractParser<HomeExitInfo>() {
      public HomeExitInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new HomeExitInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<HomeExitInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int64 exitUid = 1;
    public static final int EXITUID_FIELD_NUMBER = 1;
    private long exitUid_;
    /**
     * <code>required int64 exitUid = 1;</code>
     *
     * <pre>
     *退出房间的用户ID
     * </pre>
     */
    public boolean hasExitUid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int64 exitUid = 1;</code>
     *
     * <pre>
     *退出房间的用户ID
     * </pre>
     */
    public long getExitUid() {
      return exitUid_;
    }

    // optional int64 newHomeOnwerUid = 2;
    public static final int NEWHOMEONWERUID_FIELD_NUMBER = 2;
    private long newHomeOnwerUid_;
    /**
     * <code>optional int64 newHomeOnwerUid = 2;</code>
     *
     * <pre>
     *房主退出后的房主
     * </pre>
     */
    public boolean hasNewHomeOnwerUid() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int64 newHomeOnwerUid = 2;</code>
     *
     * <pre>
     *房主退出后的房主
     * </pre>
     */
    public long getNewHomeOnwerUid() {
      return newHomeOnwerUid_;
    }

    // optional bool offline = 3;
    public static final int OFFLINE_FIELD_NUMBER = 3;
    private boolean offline_;
    /**
     * <code>optional bool offline = 3;</code>
     *
     * <pre>
     *是否为离线退出
     * </pre>
     */
    public boolean hasOffline() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional bool offline = 3;</code>
     *
     * <pre>
     *是否为离线退出
     * </pre>
     */
    public boolean getOffline() {
      return offline_;
    }

    private void initFields() {
      exitUid_ = 0L;
      newHomeOnwerUid_ = 0L;
      offline_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasExitUid()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, exitUid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, newHomeOnwerUid_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBool(3, offline_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, exitUid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, newHomeOnwerUid_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, offline_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeExitInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeExitInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeExitInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeExitInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeExitInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeExitInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeExitInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeExitInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeExitInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeExitInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeExitInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code HomeExitInfo}
     *
     * <pre>
     *房间退出信息
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeExitInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.ninelook.wecard.protocol.beans.BeanHomeMessage.internal_static_HomeExitInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.ninelook.wecard.protocol.beans.BeanHomeMessage.internal_static_HomeExitInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeExitInfo.class, com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeExitInfo.Builder.class);
      }

      // Construct using com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeExitInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        exitUid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        newHomeOnwerUid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        offline_ = false;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.ninelook.wecard.protocol.beans.BeanHomeMessage.internal_static_HomeExitInfo_descriptor;
      }

      public com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeExitInfo getDefaultInstanceForType() {
        return com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeExitInfo.getDefaultInstance();
      }

      public com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeExitInfo build() {
        com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeExitInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeExitInfo buildPartial() {
        com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeExitInfo result = new com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeExitInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.exitUid_ = exitUid_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.newHomeOnwerUid_ = newHomeOnwerUid_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.offline_ = offline_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeExitInfo) {
          return mergeFrom((com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeExitInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeExitInfo other) {
        if (other == com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeExitInfo.getDefaultInstance()) return this;
        if (other.hasExitUid()) {
          setExitUid(other.getExitUid());
        }
        if (other.hasNewHomeOnwerUid()) {
          setNewHomeOnwerUid(other.getNewHomeOnwerUid());
        }
        if (other.hasOffline()) {
          setOffline(other.getOffline());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasExitUid()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeExitInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ninelook.wecard.protocol.beans.BeanHomeMessage.HomeExitInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int64 exitUid = 1;
      private long exitUid_ ;
      /**
       * <code>required int64 exitUid = 1;</code>
       *
       * <pre>
       *退出房间的用户ID
       * </pre>
       */
      public boolean hasExitUid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int64 exitUid = 1;</code>
       *
       * <pre>
       *退出房间的用户ID
       * </pre>
       */
      public long getExitUid() {
        return exitUid_;
      }
      /**
       * <code>required int64 exitUid = 1;</code>
       *
       * <pre>
       *退出房间的用户ID
       * </pre>
       */
      public Builder setExitUid(long value) {
        bitField0_ |= 0x00000001;
        exitUid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 exitUid = 1;</code>
       *
       * <pre>
       *退出房间的用户ID
       * </pre>
       */
      public Builder clearExitUid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        exitUid_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 newHomeOnwerUid = 2;
      private long newHomeOnwerUid_ ;
      /**
       * <code>optional int64 newHomeOnwerUid = 2;</code>
       *
       * <pre>
       *房主退出后的房主
       * </pre>
       */
      public boolean hasNewHomeOnwerUid() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int64 newHomeOnwerUid = 2;</code>
       *
       * <pre>
       *房主退出后的房主
       * </pre>
       */
      public long getNewHomeOnwerUid() {
        return newHomeOnwerUid_;
      }
      /**
       * <code>optional int64 newHomeOnwerUid = 2;</code>
       *
       * <pre>
       *房主退出后的房主
       * </pre>
       */
      public Builder setNewHomeOnwerUid(long value) {
        bitField0_ |= 0x00000002;
        newHomeOnwerUid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 newHomeOnwerUid = 2;</code>
       *
       * <pre>
       *房主退出后的房主
       * </pre>
       */
      public Builder clearNewHomeOnwerUid() {
        bitField0_ = (bitField0_ & ~0x00000002);
        newHomeOnwerUid_ = 0L;
        onChanged();
        return this;
      }

      // optional bool offline = 3;
      private boolean offline_ ;
      /**
       * <code>optional bool offline = 3;</code>
       *
       * <pre>
       *是否为离线退出
       * </pre>
       */
      public boolean hasOffline() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional bool offline = 3;</code>
       *
       * <pre>
       *是否为离线退出
       * </pre>
       */
      public boolean getOffline() {
        return offline_;
      }
      /**
       * <code>optional bool offline = 3;</code>
       *
       * <pre>
       *是否为离线退出
       * </pre>
       */
      public Builder setOffline(boolean value) {
        bitField0_ |= 0x00000004;
        offline_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool offline = 3;</code>
       *
       * <pre>
       *是否为离线退出
       * </pre>
       */
      public Builder clearOffline() {
        bitField0_ = (bitField0_ & ~0x00000004);
        offline_ = false;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:HomeExitInfo)
    }

    static {
      defaultInstance = new HomeExitInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:HomeExitInfo)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_HomeInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_HomeInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_MapInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_MapInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_WarInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_WarInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_LoadedInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_LoadedInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_HomeGoInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_HomeGoInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_WarAwardInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_WarAwardInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_WarFinishInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_WarFinishInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_MapHomeInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_MapHomeInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_MapHomeListInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_MapHomeListInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_HomeExitInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_HomeExitInfo_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\033beans/BeanHomeMessage.proto\032\034beans/Bea" +
      "nSceneMessage.proto\032\033beans/BeanHeroMessa" +
      "ge.proto\032\037beans/BeanCreatureMessage.prot" +
      "o\032\034beans/BeanBuildMessage.proto\032\035beans/B" +
      "eanCommonMessage.proto\"a\n\010HomeInfo\022\016\n\006ho" +
      "meId\030\001 \002(\005\022\020\n\010ownerUid\030\002 \002(\003\022\016\n\006status\030\003" +
      " \002(\005\022#\n\016joinPlayerList\030\004 \003(\0132\013.PlayerInf" +
      "o\"\'\n\007MapInfo\022\r\n\005mapId\030\001 \002(\005\022\r\n\005width\030\002 \002" +
      "(\005\"\241\001\n\007WarInfo\022\016\n\006homeId\030\001 \002(\005\022\031\n\007mapInf" +
      "o\030\002 \002(\0132\010.MapInfo\022\037\n\014heroInfoList\030\003 \003(\0132",
      "\t.HeroInfo\022\'\n\020creatureInfoList\030\004 \003(\0132\r.C" +
      "reatureInfo\022!\n\rbuildInfoList\030\005 \003(\0132\n.Bui" +
      "ldInfo\"*\n\nLoadedInfo\022\016\n\006homeId\030\001 \002(\005\022\014\n\004" +
      "lUid\030\002 \003(\003\".\n\nHomeGoInfo\022 \n\013lPlayerInfo\030" +
      "\001 \003(\0132\013.PlayerInfo\"P\n\014WarAwardInfo\022\013\n\003ui" +
      "d\030\001 \002(\003\022\021\n\tawardType\030\002 \002(\005\022 \n\tawardList\030" +
      "\003 \003(\0132\r.ItemByIntInt\"Q\n\rWarFinishInfo\022\013\n" +
      "\003win\030\001 \001(\010\022\016\n\006lAward\030\002 \003(\005\022#\n\014warAwardIn" +
      "fo\030\003 \003(\0132\r.WarAwardInfo\"b\n\013MapHomeInfo\022\016" +
      "\n\006homeId\030\001 \002(\005\022\017\n\007ownerId\030\002 \002(\003\022\r\n\005mapId",
      "\030\003 \002(\005\022\023\n\013playerCount\030\004 \002(\005\022\016\n\006status\030\005 " +
      "\002(\005\"5\n\017MapHomeListInfo\022\"\n\014lMapHomeInfo\030\001" +
      " \003(\0132\014.MapHomeInfo\"I\n\014HomeExitInfo\022\017\n\007ex" +
      "itUid\030\001 \002(\003\022\027\n\017newHomeOnwerUid\030\002 \001(\003\022\017\n\007" +
      "offline\030\003 \001(\010B\"\n com.ninelook.wecard.proto" +
      "col.beans"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_HomeInfo_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_HomeInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_HomeInfo_descriptor,
              new java.lang.String[] { "HomeId", "OwnerUid", "Status", "JoinPlayerList", });
          internal_static_MapInfo_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_MapInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_MapInfo_descriptor,
              new java.lang.String[] { "MapId", "Width", });
          internal_static_WarInfo_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_WarInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_WarInfo_descriptor,
              new java.lang.String[] { "HomeId", "MapInfo", "HeroInfoList", "CreatureInfoList", "BuildInfoList", });
          internal_static_LoadedInfo_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_LoadedInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_LoadedInfo_descriptor,
              new java.lang.String[] { "HomeId", "LUid", });
          internal_static_HomeGoInfo_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_HomeGoInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_HomeGoInfo_descriptor,
              new java.lang.String[] { "LPlayerInfo", });
          internal_static_WarAwardInfo_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_WarAwardInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_WarAwardInfo_descriptor,
              new java.lang.String[] { "Uid", "AwardType", "AwardList", });
          internal_static_WarFinishInfo_descriptor =
            getDescriptor().getMessageTypes().get(6);
          internal_static_WarFinishInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_WarFinishInfo_descriptor,
              new java.lang.String[] { "Win", "LAward", "WarAwardInfo", });
          internal_static_MapHomeInfo_descriptor =
            getDescriptor().getMessageTypes().get(7);
          internal_static_MapHomeInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_MapHomeInfo_descriptor,
              new java.lang.String[] { "HomeId", "OwnerId", "MapId", "PlayerCount", "Status", });
          internal_static_MapHomeListInfo_descriptor =
            getDescriptor().getMessageTypes().get(8);
          internal_static_MapHomeListInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_MapHomeListInfo_descriptor,
              new java.lang.String[] { "LMapHomeInfo", });
          internal_static_HomeExitInfo_descriptor =
            getDescriptor().getMessageTypes().get(9);
          internal_static_HomeExitInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_HomeExitInfo_descriptor,
              new java.lang.String[] { "ExitUid", "NewHomeOnwerUid", "Offline", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.ninelook.wecard.protocol.beans.BeanSceneMessage.getDescriptor(),
          com.ninelook.wecard.protocol.beans.BeanHeroMessage.getDescriptor(),
          com.ninelook.wecard.protocol.beans.BeanCreatureMessage.getDescriptor(),
          com.ninelook.wecard.protocol.beans.BeanBuildMessage.getDescriptor(),
          com.ninelook.wecard.protocol.beans.BeanCommonMessage.getDescriptor(),
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
